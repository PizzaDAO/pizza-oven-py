# this will run all the containers locally
# It mounts the codebase within the container and runs the APIs
# with hot reload enabled.

version: "3.8"
services:
  pizza-oven:
    depends_on:
      - chainlink
      - ipfs0
    build:
      context: .
      target: dev
      network: host
    volumes:
      - "./app:/app/app"
      - "./data:/app/data"
      - "./natron:/app/natron"
      - "./ingredients-db:/app/ingredients-db"
    ports:
      - 8000:8000
    networks:
      - rare-pizzas
    environment:
      API_MODE: "development"
      PROJECT_NAME: "Rare Pizzas Kitchen"
      PORT: 8000

  # Add a chainlink node
  chainlink:
    depends_on:
      chainlink-db:
        condition: service_healthy
    build:
      context: ./chainlink
      target: dev
    entrypoint: /bin/sh -c "chainlink node start -d -p /run/secrets/password -a /run/secrets/api"
    volumes: # mount the working directory
      - "./chainlink:/chainlink"
    ports:
      - 6688:6688
    networks:
      - rare-pizzas
    environment:
      PORT: 6688
      DATABASE_URL: postgresql://postgres:$CHAINLINK_PGPASSWORD@chainlink-db:5432/ChainlinkDB?sslmode=disable
    env_file:
      - "./chainlink/.env"
    secrets:
      - password
      - api

  # Add a chainlink database
  chainlink-db:
    container_name: chainlink-db
    image: postgres:11.6
    volumes:
      - chainlink-db-data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ChainlinkDB
      POSTGRES_PASSWORD: $CHAINLINK_PGPASSWORD
    ports:
      - 5432:5432
    networks:
      - rare-pizzas
    healthcheck:
      test: ["CMD", "pg_isready", "-q", "-d", "ChainlinkDB", "-U", "postgres"]
      timeout: 5s
      interval: 10s
      retries: 10

  # Add IPFS node
  ipfs0:
    container_name: ipfs0
    image: ipfs/go-ipfs:v0.7.0
    volumes:
      - ./ipfs/data:/data/ipfs # mount the ipfs data store locally
    ports:
      - 4001:4001 # ipfs swarm - (do not expose externally)
      - 5001:5001 # ipfs api - (do not expose externally)
      - 8080:8080 # ipfs gateway - expose if needed/wanted
    networks:
      - rare-pizzas
    environment:
      - IPFS_PROFILE=server

networks:
  rare-pizzas:
    driver: bridge

# configure some dev secrets (insecure, don't use in prod)
secrets:
  password:
    file: "./chainlink/.password"
  api:
    file: "./chainlink/.api"

volumes:
  chainlink-db-data:
