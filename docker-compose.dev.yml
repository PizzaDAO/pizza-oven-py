# this will run all the containers locally
# It mounts the codebase within the container and runs the APIs
# with hot reload enabled.

version: "3.8"
services:
  pizza-oven:
    image: rarepizzaskitchen.azurecr.io/pizza-kitchen-python:0.0.1
    depends_on:
      - chainlink-rinkeby
      - ipfs0
    build:
      context: .
      target: dev
      network: host
    volumes:
      - "./.cache:/app/.cache"
      - "./app:/app/app"
      - "./data:/app/data"
      - "./fonts:/app/fonts"
      - "./natron:/app/natron"
      - "./ingredients-db:/app/ingredients-db"
      - "./output:/app/output"
      - "./secrets:/app/secrets"
    ports:
      - 8000:8000
    networks:
      - rare-pizzas
    env_file: .env

  # Add IPFS node
  # only used during development
  ipfs0:
    container_name: ipfs0
    image: ipfs/go-ipfs:v0.7.0
    volumes:
      - ./ipfs/data:/data/ipfs # mount the ipfs data store locally
    ports:
      - 4001:4001 # ipfs swarm - (do not expose externally)
      - 5001:5001 # ipfs api - (do not expose externally)
      - 8080:8080 # ipfs gateway - expose if needed/wanted
    networks:
      - rare-pizzas
    environment:
      - IPFS_PROFILE=server

  # Add a postgres database
  postgres-database:
    container_name: pizza-database
    build:
      context: ./database
    volumes:
      - ./database/db-data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: $CHAINLINK_RINKEBY_DB_NAME
      POSTGRES_PASSWORD: $CHAINLINK_RINKEBY_DB_PASSWORD
    ports:
      - 5432:5432
    networks:
      - rare-pizzas
    healthcheck:
      test:
        [
          "CMD",
          "pg_isready",
          "-q",
          "-d",
          "ChainlinkRinkebyDB",
          "-U",
          "postgres",
        ]
      timeout: 5s
      interval: 10s
      retries: 10

  # Add a rinkeby chainlink node
  chainlink-rinkeby:
    image: rarepizzaskitchen.azurecr.io/chainlink-rinkeby:0.10.3
    depends_on:
      postgres-database:
        condition: service_healthy
    build:
      context: ./chainlink
      target: dev
    entrypoint: /bin/sh -c "chainlink local import /run/secrets/keystore && chainlink node start -d -p /run/secrets/password -a /run/secrets/api"
    volumes: # mount the working directory
      - "./chainlink/rinkeby:/chainlink"
    ports:
      - 6688:6688
    networks:
      - rare-pizzas
    environment:
      PORT: 6688
      LINK_CONTRACT_ADDRESS: $CHAINLINK_RINKEBY_TOKEN
      ETH_URL: $ETHEREUM_RINKEBY_SOCKET_SERVER
      DATABASE_URL: postgresql://$CHAINLINK_RINKEBY_DB_USERNAME:$CHAINLINK_RINKEBY_DB_PASSWORD@$CHAINLINK_RINKEBY_DATABASE_SERVER:5432/$CHAINLINK_RINKEBY_DB_NAME?sslmode=disable
    env_file:
      - "./chainlink/.env"
    secrets:
      - keystore
      - password
      - api

networks:
  rare-pizzas:
    driver: bridge

# configure some dev secrets (insecure, don't use in prod)
secrets:
  keystore:
    file: "./secrets/UTC--2021-05-01T18-03-43.214447000Z--bBa8473580dB06239f1383753e1ed714E4eEd6f5"
  password:
    file: "./secrets/.chainlink.wallet.1.rinkeby"
  api:
    file: "./secrets/.chainlink.api.rinkeby"

volumes:
  chainlink-db-data:
