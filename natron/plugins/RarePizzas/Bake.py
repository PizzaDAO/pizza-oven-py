# -*- coding: utf-8 -*-
# DO NOT EDIT THIS FILE
# Natron PyPlug
# This file was automatically generated by Natron PyPlug exporter version 10.

# Hand-written code should be added in a separate file named BakeExt.py
# See http://natron.readthedocs.org/en/master/devel/groups.html#adding-hand-written-code-callbacks-etc
# Note that Viewers are never exported

import NatronEngine
import sys

# Try to import the extensions file where callbacks and hand-written code should be located.
try:
    from BakeExt import *
except ImportError:
    pass

def getPluginID():
    return "Bake"

def getLabel():
    return "Bake"

def getVersion():
    return 1

def getGrouping():
    return ""

def createInstance(app,group):
    # Create all nodes in the group

    # Create the parameters of the group node the same way we did for all internal nodes
    lastNode = group
    lastNode.setColor(0.7, 0.7, 0.7)

    # Create the user parameters
    lastNode.csv = lastNode.createPageParam("csv", "ingredient-db.csv")
    param = lastNode.createFileParam("ingredientdbr", "ingredient-db CSV")
    param.setSequenceEnabled(False)

    # Add the param to the page
    lastNode.csv.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue("/Users/ashafer/Development/pizza-oven-tmp/natron/ingredients-db.csv")
    lastNode.ingredientdbr = param
    del param

    param = lastNode.createIntParam("unique_id", "Ingredient Code")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(0, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.csv.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(3000, 0)
    lastNode.unique_id = param
    del param

    param = lastNode.createBooleanParam("force_single", "1024x1024")

    # Add the param to the page
    lastNode.csv.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(False)
    param.setAnimationEnabled(True)
    lastNode.force_single = param
    del param

    param = lastNode.createButtonParam("image_read", "Load Image")

    # Add the param to the page
    lastNode.csv.addParam(param)

    # Set param properties
    param.setHelp("Read Just the Image Data, but keep the Baking Data.")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    lastNode.image_read = param
    del param

    param = lastNode.createButtonParam("csv_read", "Load  Ingredient")

    # Add the param to the page
    lastNode.csv.addParam(param)

    # Set param properties
    param.setHelp("Read All Data")
    param.setAddNewLine(False)
    param.setEvaluateOnChange(False)
    lastNode.csv_read = param
    del param

    param = lastNode.createStringParam("s________blank", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.csv.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.s________blank = param
    del param

    param = lastNode.createSeparatorParam("sep_arater", "Ingredient Metadata")

    # Add the param to the page
    lastNode.csv.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.sep_arater = param
    del param

    param = lastNode.createStringParam("nicename", "Nice Name")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)
    param.setDefaultValue("Nice Name:")
    param.restoreDefaultValue()

    # Add the param to the page
    lastNode.csv.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    param.setValue("Name:            Mozzarella")
    lastNode.nicename = param
    del param

    param = lastNode.createStringParam("filename_paste", "Filename")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)
    param.setDefaultValue("Filename: ")
    param.restoreDefaultValue()

    # Add the param to the page
    lastNode.csv.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue("Filename:       3000-cheese-mozzarella.png")
    lastNode.filename_paste = param
    del param

    param = lastNode.createStringParam("description", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)
    param.setDefaultValue("Description:")
    param.restoreDefaultValue()

    # Add the param to the page
    lastNode.csv.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    param.setValue("Description:   ")
    lastNode.description = param
    del param

    param = lastNode.createSeparatorParam("Sep_metadata", "")

    # Add the param to the page
    lastNode.csv.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.Sep_metadata = param
    del param

    param = lastNode.createButtonParam("csv_write", "Save Ingredient")

    # Add the param to the page
    lastNode.csv.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    lastNode.csv_write = param
    del param

    param = lastNode.createStringParam("label_date", "Latest Saved: ")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)
    param.setDefaultValue("Latest Save Date: ")
    param.restoreDefaultValue()

    # Add the param to the page
    lastNode.csv.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(False)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    param.setValue("Last Saved: 2021-05-28 16:27:13.423723")
    lastNode.label_date = param
    del param

    param = lastNode.createSeparatorParam("sep____datatabs", "")

    # Add the param to the page
    lastNode.csv.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.sep____datatabs = param
    del param

    param = lastNode.createGroupParam("i_code", "Ingredient Codes")
    param.setAsTab()

    # Add the param to the page
    lastNode.csv.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setOpened(True)
    lastNode.i_code = param
    del param

    param = lastNode.createStringParam("ingredient_db", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeMultiLine)

    # Add the param to the group, no need to add it to the page
    lastNode.i_code.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.ingredient_db = param
    del param

    param = lastNode.createGroupParam("i_db", "Ingredient DB")
    param.setAsTab()

    # Add the param to the page
    lastNode.csv.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setOpened(True)
    lastNode.i_db = param
    del param

    param = lastNode.createStringParam("ingredient_row", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeMultiLine)

    # Add the param to the group, no need to add it to the page
    lastNode.i_db.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.ingredient_row = param
    del param

    param = lastNode.createButtonParam("show_csv_row", "Refresh Ingredient Tabs")

    # Add the param to the page
    lastNode.csv.addParam(param)

    # Set param properties
    param.setHelp("Show the current Row in JSON format")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    lastNode.show_csv_row = param
    del param

    lastNode.Images = lastNode.createPageParam("Images", "Image Layers")
    param = lastNode.createGroupParam("Current", "Current")

    # Add the param to the page
    lastNode.Images.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setOpened(True)
    lastNode.Current = param
    del param

    param = lastNode.createFileParam("read_filename", "Ingredient Image")
    param.setSequenceEnabled(False)

    # Add the param to the group, no need to add it to the page
    lastNode.Current.addParam(param)

    # Set param properties
    param.setHelp("Filename of the ingredient\r\n\r\n[Project]/../ingredient-db/{ingredient name}")
    param.setAddNewLine(True)
    param.setAnimationEnabled(False)
    param.setValue("[Project]/../ingredients-db/3000-cheese-mozzarella.png")
    lastNode.read_filename = param
    del param

    param = lastNode.createBooleanParam("do_physical", "Use Ingredient Image")

    # Add the param to the group, no need to add it to the page
    lastNode.Current.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(True)
    lastNode.do_physical = param
    del param

    param = lastNode.createChoiceParam("layer_current", "Layer Assignment")
    entries = [ ("layer-0", ""),
    ("layer-1", ""),
    ("layer-2", ""),
    ("layer-3", ""),
    ("layer-4", ""),
    ("layer-5", ""),
    ("layer-6", ""),
    ("layer-7", "")]
    param.setOptions(entries)
    del entries
    param.setDefaultValue("layer-5")
    param.restoreDefaultValue()

    # Add the param to the group, no need to add it to the page
    lastNode.Current.addParam(param)

    # Set param properties
    param.setHelp("The position this ingredient sits in the pizza stack")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.set("layer-4")
    lastNode.layer_current = param
    del param

    param = lastNode.createButtonParam("Render", "Render")

    # Add the param to the group, no need to add it to the page
    lastNode.Current.addParam(param)

    # Set param properties
    param.setHelp("Render this layer")
    param.setAddNewLine(False)
    param.setEvaluateOnChange(False)
    lastNode.Render = param
    del param

    param = lastNode.createGroupParam("layer_tab", "Layers")

    # Add the param to the page
    lastNode.Images.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setOpened(True)
    lastNode.layer_tab = param
    del param

    param = lastNode.createBooleanParam("enable_renders", "View Layer Renders")

    # Add the param to the group, no need to add it to the page
    lastNode.layer_tab.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.enable_renders = param
    del param

    param = lastNode.createFileParam("layer0", "Layer 0 (box)")
    param.setSequenceEnabled(False)

    # Add the param to the group, no need to add it to the page
    lastNode.layer_tab.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(False)
    param.setValue("[Project]/../.cache/output/rarepizza-#####-layer-0.png")
    lastNode.layer0 = param
    del param

    param = lastNode.createBooleanParam("load0", "Load 0")

    # Add the param to the group, no need to add it to the page
    lastNode.layer_tab.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(False)
    param.setAnimationEnabled(True)
    param.setValue(True)
    lastNode.load0 = param
    del param

    param = lastNode.createFileParam("layer1", "Layer 1 (paper)")
    param.setSequenceEnabled(False)

    # Add the param to the group, no need to add it to the page
    lastNode.layer_tab.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(False)
    param.setValue("[Project]/../.cache/output/rarepizza-#####-layer-1.png")
    lastNode.layer1 = param
    del param

    param = lastNode.createBooleanParam("load1", "Load 1")

    # Add the param to the group, no need to add it to the page
    lastNode.layer_tab.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(False)
    param.setAnimationEnabled(True)
    param.setValue(True)
    lastNode.load1 = param
    del param

    param = lastNode.createFileParam("layer2", "Layer 2 (crust)")
    param.setSequenceEnabled(False)

    # Add the param to the group, no need to add it to the page
    lastNode.layer_tab.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(False)
    param.setValue("[Project]/../.cache/output/rarepizza-#####-layer-2.png")
    lastNode.layer2 = param
    del param

    param = lastNode.createBooleanParam("load2", "Load 2")

    # Add the param to the group, no need to add it to the page
    lastNode.layer_tab.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(False)
    param.setAnimationEnabled(True)
    param.setValue(True)
    lastNode.load2 = param
    del param

    param = lastNode.createFileParam("layer3", "Layer 3 (sauce)")
    param.setSequenceEnabled(False)

    # Add the param to the group, no need to add it to the page
    lastNode.layer_tab.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(False)
    param.setValue("[Project]/../.cache/output/rarepizza-#####-layer-3.png")
    lastNode.layer3 = param
    del param

    param = lastNode.createBooleanParam("load3", "Load 3")

    # Add the param to the group, no need to add it to the page
    lastNode.layer_tab.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(False)
    param.setAnimationEnabled(True)
    param.setValue(True)
    lastNode.load3 = param
    del param

    param = lastNode.createFileParam("layer4", "Layer 4 (cheese)")
    param.setSequenceEnabled(False)

    # Add the param to the group, no need to add it to the page
    lastNode.layer_tab.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(False)
    param.setValue("[Project]/../.cache/output/rarepizza-#####-layer-4.png")
    lastNode.layer4 = param
    del param

    param = lastNode.createBooleanParam("load4", "Load 4")

    # Add the param to the group, no need to add it to the page
    lastNode.layer_tab.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(False)
    param.setAnimationEnabled(True)
    lastNode.load4 = param
    del param

    param = lastNode.createFileParam("layer5", "Layer 5 (topping1)")
    param.setSequenceEnabled(False)

    # Add the param to the group, no need to add it to the page
    lastNode.layer_tab.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(False)
    param.setValue("[Project]/../.cache/output/rarepizza-#####-layer-5.png")
    lastNode.layer5 = param
    del param

    param = lastNode.createBooleanParam("load5", "Load 5")

    # Add the param to the group, no need to add it to the page
    lastNode.layer_tab.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(False)
    param.setAnimationEnabled(True)
    lastNode.load5 = param
    del param

    param = lastNode.createFileParam("layer6", "Layer 6 (topping2)")
    param.setSequenceEnabled(False)

    # Add the param to the group, no need to add it to the page
    lastNode.layer_tab.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(False)
    param.setValue("[Project]/../.cache/output/rarepizza-#####-layer-6.png")
    lastNode.layer6 = param
    del param

    param = lastNode.createBooleanParam("load6", "Load 6")

    # Add the param to the group, no need to add it to the page
    lastNode.layer_tab.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(False)
    param.setAnimationEnabled(True)
    lastNode.load6 = param
    del param

    param = lastNode.createFileParam("layer7", "Layer 7 (topping3)")
    param.setSequenceEnabled(False)

    # Add the param to the group, no need to add it to the page
    lastNode.layer_tab.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(False)
    param.setValue("[Project]/../.cache/output/rarepizza-#####-layer-7.png")
    lastNode.layer7 = param
    del param

    param = lastNode.createBooleanParam("load7", "Load 7")

    # Add the param to the group, no need to add it to the page
    lastNode.layer_tab.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(False)
    param.setAnimationEnabled(True)
    lastNode.load7 = param
    del param

    lastNode.Bake = lastNode.createPageParam("Bake", "Baking")
    param = lastNode.createStringParam("version", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)
    param.setDefaultValue("Bake v2.10.24 (shrimp - Oct 22, 2021)")
    param.restoreDefaultValue()

    # Add the param to the page
    lastNode.Bake.addParam(param)

    # Set param properties
    param.setHelp("Bake v2.10.24 - added enableMask")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.version = param
    del param

    param = lastNode.createGroupParam("image_ops", "image operations")

    # Add the param to the page
    lastNode.Bake.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setOpened(True)
    lastNode.image_ops = param
    del param

    param = lastNode.createBooleanParam("do_weld", "do_weld (potassium) mg")

    # Add the param to the group, no need to add it to the page
    lastNode.image_ops.addParam(param)

    # Set param properties
    param.setHelp("Potassium is found naturally in many foods and as a supplement. Its main role in the body is to help maintain normal levels of fluid inside our cells. Sodium, ...")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.do_weld = param
    del param

    param = lastNode.createBooleanParam("do_separation", "do_separation (vitamin_c) mg")

    # Add the param to the group, no need to add it to the page
    lastNode.image_ops.addParam(param)

    # Set param properties
    param.setHelp("This changes the interior of the ingredient, how solid or disolved it becomes.")
    param.setAddNewLine(True)
    param.setAnimationEnabled(False)
    param.setValue(True)
    lastNode.do_separation = param
    del param

    param = lastNode.createBooleanParam("do_burn_before", "do_burn_before (magnesium) mg")

    # Add the param to the group, no need to add it to the page
    lastNode.image_ops.addParam(param)

    # Set param properties
    param.setHelp("Apply Burning look before melting the and lumping. By burning before, you change the characistics of the lumpiness.")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(True)
    lastNode.do_burn_before = param
    del param

    param = lastNode.createBooleanParam("do_melt", "do_melt (vitamin_b5) mg")

    # Add the param to the group, no need to add it to the page
    lastNode.image_ops.addParam(param)

    # Set param properties
    param.setHelp("Melting changes and warps the ingredient to simulate a liquid effect")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(True)
    lastNode.do_melt = param
    del param

    param = lastNode.createBooleanParam("do_lumpiness", "do_lumpiness (vitamin_d) mg")

    # Add the param to the group, no need to add it to the page
    lastNode.image_ops.addParam(param)

    # Set param properties
    param.setHelp("Lumpiness is a complex effect that is very CPU intensive. By checking this you will significantly slow down your computer.\r\n\r\nThe effect adds two scales of splotchy burn patterns to the surface of the ingrendient and simulates a lighting effect to accentuate the surface texture.\r\n\r\nTurn this off until last.")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(True)
    lastNode.do_lumpiness = param
    del param

    param = lastNode.createBooleanParam("do_burn_after", "do_burn_after (vitamin_b7) mg")

    # Add the param to the group, no need to add it to the page
    lastNode.image_ops.addParam(param)

    # Set param properties
    param.setHelp("Apply the burn color calls after CPU intensive melting and lumpiness. This only changes the color of the burn, not the characteristics of the burn surface, like burn before.")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(True)
    lastNode.do_burn_after = param
    del param

    param = lastNode.createButtonParam("bake_zero_all", "Zero All Baking Values")

    # Add the param to the group, no need to add it to the page
    lastNode.image_ops.addParam(param)

    # Set param properties
    param.setHelp("Turns all baking off")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    lastNode.bake_zero_all = param
    del param

    param = lastNode.createBooleanParam("doMask", "doMask")

    # Add the param to the group, no need to add it to the page
    lastNode.image_ops.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.doMask = param
    del param

    param = lastNode.createGroupParam("weld", "weld")

    # Add the param to the page
    lastNode.Bake.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setOpened(True)
    lastNode.weld = param
    del param

    param = lastNode.createDoubleParam("moisture", "moisture")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)

    # Add the param to the group, no need to add it to the page
    lastNode.weld.addParam(param)

    # Set param properties
    param.setHelp("moisture content")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.moisture = param
    del param

    param = lastNode.createGroupParam("separation", "separation")

    # Add the param to the page
    lastNode.Bake.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setOpened(True)
    lastNode.separation = param
    del param

    param = lastNode.createDoubleParam("clotting", "clotting (cholesterol) g")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)

    # Add the param to the group, no need to add it to the page
    lastNode.separation.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(21.5, 0)
    lastNode.clotting = param
    del param

    param = lastNode.createDoubleParam("thinning", "thinning (vitamin_a) mg")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)

    # Add the param to the group, no need to add it to the page
    lastNode.separation.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.thinning = param
    del param

    param = lastNode.createIntParam("coagulation", "coagulation (dietary_fiber) g")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)

    # Add the param to the group, no need to add it to the page
    lastNode.separation.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(40, 0)
    lastNode.coagulation = param
    del param

    param = lastNode.createDoubleParam("absorption", "Absorption (vitamin_b6) mg")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(50, 0)
    param.restoreDefaultValue(0)

    # Add the param to the group, no need to add it to the page
    lastNode.separation.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.absorption = param
    del param

    param = lastNode.createGroupParam("burn", "burn")

    # Add the param to the page
    lastNode.Bake.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setOpened(True)
    lastNode.burn = param
    del param

    param = lastNode.createDoubleParam("burn_amt", "burn_amt (sugar) g")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)

    # Add the param to the group, no need to add it to the page
    lastNode.burn.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(29.7, 0)
    lastNode.burn_amt = param
    del param

    param = lastNode.createDoubleParam("burn_edges", "burn_edges (protien) g")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)

    # Add the param to the group, no need to add it to the page
    lastNode.burn.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(24.1, 0)
    lastNode.burn_edges = param
    del param

    param = lastNode.createDoubleParam("caramelization", "caramelization (iron) mg")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)

    # Add the param to the group, no need to add it to the page
    lastNode.burn.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.caramelization = param
    del param

    param = lastNode.createGroupParam("melt_", "melt")

    # Add the param to the page
    lastNode.Bake.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setOpened(True)
    lastNode.melt_ = param
    del param

    param = lastNode.createDoubleParam("liquify", "liquify (complex_carb) g")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)

    # Add the param to the group, no need to add it to the page
    lastNode.melt_.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(3.2, 0)
    lastNode.liquify = param
    del param

    param = lastNode.createDoubleParam("amplify", "amplify (selenium) mg")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)

    # Add the param to the group, no need to add it to the page
    lastNode.melt_.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(3, 0)
    lastNode.amplify = param
    del param

    param = lastNode.createIntParam("expand", "expand (vitamin_k) mg")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(50, 0)
    param.restoreDefaultValue(0)

    # Add the param to the group, no need to add it to the page
    lastNode.melt_.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(60, 0)
    lastNode.expand = param
    del param

    param = lastNode.createGroupParam("lumpiness", "lumpiness")

    # Add the param to the page
    lastNode.Bake.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setOpened(True)
    lastNode.lumpiness = param
    del param

    param = lastNode.createDoubleParam("lumpy_big_mix", "lumpy_big_mix (vitamin_b12) mg")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)

    # Add the param to the group, no need to add it to the page
    lastNode.lumpiness.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(6.9, 0)
    lastNode.lumpy_big_mix = param
    del param

    param = lastNode.createDoubleParam("lumpy_big_size", "lumpy_big_size (calories_from_fat) g")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)

    # Add the param to the group, no need to add it to the page
    lastNode.lumpiness.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(4.3, 0)
    lastNode.lumpy_big_size = param
    del param

    param = lastNode.createDoubleParam("lumpy_big_intensity", "lumpy_big_intensity (vitamin_e) mg")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)

    # Add the param to the group, no need to add it to the page
    lastNode.lumpiness.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(6.9, 0)
    lastNode.lumpy_big_intensity = param
    del param

    param = lastNode.createSeparatorParam("sep_lump1", "")

    # Add the param to the group, no need to add it to the page
    lastNode.lumpiness.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.sep_lump1 = param
    del param

    param = lastNode.createDoubleParam("lumpy_small_mix", "lumpy_small_mix (zinc) mg")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)

    # Add the param to the group, no need to add it to the page
    lastNode.lumpiness.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(5.8, 0)
    lastNode.lumpy_small_mix = param
    del param

    param = lastNode.createDoubleParam("lumpy_small_size", "lumpy_small_size (saturated_fat) g")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)

    # Add the param to the group, no need to add it to the page
    lastNode.lumpiness.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(6.4, 0)
    lastNode.lumpy_small_size = param
    del param

    param = lastNode.createSeparatorParam("sep_lump2", "")

    # Add the param to the group, no need to add it to the page
    lastNode.lumpiness.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.sep_lump2 = param
    del param

    param = lastNode.createDoubleParam("lumpy_height", "lumpy_height (trans_fat) g")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)

    # Add the param to the group, no need to add it to the page
    lastNode.lumpiness.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(8.9, 0)
    lastNode.lumpy_height = param
    del param

    param = lastNode.createDoubleParam("lumpy_mix", "lumpy_mix (sodium) mg")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)

    # Add the param to the group, no need to add it to the page
    lastNode.lumpiness.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(13, 0)
    lastNode.lumpy_mix = param
    del param

    param = lastNode.createDoubleParam("lumpy_wet", "lumpy_wet (monosaturated_fat) g")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)

    # Add the param to the group, no need to add it to the page
    lastNode.lumpiness.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(10, 0)
    lastNode.lumpy_wet = param
    del param

    param = lastNode.createDoubleParam("lumpy_rough", "lumpy_rough (calcium) mg")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)

    # Add the param to the group, no need to add it to the page
    lastNode.lumpiness.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(11.5, 0)
    lastNode.lumpy_rough = param
    del param

    param = lastNode.createGroupParam("blend", "blend")

    # Add the param to the page
    lastNode.Bake.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setOpened(True)
    lastNode.blend = param
    del param

    param = lastNode.createDoubleParam("edge_size", "edge_size (riboflavin) mg")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)

    # Add the param to the group, no need to add it to the page
    lastNode.blend.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.edge_size = param
    del param

    param = lastNode.createDoubleParam("edge_falloff", "edge_falloff (thiamin) mg")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)

    # Add the param to the group, no need to add it to the page
    lastNode.blend.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.edge_falloff = param
    del param

    param = lastNode.createDoubleParam("thickness", "thickness (folate) mg")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)

    # Add the param to the group, no need to add it to the page
    lastNode.blend.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.thickness = param
    del param

    param = lastNode.createGroupParam("charring_group", "Charring")

    # Add the param to the page
    lastNode.Bake.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setOpened(True)
    lastNode.charring_group = param
    del param

    param = lastNode.createDoubleParam("burn_amt2", "burn_amt (added_sugar) g")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)

    # Add the param to the group, no need to add it to the page
    lastNode.charring_group.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(15.1, 0)
    lastNode.burn_amt2 = param
    del param

    param = lastNode.createDoubleParam("burn_edges2", "burn_edges2 (chromium) g")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)

    # Add the param to the group, no need to add it to the page
    lastNode.charring_group.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(5.3, 0)
    lastNode.burn_edges2 = param
    del param

    param = lastNode.createDoubleParam("caramelization2", "caramelization2 (manganese) mg")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)

    # Add the param to the group, no need to add it to the page
    lastNode.charring_group.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(27, 0)
    lastNode.caramelization2 = param
    del param

    param = lastNode.createGroupParam("mask", "mask")

    # Add the param to the page
    lastNode.Bake.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setOpened(True)
    lastNode.mask = param
    del param

    param = lastNode.createBooleanParam("enableMask", "Mask")

    # Add the param to the group, no need to add it to the page
    lastNode.mask.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.enableMask = param
    del param

    param = lastNode.createBooleanParam("invertMask", "invert Mask")

    # Add the param to the group, no need to add it to the page
    lastNode.mask.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.invertMask = param
    del param

    param = lastNode.createBooleanParam("maskFile", "Mask File Input")

    # Add the param to the group, no need to add it to the page
    lastNode.mask.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.maskFile = param
    del param

    param = lastNode.createFileParam("Read3filename", "Mask File")
    param.setSequenceEnabled(True)

    # Add the param to the group, no need to add it to the page
    lastNode.mask.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(False)
    param.setAnimationEnabled(False)
    param.setValue("[Project]/../../natron../ingredients-db/2010-sauce-pesto.png")
    lastNode.Read3filename = param
    del param

    param = lastNode.createDouble2DParam("Transform4translate", "Translate")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setMinimum(-2147483648, 1)
    param.setMaximum(2147483647, 1)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)

    # Add the param to the group, no need to add it to the page
    lastNode.mask.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.Transform4translate = param
    del param

    param = lastNode.createDoubleParam("Transform4rotate", "Rotate")
    param.setDisplayMinimum(-180, 0)
    param.setDisplayMaximum(180, 0)

    # Add the param to the group, no need to add it to the page
    lastNode.mask.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.Transform4rotate = param
    del param

    param = lastNode.createDouble2DParam("Transform4scale", "Scale")
    param.setMinimum(-10000, 0)
    param.setMaximum(10000, 0)
    param.setDisplayMinimum(0.1, 0)
    param.setDisplayMaximum(10, 0)
    param.setDefaultValue(1, 0)
    param.restoreDefaultValue(0)
    param.setMinimum(-10000, 1)
    param.setMaximum(10000, 1)
    param.setDisplayMinimum(0.1, 1)
    param.setDisplayMaximum(10, 1)
    param.setDefaultValue(1, 1)
    param.restoreDefaultValue(1)

    # Add the param to the group, no need to add it to the page
    lastNode.mask.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(0.95, 0)
    param.setValue(0.95, 1)
    lastNode.Transform4scale = param
    del param

    param = lastNode.createGroupParam("nutritional_facts", "Nutritional Facts")

    # Add the param to the page
    lastNode.Bake.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    lastNode.nutritional_facts = param
    del param

    param = lastNode.createDoubleParam("weight", "Weight (g)")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(0, 0)

    # Add the param to the group, no need to add it to the page
    lastNode.nutritional_facts.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(169.09, 0)
    lastNode.weight = param
    del param

    param = lastNode.createIntParam("serving_size", "Serving Size")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(0, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)

    # Add the param to the group, no need to add it to the page
    lastNode.nutritional_facts.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(False)
    lastNode.serving_size = param
    del param

    param = lastNode.createIntParam("calories", "Calories")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(0, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)

    # Add the param to the group, no need to add it to the page
    lastNode.nutritional_facts.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.calories = param
    del param

    param = lastNode.createSeparatorParam("s_e_p________", "")

    # Add the param to the group, no need to add it to the page
    lastNode.nutritional_facts.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.s_e_p________ = param
    del param

    param = lastNode.createDoubleParam("potassium", "Potassium (mg)")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(0, 0)

    # Add the param to the group, no need to add it to the page
    lastNode.nutritional_facts.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(30.15, 0)
    lastNode.potassium = param
    del param

    param = lastNode.createDoubleParam("vitamin_c", "Vitamin C (mg)")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(0, 0)

    # Add the param to the group, no need to add it to the page
    lastNode.nutritional_facts.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(3, 0)
    lastNode.vitamin_c = param
    del param

    param = lastNode.createIntParam("magnesium", "Magnesium (mcg)")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(0, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)

    # Add the param to the group, no need to add it to the page
    lastNode.nutritional_facts.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(1, 0)
    lastNode.magnesium = param
    del param

    param = lastNode.createDoubleParam("vitamin_b5", "vitamin_b5 (mg)")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(0, 0)

    # Add the param to the group, no need to add it to the page
    lastNode.nutritional_facts.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(1, 0)
    lastNode.vitamin_b5 = param
    del param

    param = lastNode.createIntParam("vitamin_d", "Vitamin D  (mcg)")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(0, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)

    # Add the param to the group, no need to add it to the page
    lastNode.nutritional_facts.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(1, 0)
    lastNode.vitamin_d = param
    del param

    param = lastNode.createIntParam("vitamin_b7", "vitamin_b7 (mcg)")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(0, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)

    # Add the param to the group, no need to add it to the page
    lastNode.nutritional_facts.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(1, 0)
    lastNode.vitamin_b7 = param
    del param

    param = lastNode.createSeparatorParam("sep___", "")

    # Add the param to the group, no need to add it to the page
    lastNode.nutritional_facts.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.sep___ = param
    del param

    param = lastNode.createDoubleParam("cholesterol", "Cholesterol (mg)")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(0, 0)

    # Add the param to the group, no need to add it to the page
    lastNode.nutritional_facts.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(2.15, 0)
    lastNode.cholesterol = param
    del param

    param = lastNode.createDoubleParam("vitamin_a", "Vitamin A (mcg)")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(0, 0)

    # Add the param to the group, no need to add it to the page
    lastNode.nutritional_facts.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(0, 0)
    param.setEnabled(False, 0)
    lastNode.vitamin_a = param
    del param

    param = lastNode.createDoubleParam("dietary_fiber", "Dietary Fiber (g)")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(0, 0)

    # Add the param to the group, no need to add it to the page
    lastNode.nutritional_facts.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(40, 0)
    param.setEnabled(False, 0)
    lastNode.dietary_fiber = param
    del param

    param = lastNode.createDoubleParam("vitamin_b6", "Vitamin B6 (mg)")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(0, 0)

    # Add the param to the group, no need to add it to the page
    lastNode.nutritional_facts.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(1, 0)
    param.setEnabled(False, 0)
    lastNode.vitamin_b6 = param
    del param

    param = lastNode.createSeparatorParam("sep____", "")

    # Add the param to the group, no need to add it to the page
    lastNode.nutritional_facts.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.sep____ = param
    del param

    param = lastNode.createDoubleParam("sugar", "Sugar (g)")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(0, 0)

    # Add the param to the group, no need to add it to the page
    lastNode.nutritional_facts.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(30.15, 0)
    param.setEnabled(False, 0)
    lastNode.sugar = param
    del param

    param = lastNode.createDoubleParam("protein", "Protein (g)")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(0, 0)

    # Add the param to the group, no need to add it to the page
    lastNode.nutritional_facts.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(2.41, 0)
    param.setEnabled(False, 0)
    lastNode.protein = param
    del param

    param = lastNode.createDoubleParam("iron", "iron (mg)")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(0, 0)

    # Add the param to the group, no need to add it to the page
    lastNode.nutritional_facts.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(0.27, 0)
    param.setEnabled(False, 0)
    lastNode.iron = param
    del param

    param = lastNode.createSeparatorParam("sep_____", "")

    # Add the param to the group, no need to add it to the page
    lastNode.nutritional_facts.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.sep_____ = param
    del param

    param = lastNode.createDoubleParam("complex_carb", "Complex Carb. (g)")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(0, 0)

    # Add the param to the group, no need to add it to the page
    lastNode.nutritional_facts.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(3.2, 0)
    param.setEnabled(False, 0)
    lastNode.complex_carb = param
    del param

    param = lastNode.createIntParam("selenium", "Selenium  (mcg)")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)

    # Add the param to the group, no need to add it to the page
    lastNode.nutritional_facts.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(1, 0)
    param.setEnabled(False, 0)
    lastNode.selenium = param
    del param

    param = lastNode.createDoubleParam("vitamin_k", "Vitamin K (g)")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(0, 0)

    # Add the param to the group, no need to add it to the page
    lastNode.nutritional_facts.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(60, 0)
    param.setEnabled(False, 0)
    lastNode.vitamin_k = param
    del param

    param = lastNode.createSeparatorParam("s_e_p____", "")

    # Add the param to the group, no need to add it to the page
    lastNode.nutritional_facts.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.s_e_p____ = param
    del param

    param = lastNode.createDoubleParam("vitamin_b12", "Vitamin B12 (mcg)")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(0, 0)

    # Add the param to the group, no need to add it to the page
    lastNode.nutritional_facts.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(24.1, 0)
    param.setEnabled(False, 0)
    lastNode.vitamin_b12 = param
    del param

    param = lastNode.createIntParam("calories_from_fat", "Calories from Fat")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(0, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)

    # Add the param to the group, no need to add it to the page
    lastNode.nutritional_facts.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(4, 0)
    param.setEnabled(False, 0)
    lastNode.calories_from_fat = param
    del param

    param = lastNode.createDoubleParam("vitamin_e", "Vitamin E (mcg)")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(0, 0)

    # Add the param to the group, no need to add it to the page
    lastNode.nutritional_facts.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(0.6899999999999999, 0)
    param.setEnabled(False, 0)
    lastNode.vitamin_e = param
    del param

    param = lastNode.createSeparatorParam("sep______", "")

    # Add the param to the group, no need to add it to the page
    lastNode.nutritional_facts.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.sep______ = param
    del param

    param = lastNode.createIntParam("zinc", "Zinc (mcg)")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(0, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)

    # Add the param to the group, no need to add it to the page
    lastNode.nutritional_facts.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(0, 0)
    param.setEnabled(False, 0)
    lastNode.zinc = param
    del param

    param = lastNode.createDoubleParam("saturated_fat", "Saturated Fat (g)")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(0, 0)

    # Add the param to the group, no need to add it to the page
    lastNode.nutritional_facts.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(6.4, 0)
    param.setEnabled(False, 0)
    lastNode.saturated_fat = param
    del param

    param = lastNode.createIntParam("iodine", "iodine")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(0, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)

    # Add the param to the group, no need to add it to the page
    lastNode.nutritional_facts.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.iodine = param
    del param

    param = lastNode.createSeparatorParam("sep_________", "")

    # Add the param to the group, no need to add it to the page
    lastNode.nutritional_facts.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.sep_________ = param
    del param

    param = lastNode.createDoubleParam("trans_fat", "Trans Fat (g)")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(0, 0)

    # Add the param to the group, no need to add it to the page
    lastNode.nutritional_facts.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(8.9, 0)
    param.setEnabled(False, 0)
    lastNode.trans_fat = param
    del param

    param = lastNode.createDoubleParam("sodium", "Sodium (mg)")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(0, 0)

    # Add the param to the group, no need to add it to the page
    lastNode.nutritional_facts.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(13, 0)
    param.setEnabled(False, 0)
    lastNode.sodium = param
    del param

    param = lastNode.createDoubleParam("monosaturated_fat", "Monosaturated Fat (g)")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(0, 0)

    # Add the param to the group, no need to add it to the page
    lastNode.nutritional_facts.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(2, 0)
    param.setEnabled(False, 0)
    lastNode.monosaturated_fat = param
    del param

    param = lastNode.createDoubleParam("calcium", "Calcium (mg)")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(0, 0)

    # Add the param to the group, no need to add it to the page
    lastNode.nutritional_facts.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(False)
    param.setValue(11.5, 0)
    param.setEnabled(False, 0)
    lastNode.calcium = param
    del param

    param = lastNode.createSeparatorParam("s_ep_____", "")

    # Add the param to the group, no need to add it to the page
    lastNode.nutritional_facts.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.s_ep_____ = param
    del param

    param = lastNode.createDoubleParam("riboflavin", "Riboflavin (mcg)")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(0, 0)

    # Add the param to the group, no need to add it to the page
    lastNode.nutritional_facts.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(0, 0)
    param.setEnabled(False, 0)
    lastNode.riboflavin = param
    del param

    param = lastNode.createDoubleParam("thiamin", "Thiamin (mcg)")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(0, 0)

    # Add the param to the group, no need to add it to the page
    lastNode.nutritional_facts.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(0, 0)
    param.setEnabled(False, 0)
    lastNode.thiamin = param
    del param

    param = lastNode.createDoubleParam("folate", "Folate (mcg)")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(0, 0)

    # Add the param to the group, no need to add it to the page
    lastNode.nutritional_facts.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(0, 0)
    param.setEnabled(False, 0)
    lastNode.folate = param
    del param

    param = lastNode.createSeparatorParam("sep_______________", "")

    # Add the param to the group, no need to add it to the page
    lastNode.nutritional_facts.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.sep_______________ = param
    del param

    param = lastNode.createDoubleParam("added_sugars", "Added Sugars  (mg)")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(0, 0)

    # Add the param to the group, no need to add it to the page
    lastNode.nutritional_facts.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(6.4, 0)
    param.setEnabled(False, 0)
    lastNode.added_sugars = param
    del param

    param = lastNode.createDoubleParam("chromium", "chromium")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(0, 0)

    # Add the param to the group, no need to add it to the page
    lastNode.nutritional_facts.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(5.3, 0)
    param.setEnabled(False, 0)
    lastNode.chromium = param
    del param

    param = lastNode.createIntParam("manganese", "manganese")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(0, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)

    # Add the param to the group, no need to add it to the page
    lastNode.nutritional_facts.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(27, 0)
    param.setEnabled(False, 0)
    lastNode.manganese = param
    del param

    param = lastNode.createButtonParam("export", "export")

    # Add the param to the group, no need to add it to the page
    lastNode.nutritional_facts.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    lastNode.export = param
    del param

    param = lastNode.createIntParam("biotin", "Biotin (mcg)")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(0, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)

    # Add the param to the group, no need to add it to the page
    lastNode.nutritional_facts.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(1, 0)
    lastNode.biotin = param
    del param

    param = lastNode.createDoubleParam("pantothenic_acid", "Pantothenic Acid (mcg)")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(0, 0)

    # Add the param to the group, no need to add it to the page
    lastNode.nutritional_facts.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(1, 0)
    lastNode.pantothenic_acid = param
    del param

    param = lastNode.createGroupParam("physical", "physical")

    # Add the param to the page
    lastNode.Bake.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    lastNode.physical = param
    del param

    param = lastNode.createChoiceParam("unit", "unit")
    entries = [ ("g", ""),
    ("kg", "")]
    param.setOptions(entries)
    del entries

    # Add the param to the group, no need to add it to the page
    lastNode.physical.addParam(param)

    # Set param properties
    param.setHelp("grams\r\nkilograms")
    param.setAddNewLine(True)
    param.setAnimationEnabled(False)
    lastNode.unit = param
    del param

    param = lastNode.createDoubleParam("mass", "mass")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)

    # Add the param to the group, no need to add it to the page
    lastNode.physical.addParam(param)

    # Set param properties
    param.setHelp("grams")
    param.setAddNewLine(False)
    param.setAnimationEnabled(True)
    param.setValue(36.44, 0)
    lastNode.mass = param
    del param

    param = lastNode.createIntParam("height", "height")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)

    # Add the param to the group, no need to add it to the page
    lastNode.physical.addParam(param)

    # Set param properties
    param.setHelp("in pixels")
    param.setAddNewLine(True)
    param.setAnimationEnabled(False)
    lastNode.height = param
    del param

    param = lastNode.createDoubleParam("density", "density")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)

    # Add the param to the group, no need to add it to the page
    lastNode.physical.addParam(param)

    # Set param properties
    param.setHelp("The kilogram per cubic metre (symbol: kg·m−3, or kg/m3) is an SI derived unit of density, defined by mass in kilograms divided by volume in cubic metres.")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.density = param
    del param

    param = lastNode.createIntParam("area", "area")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)

    # Add the param to the group, no need to add it to the page
    lastNode.physical.addParam(param)

    # Set param properties
    param.setHelp("pixels in cm2\r\n\r\nmax areas\r\n9in crust = 413 cm2\r\n8in cheese = 325 cm2\r\n3.5 in (12.25 in2) = 79 cm2")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.area = param
    del param

    lastNode.ChefNotes = lastNode.createPageParam("ChefNotes", "Chef Notes")
    param = lastNode.createStringParam("Notes", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeRichTextMultiLine)

    # Add the param to the page
    lastNode.ChefNotes.addParam(param)

    # Set param properties
    param.setHelp("Beefs- shrinks,renders out fat/grease, high fat content \r\n\r\nPork- shrinks, renders out fat, very greasy, very high fat content (more than beef)\r\n\r\nPoultry- doesn’t shrink, the skin renders fat and crisps otherwise the meat is lean holds true for most all poultry except duck. (Duck is fatty)\r\n\r\nShellfish- very little shrinkage, most will curl inward, they don’t crisp\r\n\r\nFish- skin dries out flesh will stay moist but turn in color slightly darker\r\n\r\nHard Candies - melts and cools shiny and hard  \r\nChocolates-melt\r\n\r\nHard Cheeses- melts and crisps (parm)\r\n\r\nSemi-Soft Cheeses- melt and bubble will brown (cheddar)\r\n\r\nSoft Cheese- melt and stay soft little browning (mozzarella balls)\r\n\r\nHerbs- herbs toast and deepen in color (this goes for dried chili pepper flakes) no shrinking \r\n\r\nFresh herbs-  brown, leaves wilt \r\n\r\nFlowers- Dehydrate and  wilt")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue("<font size=\"6\" color=\"#000000\" face=\"Droid Sans\">Beefs- shrinks,renders out fat/grease, high fat content \r\nPork- shrinks, renders out fat, very greasy, very high fat content (more than beef)\r\n\r\nPoultry- no shrink, the skin renders fat and crisps otherwise the meat is lean holds true for most all poultry except duck. (Duck is fatty)\r\n\r\nShellfish- very little shrinkage, most will curl inward, they don’t crisp\r\n\r\nFish- skin dries out flesh will stay moist but turn in color slightly darker\r\n\r\nHard Candies - melts and cools shiny and hard  \r\n\r\nChocolates-melt\r\n\r\nHard cheeses- melts and crisps (parm)\r\n\r\nSemi soft cheeses- melt and bubble will brown (cheddar)\r\n\r\nSoft cheese- melt and stay soft little browning (mozzarella balls)\r\n\r\nHerbs- herbs toast and deepen in color (this goes for dried chili pepper flakes) no shrinking \r\n\r\nFresh herbs- brown, leaves wilt \r\n\r\nFlowers-Dehydrate and wilt</font>")
    lastNode.Notes = param
    del param

    # Refresh the GUI with the newly created parameters
    lastNode.setPagesOrder(['csv', 'Images', 'Bake', 'ChefNotes', 'Node', 'Settings'])
    lastNode.refreshUserParamsGUI()
    del lastNode

    # Start of node "Saturation1"
    lastNode = app.createNode("net.sf.openfx.SaturationPlugin", 2, group)
    lastNode.setScriptName("Saturation1")
    lastNode.setLabel("Saturation1")
    lastNode.setPosition(2069, -758)
    lastNode.setSize(104, 30)
    lastNode.setColor(0.48, 0.66, 1)
    groupSaturation1 = lastNode

    param = lastNode.getParam("NatronOfxParamProcessA")
    if param is not None:
        param.setValue(True)
        del param

    param = lastNode.getParam("saturation")
    if param is not None:
        param.setValue(0, 0)
        del param

    param = lastNode.getParam("clampWhite")
    if param is not None:
        param.setValue(True)
        del param

    param = lastNode.getParam("premult")
    if param is not None:
        param.setValue(True)
        del param

    param = lastNode.getParam("disableNode")
    if param is not None:
        param.setValue(True)
        del param

    del lastNode
    # End of node "Saturation1"

    # Start of node "In1"
    lastNode = app.createNode("net.sf.openfx.MergeIn", 1, group)
    lastNode.setScriptName("In1")
    lastNode.setLabel("In1")
    lastNode.setPosition(1821, -398)
    lastNode.setSize(104, 38)
    lastNode.setColor(0.3, 0.37, 0.776)
    groupIn1 = lastNode

    param = lastNode.getParam("operation")
    if param is not None:
        param.set("mask")
        del param

    param = lastNode.getParam("userTextArea")
    if param is not None:
        param.setValue("<Natron>(in)</Natron>")
        del param

    del lastNode
    # End of node "In1"

    # Start of node "Grade_absorption"
    lastNode = app.createNode("net.sf.openfx.GradePlugin", 2, group)
    lastNode.setScriptName("Grade_absorption")
    lastNode.setLabel("Grade_absorption")
    lastNode.setPosition(2069, -628)
    lastNode.setSize(104, 43)
    lastNode.setColor(0.48, 0.66, 1)
    groupGrade_absorption = lastNode

    param = lastNode.getParam("NatronOfxParamProcessA")
    if param is not None:
        param.setValue(True)
        del param

    param = lastNode.getParam("offset")
    if param is not None:
        param.setValue(0, 0)
        param.setValue(0, 1)
        param.setValue(0, 2)
        param.setValue(0, 3)
        del param

    param = lastNode.getParam("gamma")
    if param is not None:
        param.setValue(1.4, 0)
        param.setValue(1.4, 1)
        param.setValue(1.4, 2)
        param.setValue(1.4, 3)
        del param

    param = lastNode.getParam("premultChanged")
    if param is not None:
        param.setValue(True)
        del param

    del lastNode
    # End of node "Grade_absorption"

    # Start of node "Clamp1"
    lastNode = app.createNode("net.sf.openfx.Clamp", 2, group)
    lastNode.setScriptName("Clamp1")
    lastNode.setLabel("Clamp1")
    lastNode.setPosition(2067, -526)
    lastNode.setSize(104, 30)
    lastNode.setColor(0.48, 0.66, 1)
    groupClamp1 = lastNode

    param = lastNode.getParam("premult")
    if param is not None:
        param.setValue(True)
        del param

    del lastNode
    # End of node "Clamp1"

    # Start of node "Clamp2"
    lastNode = app.createNode("net.sf.openfx.Clamp", 2, group)
    lastNode.setScriptName("Clamp2")
    lastNode.setLabel("Clamp2")
    lastNode.setPosition(1821, -808)
    lastNode.setSize(104, 30)
    lastNode.setColor(0.48, 0.66, 1)
    groupClamp2 = lastNode

    param = lastNode.getParam("premult")
    if param is not None:
        param.setValue(True)
        del param

    del lastNode
    # End of node "Clamp2"

    # Start of node "Clamp3"
    lastNode = app.createNode("net.sf.openfx.Clamp", 2, group)
    lastNode.setScriptName("Clamp3")
    lastNode.setLabel("Clamp3")
    lastNode.setPosition(1821, -177)
    lastNode.setSize(104, 30)
    lastNode.setColor(0.48, 0.66, 1)
    groupClamp3 = lastNode

    param = lastNode.getParam("premult")
    if param is not None:
        param.setValue(True)
        del param

    del lastNode
    # End of node "Clamp3"

    # Start of node "In"
    lastNode = app.createNode("fr.inria.built-in.Input", 1, group)
    lastNode.setScriptName("In")
    lastNode.setLabel("In")
    lastNode.setPosition(1824, -1190)
    lastNode.setSize(104, 30)
    lastNode.setColor(0.3, 0.5, 0.2)
    groupIn = lastNode

    del lastNode
    # End of node "In"

    # Start of node "Plasma2"
    lastNode = app.createNode("net.sf.cimg.CImgPlasma", 2, group)
    lastNode.setScriptName("Plasma2")
    lastNode.setLabel("Plasma2")
    lastNode.setPosition(2068, -976)
    lastNode.setSize(104, 26)
    lastNode.setColor(0.3, 0.5, 0.2)
    groupPlasma2 = lastNode

    param = lastNode.getParam("NatronOfxParamProcessA")
    if param is not None:
        param.setValue(True)
        del param

    param = lastNode.getParam("alpha")
    if param is not None:
        param.setValue(0.0043, 0)
        del param

    param = lastNode.getParam("beta")
    if param is not None:
        param.setValue(0, 0)
        del param

    param = lastNode.getParam("scale")
    if param is not None:
        param.setValue(6, 0)
        del param

    param = lastNode.getParam("premult")
    if param is not None:
        param.setValue(True)
        del param

    del lastNode
    # End of node "Plasma2"

    # Start of node "Premult1"
    lastNode = app.createNode("net.sf.openfx.Premult", 2, group)
    lastNode.setScriptName("Premult1")
    lastNode.setLabel("Premult1")
    lastNode.setPosition(1733, 4246)
    lastNode.setSize(104, 30)
    lastNode.setColor(0.3, 0.37, 0.776)
    groupPremult1 = lastNode

    del lastNode
    # End of node "Premult1"

    # Start of node "LumpySpec"
    lastNode = app.createNode("eu.gmic.ReliefLight", 1, group)
    lastNode.setScriptName("LumpySpec")
    lastNode.setLabel("LumpySpec")
    lastNode.setPosition(1924, 2728)
    lastNode.setSize(80, 38)
    lastNode.setColor(0.7, 0.7, 0.7)
    lastNode.addUserPlane("wet", ["R","G","B","A"])
    groupLumpySpec = lastNode

    param = lastNode.getParam("Ambient_Lightness")
    if param is not None:
        param.setValue(1.356, 0)
        del param

    param = lastNode.getParam("Specular_Lightness")
    if param is not None:
        param.setValue(0.05, 0)
        del param

    param = lastNode.getParam("Specular_Size")
    if param is not None:
        param.setValue(0.11, 0)
        del param

    param = lastNode.getParam("Darkness")
    if param is not None:
        param.setValue(1, 0)
        del param

    param = lastNode.getParam("Light_Smoothness")
    if param is not None:
        param.setValue(0.05, 0)
        del param

    param = lastNode.getParam("XYLight")
    if param is not None:
        param.setValue(4100, 0)
        param.setValue(2600, 1)
        del param

    param = lastNode.getParam("ZLight")
    if param is not None:
        param.setValue(0, 0)
        del param

    param = lastNode.getParam("ZScale")
    if param is not None:
        param.setValue(1, 0)
        del param

    param = lastNode.getParam("Image_Smoothness")
    if param is not None:
        param.setValue(1.77, 0)
        del param

    param = lastNode.getParam("channels")
    if param is not None:
        param.set("wet")
        del param

    param = lastNode.getParam("NatronOfxParamProcessA")
    if param is not None:
        param.setValue(False)
        del param

    del lastNode
    # End of node "LumpySpec"

    # Start of node "Lumpy_small"
    lastNode = app.createNode("net.sf.openfx.SeGrain", 1, group)
    lastNode.setScriptName("Lumpy_small")
    lastNode.setLabel("Lumpy_small")
    lastNode.setPosition(1812, 2360)
    lastNode.setSize(80, 38)
    lastNode.setColor(0.75, 0.75, 0.75)
    groupLumpy_small = lastNode

    param = lastNode.getParam("grainSizeAll")
    if param is not None:
        param.setValue(6.6, 0)
        del param

    param = lastNode.getParam("grainSizeRed")
    if param is not None:
        param.setValue(4, 0)
        del param

    param = lastNode.getParam("grainSizeGreen")
    if param is not None:
        param.setValue(4, 0)
        del param

    param = lastNode.getParam("grainSizeBlue")
    if param is not None:
        param.setValue(4, 0)
        del param

    param = lastNode.getParam("grainIrregularityRed")
    if param is not None:
        param.setValue(1, 0)
        del param

    param = lastNode.getParam("grainIrregularityGreen")
    if param is not None:
        param.setValue(1, 0)
        del param

    param = lastNode.getParam("grainIrregularityBlue")
    if param is not None:
        param.setValue(1, 0)
        del param

    param = lastNode.getParam("grainIntensityRed")
    if param is not None:
        param.setValue(0.497, 0)
        del param

    param = lastNode.getParam("grainIntensityGreen")
    if param is not None:
        param.setValue(0.497, 0)
        del param

    param = lastNode.getParam("grainIntensityBlue")
    if param is not None:
        param.setValue(0.503, 0)
        del param

    param = lastNode.getParam("colorCorr")
    if param is not None:
        param.setValue(1, 0)
        del param

    param = lastNode.getParam("mix")
    if param is not None:
        param.setValue(1, 0)
        del param

    param = lastNode.getParam("userTextArea")
    if param is not None:
        param.setValue("<Natron>(Kodak 5248)</Natron>")
        del param

    param = lastNode.getParam("enableMask_Mask")
    if param is not None:
        param.setValue(True)
        del param

    del lastNode
    # End of node "Lumpy_small"

    # Start of node "LumpySpecMix"
    lastNode = app.createNode("net.sf.openfx.MergePlugin", 1, group)
    lastNode.setScriptName("LumpySpecMix")
    lastNode.setLabel("LumpySpecMix")
    lastNode.setPosition(1800, 3619)
    lastNode.setSize(104, 40)
    lastNode.setColor(0.3, 0.37, 0.776)
    groupLumpySpecMix = lastNode

    param = lastNode.getParam("operation")
    if param is not None:
        param.set("screen")
        del param

    param = lastNode.getParam("mix")
    if param is not None:
        param.setValue(0.1, 0)
        del param

    param = lastNode.getParam("userTextArea")
    if param is not None:
        param.setValue("<Natron>(over)</Natron>")
        del param

    del lastNode
    # End of node "LumpySpecMix"

    # Start of node "Premult2"
    lastNode = app.createNode("net.sf.openfx.Premult", 2, group)
    lastNode.setScriptName("Premult2")
    lastNode.setLabel("Premult2")
    lastNode.setPosition(2124, 3306)
    lastNode.setSize(104, 30)
    lastNode.setColor(0.3, 0.37, 0.776)
    groupPremult2 = lastNode

    param = lastNode.getParam("disableNode")
    if param is not None:
        param.setValue(True)
        del param

    del lastNode
    # End of node "Premult2"

    # Start of node "LumpyRoughness"
    lastNode = app.createNode("net.sf.cimg.CImgBlur", 4, group)
    lastNode.setScriptName("LumpyRoughness")
    lastNode.setLabel("LumpyRoughness")
    lastNode.setPosition(2124, 3373)
    lastNode.setSize(104, 30)
    lastNode.setColor(0.8, 0.5, 0.3)
    groupLumpyRoughness = lastNode

    param = lastNode.getParam("NatronOfxParamProcessA")
    if param is not None:
        param.setValue(False)
        del param

    param = lastNode.getParam("size")
    if param is not None:
        param.setValue(1.77, 0)
        param.setValue(1.77, 1)
        del param

    param = lastNode.getParam("disableNode")
    if param is not None:
        param.setValue(True)
        del param

    del lastNode
    # End of node "LumpyRoughness"

    # Start of node "LumpyDelta"
    lastNode = app.createNode("net.sf.openfx.ColorCorrectPlugin", 2, group)
    lastNode.setScriptName("LumpyDelta")
    lastNode.setLabel("LumpyDelta")
    lastNode.setPosition(1800, 2647)
    lastNode.setSize(104, 30)
    lastNode.setColor(0.48, 0.66, 1)
    groupLumpyDelta = lastNode

    param = lastNode.getParam("NatronOfxParamProcessA")
    if param is not None:
        param.setValue(True)
        del param

    param = lastNode.getParam("MasterGamma")
    if param is not None:
        param.setValue(0.8100000000000001, 0)
        param.setValue(0.8100000000000001, 1)
        param.setValue(0.8100000000000001, 2)
        param.setValue(0.8100000000000001, 3)
        del param

    param = lastNode.getParam("MasterGain")
    if param is not None:
        param.setValue(0.51, 0)
        param.setValue(0.51, 1)
        param.setValue(0.51, 2)
        param.setValue(0.51, 3)
        del param

    param = lastNode.getParam("MidtonesGain")
    if param is not None:
        param.setValue(1.59, 0)
        param.setValue(1.59, 1)
        param.setValue(1.59, 2)
        param.setValue(1.59, 3)
        del param

    param = lastNode.getParam("HighlightsGain")
    if param is not None:
        param.setValue(1.42, 0)
        param.setValue(1.42, 1)
        param.setValue(1.42, 2)
        param.setValue(1.42, 3)
        del param

    param = lastNode.getParam("toneRanges")
    if param is not None:
        param.setCurveColor(0, 0.6, 0.4, 0.6)
        param.deleteAllControlPoints(0)
        param.addControlPoint(0, 0, 1, 0, 0, NatronEngine.Natron.KeyframeTypeEnum.eKeyframeTypeHorizontal)
        param.addControlPoint(0, 0.09, 0, 0, 0, NatronEngine.Natron.KeyframeTypeEnum.eKeyframeTypeHorizontal)
        param.setCurveColor(1, 0.8, 0.7, 0.6)
        param.deleteAllControlPoints(1)
        param.addControlPoint(1, 0.5, 0, 0, 0, NatronEngine.Natron.KeyframeTypeEnum.eKeyframeTypeHorizontal)
        param.addControlPoint(1, 1, 1, 0, 0, NatronEngine.Natron.KeyframeTypeEnum.eKeyframeTypeHorizontal)
        del param

    param = lastNode.getParam("maskInvert")
    if param is not None:
        param.setValue(True)
        del param

    param = lastNode.getParam("premultChanged")
    if param is not None:
        param.setValue(True)
        del param

    param = lastNode.getParam("enableMask_Mask")
    if param is not None:
        param.setValue(True)
        del param

    del lastNode
    # End of node "LumpyDelta"

    # Start of node "LumpyHeight"
    lastNode = app.createNode("net.sf.openfx.GradePlugin", 2, group)
    lastNode.setScriptName("LumpyHeight")
    lastNode.setLabel("LumpyHeight")
    lastNode.setPosition(1572, 2672)
    lastNode.setSize(104, 30)
    lastNode.setColor(0.48, 0.66, 1)
    groupLumpyHeight = lastNode

    param = lastNode.getParam("NatronOfxParamProcessR")
    if param is not None:
        param.setValue(False)
        del param

    param = lastNode.getParam("NatronOfxParamProcessG")
    if param is not None:
        param.setValue(False)
        del param

    param = lastNode.getParam("NatronOfxParamProcessB")
    if param is not None:
        param.setValue(False)
        del param

    param = lastNode.getParam("NatronOfxParamProcessA")
    if param is not None:
        param.setValue(True)
        del param

    param = lastNode.getParam("blackPoint")
    if param is not None:
        param.setValue(-0.464, 0)
        param.setValue(-0.464, 1)
        param.setValue(-0.464, 2)
        param.setValue(-0.464, 3)
        del param

    param = lastNode.getParam("whitePoint")
    if param is not None:
        param.setValue(0.98, 0)
        param.setValue(0.98, 1)
        param.setValue(0.98, 2)
        param.setValue(0.98, 3)
        del param

    param = lastNode.getParam("black")
    if param is not None:
        param.setValue(-0.09, 0)
        param.setValue(-0.09, 1)
        param.setValue(-0.09, 2)
        param.setValue(-0.09, 3)
        del param

    param = lastNode.getParam("white")
    if param is not None:
        param.setValue(1.05, 0)
        param.setValue(1.05, 1)
        param.setValue(1.05, 2)
        param.setValue(1.05, 3)
        del param

    param = lastNode.getParam("multiply")
    if param is not None:
        param.setValue(1.02, 0)
        param.setValue(1.02, 1)
        param.setValue(1.02, 2)
        param.setValue(1.02, 3)
        del param

    param = lastNode.getParam("gamma")
    if param is not None:
        param.setValue(0.2, 0)
        param.setValue(0.2, 1)
        param.setValue(0.2, 2)
        param.setValue(0.2, 3)
        del param

    param = lastNode.getParam("mix")
    if param is not None:
        param.setValue(0, 0)
        del param

    param = lastNode.getParam("premultChanged")
    if param is not None:
        param.setValue(True)
        del param

    del lastNode
    # End of node "LumpyHeight"

    # Start of node "LumpyKey"
    lastNode = app.createNode("net.sf.openfx.KeyerPlugin", 1, group)
    lastNode.setScriptName("LumpyKey")
    lastNode.setLabel("LumpyKey")
    lastNode.setPosition(1572, 2472)
    lastNode.setSize(104, 38)
    lastNode.setColor(0, 1, 0)
    groupLumpyKey = lastNode

    param = lastNode.getParam("luminanceMath")
    if param is not None:
        param.set("max")
        del param

    param = lastNode.getParam("softnessLower")
    if param is not None:
        param.setValue(0, 0)
        del param

    param = lastNode.getParam("toleranceUpper")
    if param is not None:
        param.setValue(1, 0)
        del param

    param = lastNode.getParam("softnessUpper")
    if param is not None:
        param.setValue(1, 0)
        del param

    param = lastNode.getParam("userTextArea")
    if param is not None:
        param.setValue("<Natron>(Luminance)</Natron>")
        del param

    del lastNode
    # End of node "LumpyKey"

    # Start of node "LumpSpecGrain"
    lastNode = app.createNode("net.sf.openfx.SeGrain", 1, group)
    lastNode.setScriptName("LumpSpecGrain")
    lastNode.setLabel("LumpSpecGrain")
    lastNode.setPosition(1956, 2868)
    lastNode.setSize(80, 38)
    lastNode.setColor(0.75, 0.75, 0.75)
    groupLumpSpecGrain = lastNode

    param = lastNode.getParam("grainSizeAll")
    if param is not None:
        param.setValue(6.6, 0)
        del param

    param = lastNode.getParam("grainSizeRed")
    if param is not None:
        param.setValue(10, 0)
        del param

    param = lastNode.getParam("grainSizeGreen")
    if param is not None:
        param.setValue(10, 0)
        del param

    param = lastNode.getParam("grainSizeBlue")
    if param is not None:
        param.setValue(10, 0)
        del param

    param = lastNode.getParam("grainIrregularityRed")
    if param is not None:
        param.setValue(1, 0)
        del param

    param = lastNode.getParam("grainIrregularityGreen")
    if param is not None:
        param.setValue(1, 0)
        del param

    param = lastNode.getParam("grainIrregularityBlue")
    if param is not None:
        param.setValue(1, 0)
        del param

    param = lastNode.getParam("grainIntensityRed")
    if param is not None:
        param.setValue(1, 0)
        del param

    param = lastNode.getParam("grainIntensityGreen")
    if param is not None:
        param.setValue(1, 0)
        del param

    param = lastNode.getParam("grainIntensityBlue")
    if param is not None:
        param.setValue(1, 0)
        del param

    param = lastNode.getParam("colorCorr")
    if param is not None:
        param.setValue(0.872, 0)
        del param

    param = lastNode.getParam("userTextArea")
    if param is not None:
        param.setValue("<Natron>(Kodak 5248)</Natron>")
        del param

    param = lastNode.getParam("enableMask_Mask")
    if param is not None:
        param.setValue(True)
        del param

    del lastNode
    # End of node "LumpSpecGrain"

    # Start of node "Dot4"
    lastNode = app.createNode("fr.inria.built-in.Dot", 1, group)
    lastNode.setScriptName("Dot4")
    lastNode.setLabel("Dot4")
    lastNode.setPosition(1411, 2242)
    lastNode.setSize(15, 15)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupDot4 = lastNode

    del lastNode
    # End of node "Dot4"

    # Start of node "Dot5"
    lastNode = app.createNode("fr.inria.built-in.Dot", 1, group)
    lastNode.setScriptName("Dot5")
    lastNode.setLabel("Dot5")
    lastNode.setPosition(1411, 2880)
    lastNode.setSize(15, 15)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupDot5 = lastNode

    del lastNode
    # End of node "Dot5"

    # Start of node "LumpyWet"
    lastNode = app.createNode("net.sf.openfx.MergePlus", 1, group)
    lastNode.setScriptName("LumpyWet")
    lastNode.setLabel("LumpyWet")
    lastNode.setPosition(2133, 3204)
    lastNode.setSize(104, 38)
    lastNode.setColor(0.3, 0.37, 0.776)
    groupLumpyWet = lastNode

    param = lastNode.getParam("operation")
    if param is not None:
        param.set("average")
        del param

    param = lastNode.getParam("userTextArea")
    if param is not None:
        param.setValue("<Natron>(plus)</Natron>")
        del param

    del lastNode
    # End of node "LumpyWet"

    # Start of node "Clamp1_2"
    lastNode = app.createNode("net.sf.openfx.Clamp", 2, group)
    lastNode.setScriptName("Clamp1_2")
    lastNode.setLabel("Clamp1_2")
    lastNode.setPosition(2246, 3624)
    lastNode.setSize(104, 30)
    lastNode.setColor(0.48, 0.66, 1)
    groupClamp1_2 = lastNode

    param = lastNode.getParam("premult")
    if param is not None:
        param.setValue(True)
        del param

    del lastNode
    # End of node "Clamp1_2"

    # Start of node "Dot3"
    lastNode = app.createNode("fr.inria.built-in.Dot", 1, group)
    lastNode.setScriptName("Dot3")
    lastNode.setLabel("Dot3")
    lastNode.setPosition(1837, 2192)
    lastNode.setSize(15, 15)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupDot3 = lastNode

    del lastNode
    # End of node "Dot3"

    # Start of node "Dot6"
    lastNode = app.createNode("fr.inria.built-in.Dot", 1, group)
    lastNode.setScriptName("Dot6")
    lastNode.setLabel("Dot6")
    lastNode.setPosition(2470, 2192)
    lastNode.setSize(15, 15)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupDot6 = lastNode

    del lastNode
    # End of node "Dot6"

    # Start of node "LumpyOverlay"
    lastNode = app.createNode("net.sf.openfx.MergePlugin", 1, group)
    lastNode.setScriptName("LumpyOverlay")
    lastNode.setLabel("LumpyOverlay")
    lastNode.setPosition(1783, 4100)
    lastNode.setSize(104, 40)
    lastNode.setColor(0.3, 0.37, 0.776)
    groupLumpyOverlay = lastNode

    param = lastNode.getParam("operation")
    if param is not None:
        param.set("overlay")
        del param

    param = lastNode.getParam("mix")
    if param is not None:
        param.setValue(0.13, 0)
        del param

    param = lastNode.getParam("userTextArea")
    if param is not None:
        param.setValue("<Natron>(over)</Natron>")
        del param

    del lastNode
    # End of node "LumpyOverlay"

    # Start of node "Lerp_LspecMix"
    lastNode = app.createNode("fr.inria.built-in.Group", 1, group)
    lastNode.setScriptName("Lerp_LspecMix")
    lastNode.setLabel("Lerp_LspecMix")
    lastNode.setPosition(2430, 3682)
    lastNode.setSize(104, 30)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupLerp_LspecMix = lastNode


    # Create the user parameters
    lastNode.Controls = lastNode.createPageParam("Controls", "Controls")
    param = lastNode.createSeparatorParam("integer_________", "integer linear interpolation")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.integer_________ = param
    del param

    param = lastNode.createSeparatorParam("float________", "float linear interpolation")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.float________ = param
    del param

    param = lastNode.createGroupParam("int1", "integer linear interpolation")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    lastNode.int1 = param
    del param

    param = lastNode.createStringParam("i_input_desc", "i_input_desc")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeDefault)

    # Add the param to the group, no need to add it to the page
    lastNode.int1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.i_input_desc = param
    del param

    param = lastNode.createStringParam("i_result_desc", "i_result_desc")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeDefault)

    # Add the param to the group, no need to add it to the page
    lastNode.int1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.i_result_desc = param
    del param

    param = lastNode.createGroupParam("float1", "float linear interpolation")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    lastNode.float1 = param
    del param

    param = lastNode.createStringParam("f_input_desc", "f_input_desc")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeDefault)

    # Add the param to the group, no need to add it to the page
    lastNode.float1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.f_input_desc = param
    del param

    param = lastNode.createStringParam("f_result_desc", "f_result_desc")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeDefault)

    # Add the param to the group, no need to add it to the page
    lastNode.float1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.f_result_desc = param
    del param

    param = lastNode.createIntParam("i_input", "i_input")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.i_input = param
    del param

    param = lastNode.createInt2DParam("i_input_range", "i_input_range")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)
    param.setDefaultValue(0, 1)
    param.restoreDefaultValue(1)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(100, 1)
    lastNode.i_input_range = param
    del param

    param = lastNode.createInt2DParam("i_lerp_range", "i_lerp_range")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)
    param.setDefaultValue(0, 1)
    param.restoreDefaultValue(1)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(7, 0)
    lastNode.i_lerp_range = param
    del param

    param = lastNode.createIntParam("i_lerp_result", "i_lerp_result")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(0, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(7, 0)
    lastNode.i_lerp_result = param
    del param

    param = lastNode.createDoubleParam("f_input", "f_input")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(10, 0)
    lastNode.f_input = param
    del param

    param = lastNode.createDouble2DParam("f_input_range", "f_input_range")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setMinimum(-2147483648, 1)
    param.setMaximum(2147483647, 1)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(100, 1)
    lastNode.f_input_range = param
    del param

    param = lastNode.createDouble2DParam("f_lerp_range", "f_lerp_range")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setMinimum(-2147483648, 1)
    param.setMaximum(2147483647, 1)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(1, 1)
    lastNode.f_lerp_range = param
    del param

    param = lastNode.createDoubleParam("f_lerp_result", "f_lerp_result")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(0.1, 0)
    lastNode.f_lerp_result = param
    del param

    # Refresh the GUI with the newly created parameters
    lastNode.setPagesOrder(['Controls', 'Node', 'Settings'])
    lastNode.refreshUserParamsGUI()
    del lastNode
    # End of node "Lerp_LspecMix"

    groupgroup = groupLerp_LspecMix
    # Create all nodes in the group

    # Create the parameters of the group node the same way we did for all internal nodes
    lastNode = groupgroup
    lastNode.setColor(0.7, 0.7, 0.7)

    # Create the user parameters
    lastNode.Controls = lastNode.createPageParam("Controls", "Controls")
    param = lastNode.createSeparatorParam("integer_________", "integer linear interpolation")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.integer_________ = param
    del param

    param = lastNode.createSeparatorParam("float________", "float linear interpolation")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.float________ = param
    del param

    param = lastNode.createGroupParam("int1", "integer linear interpolation")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    lastNode.int1 = param
    del param

    param = lastNode.createStringParam("i_input_desc", "i_input_desc")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeDefault)

    # Add the param to the group, no need to add it to the page
    lastNode.int1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.i_input_desc = param
    del param

    param = lastNode.createStringParam("i_result_desc", "i_result_desc")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeDefault)

    # Add the param to the group, no need to add it to the page
    lastNode.int1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.i_result_desc = param
    del param

    param = lastNode.createGroupParam("float1", "float linear interpolation")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    lastNode.float1 = param
    del param

    param = lastNode.createStringParam("f_input_desc", "f_input_desc")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeDefault)

    # Add the param to the group, no need to add it to the page
    lastNode.float1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.f_input_desc = param
    del param

    param = lastNode.createStringParam("f_result_desc", "f_result_desc")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeDefault)

    # Add the param to the group, no need to add it to the page
    lastNode.float1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.f_result_desc = param
    del param

    param = lastNode.createIntParam("i_input", "i_input")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.i_input = param
    del param

    param = lastNode.createInt2DParam("i_input_range", "i_input_range")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)
    param.setDefaultValue(0, 1)
    param.restoreDefaultValue(1)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(100, 1)
    lastNode.i_input_range = param
    del param

    param = lastNode.createInt2DParam("i_lerp_range", "i_lerp_range")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)
    param.setDefaultValue(0, 1)
    param.restoreDefaultValue(1)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(7, 0)
    lastNode.i_lerp_range = param
    del param

    param = lastNode.createIntParam("i_lerp_result", "i_lerp_result")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(0, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(7, 0)
    lastNode.i_lerp_result = param
    del param

    param = lastNode.createDoubleParam("f_input", "f_input")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(10, 0)
    lastNode.f_input = param
    del param

    param = lastNode.createDouble2DParam("f_input_range", "f_input_range")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setMinimum(-2147483648, 1)
    param.setMaximum(2147483647, 1)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(100, 1)
    lastNode.f_input_range = param
    del param

    param = lastNode.createDouble2DParam("f_lerp_range", "f_lerp_range")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setMinimum(-2147483648, 1)
    param.setMaximum(2147483647, 1)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(1, 1)
    lastNode.f_lerp_range = param
    del param

    param = lastNode.createDoubleParam("f_lerp_result", "f_lerp_result")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(0.1, 0)
    lastNode.f_lerp_result = param
    del param

    # Refresh the GUI with the newly created parameters
    lastNode.setPagesOrder(['Controls', 'Node', 'Settings'])
    lastNode.refreshUserParamsGUI()
    del lastNode

    # Start of node "Input1"
    lastNode = app.createNode("fr.inria.built-in.Input", 1, groupgroup)
    lastNode.setScriptName("Input1")
    lastNode.setLabel("Input1")
    lastNode.setPosition(642, 175)
    lastNode.setSize(104, 30)
    lastNode.setColor(0.3, 0.5, 0.2)
    groupgroupInput1 = lastNode

    del lastNode
    # End of node "Input1"

    # Start of node "Output1"
    lastNode = app.createNode("fr.inria.built-in.Output", 1, groupgroup)
    lastNode.setLabel("Output1")
    lastNode.setPosition(642, 247)
    lastNode.setSize(104, 30)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupgroupOutput1 = lastNode

    del lastNode
    # End of node "Output1"

    # Now that all nodes are created we can connect them together, restore expressions
    groupgroupOutput1.connectInput(0, groupgroupInput1)

    param = groupgroup.getParam("i_lerp_result")
    param.setExpression("import numpy as np\r\n\r\ni = thisNode.i_input.get()\r\n\r\ni0 = thisNode.i_input_range.get()[0]\r\ni1 = thisNode.i_input_range.get()[1]\r\n\r\nr0 = thisNode.i_lerp_range.get()[0]\r\nr1 = thisNode.i_lerp_range.get()[1]\r\n\r\nir = [i0, i1]\r\nlr = [r0, r1]\r\n\r\ny_new = np.interp(i, ir, lr)\r\nret = y_new\r\n\r\n\r\n", True, 0)
    del param
    param = groupgroup.getParam("f_input")
    param.setExpression("thisGroup.lumpy_wet.get()", False, 0)
    del param
    param = groupgroup.getParam("f_lerp_result")
    param.setExpression("import numpy as np\r\n\r\ni = thisNode.f_input.get()\r\n\r\ni0 = thisNode.f_input_range.get()[0]\r\ni1 = thisNode.f_input_range.get()[1]\r\n\r\nr0 = thisNode.f_lerp_range.get()[0]\r\nr1 = thisNode.f_lerp_range.get()[1]\r\n\r\nir = [i0, i1]\r\nlr = [r0, r1]\r\n\r\ny_new = np.interp(i, ir, lr)\r\nret = y_new\r\n\r\n\r\n", True, 0)
    del param

    # Start of node "Lerp_Lrough"
    lastNode = app.createNode("fr.inria.built-in.Group", 1, group)
    lastNode.setScriptName("Lerp_Lrough")
    lastNode.setLabel("Lerp_Lrough")
    lastNode.setPosition(2430, 3214)
    lastNode.setSize(104, 30)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupLerp_Lrough = lastNode


    # Create the user parameters
    lastNode.Controls = lastNode.createPageParam("Controls", "Controls")
    param = lastNode.createSeparatorParam("integer_________", "integer linear interpolation")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.integer_________ = param
    del param

    param = lastNode.createSeparatorParam("float________", "float linear interpolation")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.float________ = param
    del param

    param = lastNode.createGroupParam("int1", "integer linear interpolation")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    lastNode.int1 = param
    del param

    param = lastNode.createStringParam("i_input_desc", "i_input_desc")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeDefault)

    # Add the param to the group, no need to add it to the page
    lastNode.int1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.i_input_desc = param
    del param

    param = lastNode.createStringParam("i_result_desc", "i_result_desc")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeDefault)

    # Add the param to the group, no need to add it to the page
    lastNode.int1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.i_result_desc = param
    del param

    param = lastNode.createGroupParam("float1", "float linear interpolation")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    lastNode.float1 = param
    del param

    param = lastNode.createStringParam("f_input_desc", "f_input_desc")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeDefault)

    # Add the param to the group, no need to add it to the page
    lastNode.float1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.f_input_desc = param
    del param

    param = lastNode.createStringParam("f_result_desc", "f_result_desc")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeDefault)

    # Add the param to the group, no need to add it to the page
    lastNode.float1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.f_result_desc = param
    del param

    param = lastNode.createIntParam("i_input", "i_input")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.i_input = param
    del param

    param = lastNode.createInt2DParam("i_input_range", "i_input_range")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)
    param.setDefaultValue(0, 1)
    param.restoreDefaultValue(1)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(100, 1)
    lastNode.i_input_range = param
    del param

    param = lastNode.createInt2DParam("i_lerp_range", "i_lerp_range")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)
    param.setDefaultValue(0, 1)
    param.restoreDefaultValue(1)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(7, 0)
    lastNode.i_lerp_range = param
    del param

    param = lastNode.createIntParam("i_lerp_result", "i_lerp_result")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(0, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(7, 0)
    lastNode.i_lerp_result = param
    del param

    param = lastNode.createDoubleParam("f_input", "f_input")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(11.5, 0)
    lastNode.f_input = param
    del param

    param = lastNode.createDouble2DParam("f_input_range", "f_input_range")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setMinimum(-2147483648, 1)
    param.setMaximum(2147483647, 1)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(100, 1)
    lastNode.f_input_range = param
    del param

    param = lastNode.createDouble2DParam("f_lerp_range", "f_lerp_range")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setMinimum(-2147483648, 1)
    param.setMaximum(2147483647, 1)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(2, 0)
    lastNode.f_lerp_range = param
    del param

    param = lastNode.createDoubleParam("f_lerp_result", "f_lerp_result")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(1.77, 0)
    lastNode.f_lerp_result = param
    del param

    # Refresh the GUI with the newly created parameters
    lastNode.setPagesOrder(['Controls', 'Node', 'Settings'])
    lastNode.refreshUserParamsGUI()
    del lastNode
    # End of node "Lerp_Lrough"

    groupgroup = groupLerp_Lrough
    # Create all nodes in the group

    # Create the parameters of the group node the same way we did for all internal nodes
    lastNode = groupgroup
    lastNode.setColor(0.7, 0.7, 0.7)

    # Create the user parameters
    lastNode.Controls = lastNode.createPageParam("Controls", "Controls")
    param = lastNode.createSeparatorParam("integer_________", "integer linear interpolation")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.integer_________ = param
    del param

    param = lastNode.createSeparatorParam("float________", "float linear interpolation")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.float________ = param
    del param

    param = lastNode.createGroupParam("int1", "integer linear interpolation")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    lastNode.int1 = param
    del param

    param = lastNode.createStringParam("i_input_desc", "i_input_desc")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeDefault)

    # Add the param to the group, no need to add it to the page
    lastNode.int1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.i_input_desc = param
    del param

    param = lastNode.createStringParam("i_result_desc", "i_result_desc")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeDefault)

    # Add the param to the group, no need to add it to the page
    lastNode.int1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.i_result_desc = param
    del param

    param = lastNode.createGroupParam("float1", "float linear interpolation")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    lastNode.float1 = param
    del param

    param = lastNode.createStringParam("f_input_desc", "f_input_desc")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeDefault)

    # Add the param to the group, no need to add it to the page
    lastNode.float1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.f_input_desc = param
    del param

    param = lastNode.createStringParam("f_result_desc", "f_result_desc")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeDefault)

    # Add the param to the group, no need to add it to the page
    lastNode.float1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.f_result_desc = param
    del param

    param = lastNode.createIntParam("i_input", "i_input")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.i_input = param
    del param

    param = lastNode.createInt2DParam("i_input_range", "i_input_range")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)
    param.setDefaultValue(0, 1)
    param.restoreDefaultValue(1)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(100, 1)
    lastNode.i_input_range = param
    del param

    param = lastNode.createInt2DParam("i_lerp_range", "i_lerp_range")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)
    param.setDefaultValue(0, 1)
    param.restoreDefaultValue(1)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(7, 0)
    lastNode.i_lerp_range = param
    del param

    param = lastNode.createIntParam("i_lerp_result", "i_lerp_result")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(0, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(7, 0)
    lastNode.i_lerp_result = param
    del param

    param = lastNode.createDoubleParam("f_input", "f_input")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(11.5, 0)
    lastNode.f_input = param
    del param

    param = lastNode.createDouble2DParam("f_input_range", "f_input_range")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setMinimum(-2147483648, 1)
    param.setMaximum(2147483647, 1)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(100, 1)
    lastNode.f_input_range = param
    del param

    param = lastNode.createDouble2DParam("f_lerp_range", "f_lerp_range")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setMinimum(-2147483648, 1)
    param.setMaximum(2147483647, 1)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(2, 0)
    lastNode.f_lerp_range = param
    del param

    param = lastNode.createDoubleParam("f_lerp_result", "f_lerp_result")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(1.77, 0)
    lastNode.f_lerp_result = param
    del param

    # Refresh the GUI with the newly created parameters
    lastNode.setPagesOrder(['Controls', 'Node', 'Settings'])
    lastNode.refreshUserParamsGUI()
    del lastNode

    # Start of node "Input1"
    lastNode = app.createNode("fr.inria.built-in.Input", 1, groupgroup)
    lastNode.setScriptName("Input1")
    lastNode.setLabel("Input1")
    lastNode.setPosition(642, 175)
    lastNode.setSize(104, 30)
    lastNode.setColor(0.3, 0.5, 0.2)
    groupgroupInput1 = lastNode

    del lastNode
    # End of node "Input1"

    # Start of node "Output1"
    lastNode = app.createNode("fr.inria.built-in.Output", 1, groupgroup)
    lastNode.setLabel("Output1")
    lastNode.setPosition(642, 247)
    lastNode.setSize(104, 30)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupgroupOutput1 = lastNode

    del lastNode
    # End of node "Output1"

    # Now that all nodes are created we can connect them together, restore expressions
    groupgroupOutput1.connectInput(0, groupgroupInput1)

    param = groupgroup.getParam("i_lerp_result")
    param.setExpression("import numpy as np\r\n\r\ni = thisNode.i_input.get()\r\n\r\ni0 = thisNode.i_input_range.get()[0]\r\ni1 = thisNode.i_input_range.get()[1]\r\n\r\nr0 = thisNode.i_lerp_range.get()[0]\r\nr1 = thisNode.i_lerp_range.get()[1]\r\n\r\nir = [i0, i1]\r\nlr = [r0, r1]\r\n\r\ny_new = np.interp(i, ir, lr)\r\nret = y_new\r\n\r\n\r\n", True, 0)
    del param
    param = groupgroup.getParam("f_input")
    param.setExpression("thisGroup.lumpy_rough.get()", False, 0)
    del param
    param = groupgroup.getParam("f_lerp_result")
    param.setExpression("import numpy as np\r\n\r\ni = thisNode.f_input.get()\r\n\r\ni0 = thisNode.f_input_range.get()[0]\r\ni1 = thisNode.f_input_range.get()[1]\r\n\r\nr0 = thisNode.f_lerp_range.get()[0]\r\nr1 = thisNode.f_lerp_range.get()[1]\r\n\r\nir = [i0, i1]\r\nlr = [r0, r1]\r\n\r\ny_new = np.interp(i, ir, lr)\r\nret = y_new\r\n\r\n\r\n", True, 0)
    del param

    # Start of node "SpecColorMix"
    lastNode = app.createNode("net.sf.openfx.GradePlugin", 2, group)
    lastNode.setScriptName("SpecColorMix")
    lastNode.setLabel("SpecColorMix")
    lastNode.setPosition(1580, 3209)
    lastNode.setSize(104, 30)
    lastNode.setColor(0.48, 0.66, 1)
    groupSpecColorMix = lastNode

    param = lastNode.getParam("NatronOfxParamProcessA")
    if param is not None:
        param.setValue(True)
        del param

    param = lastNode.getParam("premultChanged")
    if param is not None:
        param.setValue(True)
        del param

    del lastNode
    # End of node "SpecColorMix"

    # Start of node "Out2"
    lastNode = app.createNode("net.sf.openfx.MergeOut", 1, group)
    lastNode.setScriptName("Out2")
    lastNode.setLabel("Out2")
    lastNode.setPosition(1919, 3201)
    lastNode.setSize(104, 38)
    lastNode.setColor(0.3, 0.37, 0.776)
    groupOut2 = lastNode

    param = lastNode.getParam("operation")
    if param is not None:
        param.set("multiply")
        del param

    param = lastNode.getParam("userTextArea")
    if param is not None:
        param.setValue("<Natron>(out)</Natron>")
        del param

    del lastNode
    # End of node "Out2"

    # Start of node "Blur2"
    lastNode = app.createNode("net.sf.cimg.CImgBlur", 4, group)
    lastNode.setScriptName("Blur2")
    lastNode.setLabel("Blur2")
    lastNode.setPosition(1572, 2931)
    lastNode.setSize(104, 30)
    lastNode.setColor(0.8, 0.5, 0.3)
    groupBlur2 = lastNode

    param = lastNode.getParam("size")
    if param is not None:
        param.setValue(19.2, 0)
        param.setValue(19.2, 1)
        del param

    param = lastNode.getParam("disableNode")
    if param is not None:
        param.setValue(True)
        del param

    del lastNode
    # End of node "Blur2"

    # Start of node "Keyer1"
    lastNode = app.createNode("net.sf.openfx.KeyerPlugin", 1, group)
    lastNode.setScriptName("Keyer1")
    lastNode.setLabel("Keyer1")
    lastNode.setPosition(2049, 2991)
    lastNode.setSize(104, 38)
    lastNode.setColor(0, 1, 0)
    groupKeyer1 = lastNode

    param = lastNode.getParam("softnessLower")
    if param is not None:
        param.setValue(0, 0)
        del param

    param = lastNode.getParam("center")
    if param is not None:
        param.setValue(0, 0)
        del param

    param = lastNode.getParam("softnessUpper")
    if param is not None:
        param.setValue(1, 0)
        del param

    param = lastNode.getParam("userTextArea")
    if param is not None:
        param.setValue("<Natron>(Luminance)</Natron>")
        del param

    del lastNode
    # End of node "Keyer1"

    # Start of node "Shuffle1"
    lastNode = app.createNode("net.sf.openfx.ShufflePlugin", 3, group)
    lastNode.setScriptName("Shuffle1")
    lastNode.setLabel("Shuffle1")
    lastNode.setPosition(1572, 2765)
    lastNode.setSize(104, 30)
    lastNode.setColor(0.6, 0.24, 0.39)
    groupShuffle1 = lastNode

    param = lastNode.getParam("outputR")
    if param is not None:
        param.set("A.uk.co.thefoundry.OfxImagePlaneColour.A")
        del param

    param = lastNode.getParam("outputG")
    if param is not None:
        param.set("A.uk.co.thefoundry.OfxImagePlaneColour.A")
        del param

    param = lastNode.getParam("outputB")
    if param is not None:
        param.set("A.uk.co.thefoundry.OfxImagePlaneColour.A")
        del param

    param = lastNode.getParam("outputA")
    if param is not None:
        param.set("A.uk.co.thefoundry.OfxImagePlaneColour.A")
        del param

    del lastNode
    # End of node "Shuffle1"

    # Start of node "Multiply4"
    lastNode = app.createNode("net.sf.openfx.MultiplyPlugin", 2, group)
    lastNode.setScriptName("Multiply4")
    lastNode.setLabel("Multiply4")
    lastNode.setPosition(1580, 3805)
    lastNode.setSize(104, 30)
    lastNode.setColor(0.48, 0.66, 1)
    groupMultiply4 = lastNode

    param = lastNode.getParam("NatronOfxParamProcessG")
    if param is not None:
        param.setValue(False)
        del param

    param = lastNode.getParam("NatronOfxParamProcessB")
    if param is not None:
        param.setValue(False)
        del param

    param = lastNode.getParam("NatronOfxParamProcessA")
    if param is not None:
        param.setValue(True)
        del param

    param = lastNode.getParam("value")
    if param is not None:
        param.setValue(0, 0)
        param.setValue(0, 1)
        param.setValue(0, 2)
        param.setValue(0, 3)
        del param

    param = lastNode.getParam("maskInvert")
    if param is not None:
        param.setValue(True)
        del param

    param = lastNode.getParam("mix")
    if param is not None:
        param.setValue(0.039, 0)
        del param

    param = lastNode.getParam("enableMask_Mask")
    if param is not None:
        param.setValue(True)
        del param

    del lastNode
    # End of node "Multiply4"

    # Start of node "Unpremult1"
    lastNode = app.createNode("net.sf.openfx.Unpremult", 2, group)
    lastNode.setScriptName("Unpremult1")
    lastNode.setLabel("Unpremult1")
    lastNode.setPosition(1800, 3712)
    lastNode.setSize(104, 30)
    lastNode.setColor(0.3, 0.37, 0.776)
    groupUnpremult1 = lastNode

    param = lastNode.getParam("disableNode")
    if param is not None:
        param.setValue(True)
        del param

    del lastNode
    # End of node "Unpremult1"

    # Start of node "Premult3"
    lastNode = app.createNode("net.sf.openfx.Premult", 2, group)
    lastNode.setScriptName("Premult3")
    lastNode.setLabel("Premult3")
    lastNode.setPosition(1783, 3897)
    lastNode.setSize(104, 30)
    lastNode.setColor(0.3, 0.37, 0.776)
    groupPremult3 = lastNode

    param = lastNode.getParam("disableNode")
    if param is not None:
        param.setValue(True)
        del param

    del lastNode
    # End of node "Premult3"

    # Start of node "Dot9"
    lastNode = app.createNode("fr.inria.built-in.Dot", 1, group)
    lastNode.setScriptName("Dot9")
    lastNode.setLabel("Dot9")
    lastNode.setPosition(1411, 3950)
    lastNode.setSize(15, 15)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupDot9 = lastNode

    del lastNode
    # End of node "Dot9"

    # Start of node "Backdrop1"
    lastNode = app.createNode("fr.inria.built-in.BackDrop", 1, group)
    lastNode.setScriptName("Backdrop1")
    lastNode.setLabel("Backdrop1")
    lastNode.setPosition(1553, -1054)
    lastNode.setSize(1012, 1360)
    lastNode.setColor(0.45, 0.45, 0.45)
    groupBackdrop1 = lastNode

    param = lastNode.getParam("Label")
    if param is not None:
        param.setValue("<font size=\"26\" color=\"#000000\" face=\"Droid Sans\">Separation</font>")
        del param

    del lastNode
    # End of node "Backdrop1"

    # Start of node "Switch2"
    lastNode = app.createNode("net.sf.openfx.switchPlugin", 1, group)
    lastNode.setScriptName("Switch2")
    lastNode.setLabel("Switch2")
    lastNode.setPosition(1671, 5565)
    lastNode.setSize(104, 30)
    lastNode.setColor(0.3, 0.37, 0.776)
    groupSwitch2 = lastNode

    param = lastNode.getParam("which")
    if param is not None:
        param.setValue(1, 0)
        del param

    del lastNode
    # End of node "Switch2"

    # Start of node "Lcoagu_Lthin"
    lastNode = app.createNode("fr.inria.built-in.Group", 1, group)
    lastNode.setScriptName("Lcoagu_Lthin")
    lastNode.setLabel("Lcoagu_Lthin")
    lastNode.setPosition(2273, -886)
    lastNode.setSize(104, 30)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupLcoagu_Lthin = lastNode

    param = lastNode.getParam("hideInputs")
    if param is not None:
        param.setValue(True)
        del param


    # Create the user parameters
    lastNode.Controls = lastNode.createPageParam("Controls", "Controls")
    param = lastNode.createGroupParam("int1", "integer linear interpolation")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setOpened(True)
    lastNode.int1 = param
    del param

    param = lastNode.createStringParam("i_input_desc", "i_input_desc")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeDefault)

    # Add the param to the group, no need to add it to the page
    lastNode.int1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue("coagulation")
    lastNode.i_input_desc = param
    del param

    param = lastNode.createStringParam("i_result_desc", "i_result_desc")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeDefault)

    # Add the param to the group, no need to add it to the page
    lastNode.int1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue("Scale")
    lastNode.i_result_desc = param
    del param

    param = lastNode.createIntParam("i_input", "i_input")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)

    # Add the param to the group, no need to add it to the page
    lastNode.int1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(40, 0)
    lastNode.i_input = param
    del param

    param = lastNode.createInt2DParam("i_input_range", "i_input_range")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)
    param.setDefaultValue(0, 1)
    param.restoreDefaultValue(1)

    # Add the param to the group, no need to add it to the page
    lastNode.int1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(100, 1)
    lastNode.i_input_range = param
    del param

    param = lastNode.createInt2DParam("i_lerp_range", "i_lerp_range")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)
    param.setDefaultValue(0, 1)
    param.restoreDefaultValue(1)

    # Add the param to the group, no need to add it to the page
    lastNode.int1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(6, 0)
    param.setValue(8, 1)
    lastNode.i_lerp_range = param
    del param

    param = lastNode.createIntParam("i_lerp_result", "i_lerp_result")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)

    # Add the param to the group, no need to add it to the page
    lastNode.int1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(6, 0)
    lastNode.i_lerp_result = param
    del param

    param = lastNode.createGroupParam("float1", "float linear interpolation")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setOpened(True)
    lastNode.float1 = param
    del param

    param = lastNode.createStringParam("f_input_desc", "f_input_desc")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeDefault)

    # Add the param to the group, no need to add it to the page
    lastNode.float1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue("thinning")
    lastNode.f_input_desc = param
    del param

    param = lastNode.createStringParam("f_result_desc", "f_result_desc")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeDefault)

    # Add the param to the group, no need to add it to the page
    lastNode.float1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue("Beta")
    lastNode.f_result_desc = param
    del param

    param = lastNode.createDoubleParam("f_input", "f_input")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)

    # Add the param to the group, no need to add it to the page
    lastNode.float1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(0, 0)
    lastNode.f_input = param
    del param

    param = lastNode.createDouble2DParam("f_input_range", "f_input_range")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setMinimum(-2147483648, 1)
    param.setMaximum(2147483647, 1)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)

    # Add the param to the group, no need to add it to the page
    lastNode.float1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(100, 1)
    lastNode.f_input_range = param
    del param

    param = lastNode.createDouble2DParam("f_lerp_range", "f_lerp_range")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setMinimum(-2147483648, 1)
    param.setMaximum(2147483647, 1)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)

    # Add the param to the group, no need to add it to the page
    lastNode.float1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(0.5, 1)
    lastNode.f_lerp_range = param
    del param

    param = lastNode.createDoubleParam("f_lerp_result", "f_lerp_result")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)

    # Add the param to the group, no need to add it to the page
    lastNode.float1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(0, 0)
    lastNode.f_lerp_result = param
    del param

    param = lastNode.createSeparatorParam("integer_________", "integer linear interpolation")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.integer_________ = param
    del param

    param = lastNode.createSeparatorParam("float________", "float linear interpolation")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.float________ = param
    del param

    # Refresh the GUI with the newly created parameters
    lastNode.setPagesOrder(['Controls', 'Node', 'Settings'])
    lastNode.refreshUserParamsGUI()
    del lastNode
    # End of node "Lcoagu_Lthin"

    groupgroup = groupLcoagu_Lthin
    # Create all nodes in the group

    # Create the parameters of the group node the same way we did for all internal nodes
    lastNode = groupgroup
    lastNode.setColor(0.7, 0.7, 0.7)
    param = lastNode.getParam("hideInputs")
    if param is not None:
        param.setValue(True)
        del param


    # Create the user parameters
    lastNode.Controls = lastNode.createPageParam("Controls", "Controls")
    param = lastNode.createGroupParam("int1", "integer linear interpolation")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setOpened(True)
    lastNode.int1 = param
    del param

    param = lastNode.createStringParam("i_input_desc", "i_input_desc")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeDefault)

    # Add the param to the group, no need to add it to the page
    lastNode.int1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue("coagulation")
    lastNode.i_input_desc = param
    del param

    param = lastNode.createStringParam("i_result_desc", "i_result_desc")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeDefault)

    # Add the param to the group, no need to add it to the page
    lastNode.int1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue("Scale")
    lastNode.i_result_desc = param
    del param

    param = lastNode.createIntParam("i_input", "i_input")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)

    # Add the param to the group, no need to add it to the page
    lastNode.int1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(40, 0)
    lastNode.i_input = param
    del param

    param = lastNode.createInt2DParam("i_input_range", "i_input_range")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)
    param.setDefaultValue(0, 1)
    param.restoreDefaultValue(1)

    # Add the param to the group, no need to add it to the page
    lastNode.int1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(100, 1)
    lastNode.i_input_range = param
    del param

    param = lastNode.createInt2DParam("i_lerp_range", "i_lerp_range")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)
    param.setDefaultValue(0, 1)
    param.restoreDefaultValue(1)

    # Add the param to the group, no need to add it to the page
    lastNode.int1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(6, 0)
    param.setValue(8, 1)
    lastNode.i_lerp_range = param
    del param

    param = lastNode.createIntParam("i_lerp_result", "i_lerp_result")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)

    # Add the param to the group, no need to add it to the page
    lastNode.int1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(6, 0)
    lastNode.i_lerp_result = param
    del param

    param = lastNode.createGroupParam("float1", "float linear interpolation")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setOpened(True)
    lastNode.float1 = param
    del param

    param = lastNode.createStringParam("f_input_desc", "f_input_desc")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeDefault)

    # Add the param to the group, no need to add it to the page
    lastNode.float1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue("thinning")
    lastNode.f_input_desc = param
    del param

    param = lastNode.createStringParam("f_result_desc", "f_result_desc")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeDefault)

    # Add the param to the group, no need to add it to the page
    lastNode.float1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue("Beta")
    lastNode.f_result_desc = param
    del param

    param = lastNode.createDoubleParam("f_input", "f_input")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)

    # Add the param to the group, no need to add it to the page
    lastNode.float1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(0, 0)
    lastNode.f_input = param
    del param

    param = lastNode.createDouble2DParam("f_input_range", "f_input_range")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setMinimum(-2147483648, 1)
    param.setMaximum(2147483647, 1)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)

    # Add the param to the group, no need to add it to the page
    lastNode.float1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(100, 1)
    lastNode.f_input_range = param
    del param

    param = lastNode.createDouble2DParam("f_lerp_range", "f_lerp_range")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setMinimum(-2147483648, 1)
    param.setMaximum(2147483647, 1)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)

    # Add the param to the group, no need to add it to the page
    lastNode.float1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(0.5, 1)
    lastNode.f_lerp_range = param
    del param

    param = lastNode.createDoubleParam("f_lerp_result", "f_lerp_result")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)

    # Add the param to the group, no need to add it to the page
    lastNode.float1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(0, 0)
    lastNode.f_lerp_result = param
    del param

    param = lastNode.createSeparatorParam("integer_________", "integer linear interpolation")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.integer_________ = param
    del param

    param = lastNode.createSeparatorParam("float________", "float linear interpolation")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.float________ = param
    del param

    # Refresh the GUI with the newly created parameters
    lastNode.setPagesOrder(['Controls', 'Node', 'Settings'])
    lastNode.refreshUserParamsGUI()
    del lastNode

    # Start of node "Input1"
    lastNode = app.createNode("fr.inria.built-in.Input", 1, groupgroup)
    lastNode.setScriptName("Input1")
    lastNode.setLabel("Input1")
    lastNode.setPosition(642, 175)
    lastNode.setSize(104, 30)
    lastNode.setColor(0.3, 0.5, 0.2)
    groupgroupInput1 = lastNode

    del lastNode
    # End of node "Input1"

    # Start of node "Output1"
    lastNode = app.createNode("fr.inria.built-in.Output", 1, groupgroup)
    lastNode.setLabel("Output1")
    lastNode.setPosition(642, 247)
    lastNode.setSize(104, 30)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupgroupOutput1 = lastNode

    del lastNode
    # End of node "Output1"

    # Now that all nodes are created we can connect them together, restore expressions
    groupgroupOutput1.connectInput(0, groupgroupInput1)

    param = groupgroup.getParam("i_input")
    param.setExpression("thisGroup.coagulation.get()", False, 0)
    del param
    param = groupgroup.getParam("i_lerp_result")
    param.setExpression("import numpy as np\r\n\r\ni = thisNode.i_input.get()\r\n\r\ni0 = thisNode.i_input_range.get()[0]\r\ni1 = thisNode.i_input_range.get()[1]\r\n\r\nr0 = thisNode.i_lerp_range.get()[0]\r\nr1 = thisNode.i_lerp_range.get()[1]\r\n\r\nir = [i0, i1]\r\nlr = [r0, r1]\r\n\r\ny_new = np.interp(i, ir, lr)\r\nret = y_new\r\n\r\n\r\n", True, 0)
    del param
    param = groupgroup.getParam("f_input")
    param.setExpression("thisGroup.thinning.get()", False, 0)
    del param
    param = groupgroup.getParam("f_lerp_result")
    param.setExpression("import numpy as np\r\n\r\ni = thisNode.f_input.get()\r\n\r\ni0 = thisNode.f_input_range.get()[0]\r\ni1 = thisNode.f_input_range.get()[1]\r\n\r\nr0 = thisNode.f_lerp_range.get()[0]\r\nr1 = thisNode.f_lerp_range.get()[1]\r\n\r\nir = [i0, i1]\r\nlr = [r0, r1]\r\n\r\ny_new = np.interp(i, ir, lr)\r\nret = y_new\r\n\r\n\r\n", True, 0)
    del param

    # Start of node "Lclotting"
    lastNode = app.createNode("fr.inria.built-in.Group", 1, group)
    lastNode.setScriptName("Lclotting")
    lastNode.setLabel("Lclotting")
    lastNode.setPosition(2273, -972)
    lastNode.setSize(104, 30)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupLclotting = lastNode

    param = lastNode.getParam("hideInputs")
    if param is not None:
        param.setValue(True)
        del param


    # Create the user parameters
    lastNode.Controls = lastNode.createPageParam("Controls", "Controls")
    param = lastNode.createGroupParam("int1", "integer linear interpolation")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    lastNode.int1 = param
    del param

    param = lastNode.createStringParam("i_input_desc", "i_input_desc")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeDefault)

    # Add the param to the group, no need to add it to the page
    lastNode.int1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue("thisGroup.thickness.get()")
    lastNode.i_input_desc = param
    del param

    param = lastNode.createStringParam("i_result_desc", "i_result_desc")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeDefault)

    # Add the param to the group, no need to add it to the page
    lastNode.int1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue("Alpha")
    lastNode.i_result_desc = param
    del param

    param = lastNode.createIntParam("i_input", "i_input")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)

    # Add the param to the group, no need to add it to the page
    lastNode.int1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.i_input = param
    del param

    param = lastNode.createInt2DParam("i_input_range", "i_input_range")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)
    param.setDefaultValue(0, 1)
    param.restoreDefaultValue(1)

    # Add the param to the group, no need to add it to the page
    lastNode.int1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(100, 1)
    lastNode.i_input_range = param
    del param

    param = lastNode.createInt2DParam("i_lerp_range", "i_lerp_range")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)
    param.setDefaultValue(0, 1)
    param.restoreDefaultValue(1)

    # Add the param to the group, no need to add it to the page
    lastNode.int1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(7, 0)
    lastNode.i_lerp_range = param
    del param

    param = lastNode.createIntParam("i_lerp_result", "i_lerp_result")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)

    # Add the param to the group, no need to add it to the page
    lastNode.int1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(7, 0)
    lastNode.i_lerp_result = param
    del param

    param = lastNode.createGroupParam("float1", "float linear interpolation")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setOpened(True)
    lastNode.float1 = param
    del param

    param = lastNode.createStringParam("f_input_desc", "f_input_desc")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeDefault)

    # Add the param to the group, no need to add it to the page
    lastNode.float1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue("clotting")
    lastNode.f_input_desc = param
    del param

    param = lastNode.createStringParam("f_result_desc", "f_result_desc")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeDefault)

    # Add the param to the group, no need to add it to the page
    lastNode.float1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.f_result_desc = param
    del param

    param = lastNode.createDoubleParam("f_input", "f_input")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)

    # Add the param to the group, no need to add it to the page
    lastNode.float1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(21.5, 0)
    lastNode.f_input = param
    del param

    param = lastNode.createDouble2DParam("f_input_range", "f_input_range")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setMinimum(-2147483648, 1)
    param.setMaximum(2147483647, 1)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)

    # Add the param to the group, no need to add it to the page
    lastNode.float1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(100, 1)
    lastNode.f_input_range = param
    del param

    param = lastNode.createDouble2DParam("f_lerp_range", "f_lerp_range")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setMinimum(-2147483648, 1)
    param.setMaximum(2147483647, 1)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)

    # Add the param to the group, no need to add it to the page
    lastNode.float1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(0.02, 1)
    lastNode.f_lerp_range = param
    del param

    param = lastNode.createDoubleParam("f_lerp_result", "f_lerp_result")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)

    # Add the param to the group, no need to add it to the page
    lastNode.float1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(0.0043, 0)
    lastNode.f_lerp_result = param
    del param

    param = lastNode.createSeparatorParam("integer_________", "integer linear interpolation")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.integer_________ = param
    del param

    param = lastNode.createSeparatorParam("float________", "float linear interpolation")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.float________ = param
    del param

    # Refresh the GUI with the newly created parameters
    lastNode.setPagesOrder(['Controls', 'Node', 'Settings'])
    lastNode.refreshUserParamsGUI()
    del lastNode
    # End of node "Lclotting"

    groupgroup = groupLclotting
    # Create all nodes in the group

    # Create the parameters of the group node the same way we did for all internal nodes
    lastNode = groupgroup
    lastNode.setColor(0.7, 0.7, 0.7)
    param = lastNode.getParam("hideInputs")
    if param is not None:
        param.setValue(True)
        del param


    # Create the user parameters
    lastNode.Controls = lastNode.createPageParam("Controls", "Controls")
    param = lastNode.createGroupParam("int1", "integer linear interpolation")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    lastNode.int1 = param
    del param

    param = lastNode.createStringParam("i_input_desc", "i_input_desc")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeDefault)

    # Add the param to the group, no need to add it to the page
    lastNode.int1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue("thisGroup.thickness.get()")
    lastNode.i_input_desc = param
    del param

    param = lastNode.createStringParam("i_result_desc", "i_result_desc")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeDefault)

    # Add the param to the group, no need to add it to the page
    lastNode.int1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue("Alpha")
    lastNode.i_result_desc = param
    del param

    param = lastNode.createIntParam("i_input", "i_input")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)

    # Add the param to the group, no need to add it to the page
    lastNode.int1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.i_input = param
    del param

    param = lastNode.createInt2DParam("i_input_range", "i_input_range")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)
    param.setDefaultValue(0, 1)
    param.restoreDefaultValue(1)

    # Add the param to the group, no need to add it to the page
    lastNode.int1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(100, 1)
    lastNode.i_input_range = param
    del param

    param = lastNode.createInt2DParam("i_lerp_range", "i_lerp_range")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)
    param.setDefaultValue(0, 1)
    param.restoreDefaultValue(1)

    # Add the param to the group, no need to add it to the page
    lastNode.int1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(7, 0)
    lastNode.i_lerp_range = param
    del param

    param = lastNode.createIntParam("i_lerp_result", "i_lerp_result")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)

    # Add the param to the group, no need to add it to the page
    lastNode.int1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(7, 0)
    lastNode.i_lerp_result = param
    del param

    param = lastNode.createGroupParam("float1", "float linear interpolation")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setOpened(True)
    lastNode.float1 = param
    del param

    param = lastNode.createStringParam("f_input_desc", "f_input_desc")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeDefault)

    # Add the param to the group, no need to add it to the page
    lastNode.float1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue("clotting")
    lastNode.f_input_desc = param
    del param

    param = lastNode.createStringParam("f_result_desc", "f_result_desc")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeDefault)

    # Add the param to the group, no need to add it to the page
    lastNode.float1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.f_result_desc = param
    del param

    param = lastNode.createDoubleParam("f_input", "f_input")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)

    # Add the param to the group, no need to add it to the page
    lastNode.float1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(21.5, 0)
    lastNode.f_input = param
    del param

    param = lastNode.createDouble2DParam("f_input_range", "f_input_range")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setMinimum(-2147483648, 1)
    param.setMaximum(2147483647, 1)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)

    # Add the param to the group, no need to add it to the page
    lastNode.float1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(100, 1)
    lastNode.f_input_range = param
    del param

    param = lastNode.createDouble2DParam("f_lerp_range", "f_lerp_range")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setMinimum(-2147483648, 1)
    param.setMaximum(2147483647, 1)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)

    # Add the param to the group, no need to add it to the page
    lastNode.float1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(0.02, 1)
    lastNode.f_lerp_range = param
    del param

    param = lastNode.createDoubleParam("f_lerp_result", "f_lerp_result")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)

    # Add the param to the group, no need to add it to the page
    lastNode.float1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(0.0043, 0)
    lastNode.f_lerp_result = param
    del param

    param = lastNode.createSeparatorParam("integer_________", "integer linear interpolation")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.integer_________ = param
    del param

    param = lastNode.createSeparatorParam("float________", "float linear interpolation")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.float________ = param
    del param

    # Refresh the GUI with the newly created parameters
    lastNode.setPagesOrder(['Controls', 'Node', 'Settings'])
    lastNode.refreshUserParamsGUI()
    del lastNode

    # Start of node "Input1"
    lastNode = app.createNode("fr.inria.built-in.Input", 1, groupgroup)
    lastNode.setScriptName("Input1")
    lastNode.setLabel("Input1")
    lastNode.setPosition(642, 175)
    lastNode.setSize(104, 30)
    lastNode.setColor(0.3, 0.5, 0.2)
    groupgroupInput1 = lastNode

    del lastNode
    # End of node "Input1"

    # Start of node "Output1"
    lastNode = app.createNode("fr.inria.built-in.Output", 1, groupgroup)
    lastNode.setLabel("Output1")
    lastNode.setPosition(642, 247)
    lastNode.setSize(104, 30)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupgroupOutput1 = lastNode

    del lastNode
    # End of node "Output1"

    # Now that all nodes are created we can connect them together, restore expressions
    groupgroupOutput1.connectInput(0, groupgroupInput1)

    param = groupgroup.getParam("i_lerp_result")
    param.setExpression("import numpy as np\r\n\r\ni = thisNode.i_input.get()\r\n\r\ni0 = thisNode.i_input_range.get()[0]\r\ni1 = thisNode.i_input_range.get()[1]\r\n\r\nr0 = thisNode.i_lerp_range.get()[0]\r\nr1 = thisNode.i_lerp_range.get()[1]\r\n\r\nir = [i0, i1]\r\nlr = [r0, r1]\r\n\r\ny_new = np.interp(i, ir, lr)\r\nret = y_new\r\n\r\n\r\n", True, 0)
    del param
    param = groupgroup.getParam("f_input")
    param.setExpression("thisGroup.clotting.get()", False, 0)
    del param
    param = groupgroup.getParam("f_lerp_result")
    param.setExpression("import numpy as np\r\n\r\ni = thisNode.f_input.get()\r\n\r\ni0 = thisNode.f_input_range.get()[0]\r\ni1 = thisNode.f_input_range.get()[1]\r\n\r\nr0 = thisNode.f_lerp_range.get()[0]\r\nr1 = thisNode.f_lerp_range.get()[1]\r\n\r\nir = [i0, i1]\r\nlr = [r0, r1]\r\n\r\ny_new = np.interp(i, ir, lr)\r\nret = y_new\r\n\r\n\r\n", True, 0)
    del param

    # Start of node "doSeparation"
    lastNode = app.createNode("net.sf.openfx.switchPlugin", 1, group)
    lastNode.setScriptName("doSeparation")
    lastNode.setLabel("doSeparation")
    lastNode.setPosition(1828, 15)
    lastNode.setSize(104, 30)
    lastNode.setColor(0.3, 0.37, 0.776)
    groupdoSeparation = lastNode

    param = lastNode.getParam("which")
    if param is not None:
        param.setValue(1, 0)
        del param

    del lastNode
    # End of node "doSeparation"

    # Start of node "Dot15"
    lastNode = app.createNode("fr.inria.built-in.Dot", 1, group)
    lastNode.setScriptName("Dot15")
    lastNode.setLabel("Dot15")
    lastNode.setPosition(1866, -884)
    lastNode.setSize(15, 15)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupDot15 = lastNode

    del lastNode
    # End of node "Dot15"

    # Start of node "Dot16"
    lastNode = app.createNode("fr.inria.built-in.Dot", 1, group)
    lastNode.setScriptName("Dot16")
    lastNode.setLabel("Dot16")
    lastNode.setPosition(1656, -884)
    lastNode.setSize(15, 15)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupDot16 = lastNode

    del lastNode
    # End of node "Dot16"

    # Start of node "Dot17"
    lastNode = app.createNode("fr.inria.built-in.Dot", 1, group)
    lastNode.setScriptName("Dot17")
    lastNode.setLabel("Dot17")
    lastNode.setPosition(1663, -74)
    lastNode.setSize(15, 15)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupDot17 = lastNode

    del lastNode
    # End of node "Dot17"

    # Start of node "Dot20"
    lastNode = app.createNode("fr.inria.built-in.Dot", 1, group)
    lastNode.setScriptName("Dot20")
    lastNode.setLabel("Dot20")
    lastNode.setPosition(1450, 5356)
    lastNode.setSize(15, 15)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupDot20 = lastNode

    del lastNode
    # End of node "Dot20"

    # Start of node "Lerp_lumpiness"
    lastNode = app.createNode("fr.inria.built-in.Group", 1, group)
    lastNode.setScriptName("Lerp_lumpiness")
    lastNode.setLabel("Lerp_lumpiness")
    lastNode.setPosition(2430, 2420)
    lastNode.setSize(104, 30)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupLerp_lumpiness = lastNode


    # Create the user parameters
    lastNode.Controls = lastNode.createPageParam("Controls", "Controls")
    param = lastNode.createGroupParam("int1", "integer linear interpolation")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setOpened(True)
    lastNode.int1 = param
    del param

    param = lastNode.createStringParam("i_input_desc", "i_input_desc")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeDefault)

    # Add the param to the group, no need to add it to the page
    lastNode.int1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue("lumpy_scale")
    lastNode.i_input_desc = param
    del param

    param = lastNode.createStringParam("i_result_desc", "i_result_desc")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeDefault)

    # Add the param to the group, no need to add it to the page
    lastNode.int1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.i_result_desc = param
    del param

    param = lastNode.createIntParam("i_input", "i_input")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)

    # Add the param to the group, no need to add it to the page
    lastNode.int1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(4, 0)
    lastNode.i_input = param
    del param

    param = lastNode.createInt2DParam("i_input_range", "i_input_range")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)
    param.setDefaultValue(0, 1)
    param.restoreDefaultValue(1)

    # Add the param to the group, no need to add it to the page
    lastNode.int1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(100, 1)
    lastNode.i_input_range = param
    del param

    param = lastNode.createInt2DParam("i_lerp_range", "i_lerp_range")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)
    param.setDefaultValue(0, 1)
    param.restoreDefaultValue(1)

    # Add the param to the group, no need to add it to the page
    lastNode.int1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(100, 1)
    lastNode.i_lerp_range = param
    del param

    param = lastNode.createIntParam("i_lerp_result", "i_lerp_result")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)

    # Add the param to the group, no need to add it to the page
    lastNode.int1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(4, 0)
    lastNode.i_lerp_result = param
    del param

    param = lastNode.createGroupParam("float1", "float linear interpolation")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setOpened(True)
    lastNode.float1 = param
    del param

    param = lastNode.createStringParam("f_input_desc", "f_input_desc")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeDefault)

    # Add the param to the group, no need to add it to the page
    lastNode.float1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue("lumpy_small_size")
    lastNode.f_input_desc = param
    del param

    param = lastNode.createStringParam("f_result_desc", "f_result_desc")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeDefault)

    # Add the param to the group, no need to add it to the page
    lastNode.float1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue("Lumpiness.all")
    lastNode.f_result_desc = param
    del param

    param = lastNode.createDoubleParam("f_input", "f_input")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)

    # Add the param to the group, no need to add it to the page
    lastNode.float1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(6.4, 0)
    lastNode.f_input = param
    del param

    param = lastNode.createDouble2DParam("f_input_range", "f_input_range")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setMinimum(-2147483648, 1)
    param.setMaximum(2147483647, 1)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)

    # Add the param to the group, no need to add it to the page
    lastNode.float1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(100, 1)
    lastNode.f_input_range = param
    del param

    param = lastNode.createDouble2DParam("f_lerp_range", "f_lerp_range")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setMinimum(-2147483648, 1)
    param.setMaximum(2147483647, 1)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)

    # Add the param to the group, no need to add it to the page
    lastNode.float1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(5, 0)
    param.setValue(30, 1)
    lastNode.f_lerp_range = param
    del param

    param = lastNode.createDoubleParam("f_lerp_result", "f_lerp_result")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)

    # Add the param to the group, no need to add it to the page
    lastNode.float1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(6.6, 0)
    lastNode.f_lerp_result = param
    del param

    param = lastNode.createSeparatorParam("integer_________", "integer linear interpolation")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.integer_________ = param
    del param

    param = lastNode.createSeparatorParam("float________", "float linear interpolation")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.float________ = param
    del param

    # Refresh the GUI with the newly created parameters
    lastNode.setPagesOrder(['Controls', 'Node', 'Settings'])
    lastNode.refreshUserParamsGUI()
    del lastNode
    # End of node "Lerp_lumpiness"

    groupgroup = groupLerp_lumpiness
    # Create all nodes in the group

    # Create the parameters of the group node the same way we did for all internal nodes
    lastNode = groupgroup
    lastNode.setColor(0.7, 0.7, 0.7)

    # Create the user parameters
    lastNode.Controls = lastNode.createPageParam("Controls", "Controls")
    param = lastNode.createGroupParam("int1", "integer linear interpolation")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setOpened(True)
    lastNode.int1 = param
    del param

    param = lastNode.createStringParam("i_input_desc", "i_input_desc")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeDefault)

    # Add the param to the group, no need to add it to the page
    lastNode.int1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue("lumpy_scale")
    lastNode.i_input_desc = param
    del param

    param = lastNode.createStringParam("i_result_desc", "i_result_desc")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeDefault)

    # Add the param to the group, no need to add it to the page
    lastNode.int1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.i_result_desc = param
    del param

    param = lastNode.createIntParam("i_input", "i_input")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)

    # Add the param to the group, no need to add it to the page
    lastNode.int1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(4, 0)
    lastNode.i_input = param
    del param

    param = lastNode.createInt2DParam("i_input_range", "i_input_range")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)
    param.setDefaultValue(0, 1)
    param.restoreDefaultValue(1)

    # Add the param to the group, no need to add it to the page
    lastNode.int1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(100, 1)
    lastNode.i_input_range = param
    del param

    param = lastNode.createInt2DParam("i_lerp_range", "i_lerp_range")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)
    param.setDefaultValue(0, 1)
    param.restoreDefaultValue(1)

    # Add the param to the group, no need to add it to the page
    lastNode.int1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(100, 1)
    lastNode.i_lerp_range = param
    del param

    param = lastNode.createIntParam("i_lerp_result", "i_lerp_result")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)

    # Add the param to the group, no need to add it to the page
    lastNode.int1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(4, 0)
    lastNode.i_lerp_result = param
    del param

    param = lastNode.createGroupParam("float1", "float linear interpolation")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setOpened(True)
    lastNode.float1 = param
    del param

    param = lastNode.createStringParam("f_input_desc", "f_input_desc")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeDefault)

    # Add the param to the group, no need to add it to the page
    lastNode.float1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue("lumpy_small_size")
    lastNode.f_input_desc = param
    del param

    param = lastNode.createStringParam("f_result_desc", "f_result_desc")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeDefault)

    # Add the param to the group, no need to add it to the page
    lastNode.float1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue("Lumpiness.all")
    lastNode.f_result_desc = param
    del param

    param = lastNode.createDoubleParam("f_input", "f_input")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)

    # Add the param to the group, no need to add it to the page
    lastNode.float1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(6.4, 0)
    lastNode.f_input = param
    del param

    param = lastNode.createDouble2DParam("f_input_range", "f_input_range")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setMinimum(-2147483648, 1)
    param.setMaximum(2147483647, 1)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)

    # Add the param to the group, no need to add it to the page
    lastNode.float1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(100, 1)
    lastNode.f_input_range = param
    del param

    param = lastNode.createDouble2DParam("f_lerp_range", "f_lerp_range")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setMinimum(-2147483648, 1)
    param.setMaximum(2147483647, 1)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)

    # Add the param to the group, no need to add it to the page
    lastNode.float1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(5, 0)
    param.setValue(30, 1)
    lastNode.f_lerp_range = param
    del param

    param = lastNode.createDoubleParam("f_lerp_result", "f_lerp_result")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)

    # Add the param to the group, no need to add it to the page
    lastNode.float1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(6.6, 0)
    lastNode.f_lerp_result = param
    del param

    param = lastNode.createSeparatorParam("integer_________", "integer linear interpolation")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.integer_________ = param
    del param

    param = lastNode.createSeparatorParam("float________", "float linear interpolation")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.float________ = param
    del param

    # Refresh the GUI with the newly created parameters
    lastNode.setPagesOrder(['Controls', 'Node', 'Settings'])
    lastNode.refreshUserParamsGUI()
    del lastNode

    # Start of node "Input1"
    lastNode = app.createNode("fr.inria.built-in.Input", 1, groupgroup)
    lastNode.setScriptName("Input1")
    lastNode.setLabel("Input1")
    lastNode.setPosition(642, 175)
    lastNode.setSize(104, 30)
    lastNode.setColor(0.3, 0.5, 0.2)
    groupgroupInput1 = lastNode

    del lastNode
    # End of node "Input1"

    # Start of node "Output1"
    lastNode = app.createNode("fr.inria.built-in.Output", 1, groupgroup)
    lastNode.setLabel("Output1")
    lastNode.setPosition(642, 247)
    lastNode.setSize(104, 30)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupgroupOutput1 = lastNode

    del lastNode
    # End of node "Output1"

    # Now that all nodes are created we can connect them together, restore expressions
    groupgroupOutput1.connectInput(0, groupgroupInput1)

    param = groupgroup.getParam("i_lerp_result")
    param.setExpression("import numpy as np\r\n\r\ni = thisNode.i_input.get()\r\n\r\ni0 = thisNode.i_input_range.get()[0]\r\ni1 = thisNode.i_input_range.get()[1]\r\n\r\nr0 = thisNode.i_lerp_range.get()[0]\r\nr1 = thisNode.i_lerp_range.get()[1]\r\n\r\nir = [i0, i1]\r\nlr = [r0, r1]\r\n\r\ny_new = np.interp(i, ir, lr)\r\nret = y_new\r\n\r\n\r\n", True, 0)
    del param
    param = groupgroup.getParam("f_input")
    param.setExpression("thisGroup.lumpy_small_size.get()", False, 0)
    del param
    param = groupgroup.getParam("f_lerp_result")
    param.setExpression("import numpy as np\r\n\r\ni = thisNode.f_input.get()\r\n\r\ni0 = thisNode.f_input_range.get()[0]\r\ni1 = thisNode.f_input_range.get()[1]\r\n\r\nr0 = thisNode.f_lerp_range.get()[0]\r\nr1 = thisNode.f_lerp_range.get()[1]\r\n\r\nir = [i0, i1]\r\nlr = [r0, r1]\r\n\r\ny_new = np.interp(i, ir, lr)\r\nret = y_new\r\n\r\n\r\n", True, 0)
    del param

    # Start of node "Switch1"
    lastNode = app.createNode("net.sf.openfx.switchPlugin", 1, group)
    lastNode.setScriptName("Switch1")
    lastNode.setLabel("Switch1")
    lastNode.setPosition(1674, 4432)
    lastNode.setSize(104, 30)
    lastNode.setColor(0.3, 0.37, 0.776)
    groupSwitch1 = lastNode

    param = lastNode.getParam("which")
    if param is not None:
        param.setValue(1, 0)
        del param

    del lastNode
    # End of node "Switch1"

    # Start of node "Lerp_lumpy_mix"
    lastNode = app.createNode("fr.inria.built-in.Group", 1, group)
    lastNode.setScriptName("Lerp_lumpy_mix")
    lastNode.setLabel("Lerp_lumpy_mix")
    lastNode.setPosition(2430, 4100)
    lastNode.setSize(104, 43)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupLerp_lumpy_mix = lastNode


    # Create the user parameters
    lastNode.Controls = lastNode.createPageParam("Controls", "Controls")
    param = lastNode.createGroupParam("int1", "integer linear interpolation")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    lastNode.int1 = param
    del param

    param = lastNode.createStringParam("i_input_desc", "i_input_desc")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeDefault)

    # Add the param to the group, no need to add it to the page
    lastNode.int1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.i_input_desc = param
    del param

    param = lastNode.createStringParam("i_result_desc", "i_result_desc")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeDefault)

    # Add the param to the group, no need to add it to the page
    lastNode.int1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.i_result_desc = param
    del param

    param = lastNode.createIntParam("i_input", "i_input")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)

    # Add the param to the group, no need to add it to the page
    lastNode.int1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.i_input = param
    del param

    param = lastNode.createInt2DParam("i_input_range", "i_input_range")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)
    param.setDefaultValue(0, 1)
    param.restoreDefaultValue(1)

    # Add the param to the group, no need to add it to the page
    lastNode.int1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(100, 1)
    lastNode.i_input_range = param
    del param

    param = lastNode.createInt2DParam("i_lerp_range", "i_lerp_range")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)
    param.setDefaultValue(0, 1)
    param.restoreDefaultValue(1)

    # Add the param to the group, no need to add it to the page
    lastNode.int1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(7, 0)
    lastNode.i_lerp_range = param
    del param

    param = lastNode.createIntParam("i_lerp_result", "i_lerp_result")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)

    # Add the param to the group, no need to add it to the page
    lastNode.int1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(7, 0)
    lastNode.i_lerp_result = param
    del param

    param = lastNode.createGroupParam("float1", "float linear interpolation")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setOpened(True)
    lastNode.float1 = param
    del param

    param = lastNode.createStringParam("f_input_desc", "f_input_desc")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeDefault)

    # Add the param to the group, no need to add it to the page
    lastNode.float1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue("thisGroup.lumpy_mix.get()")
    lastNode.f_input_desc = param
    del param

    param = lastNode.createStringParam("f_result_desc", "f_result_desc")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeDefault)

    # Add the param to the group, no need to add it to the page
    lastNode.float1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue("LumpyMix/mix")
    lastNode.f_result_desc = param
    del param

    param = lastNode.createDoubleParam("f_input", "f_input")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)

    # Add the param to the group, no need to add it to the page
    lastNode.float1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(13, 0)
    lastNode.f_input = param
    del param

    param = lastNode.createDouble2DParam("f_input_range", "f_input_range")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setMinimum(-2147483648, 1)
    param.setMaximum(2147483647, 1)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)

    # Add the param to the group, no need to add it to the page
    lastNode.float1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(100, 1)
    lastNode.f_input_range = param
    del param

    param = lastNode.createDouble2DParam("f_lerp_range", "f_lerp_range")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setMinimum(-2147483648, 1)
    param.setMaximum(2147483647, 1)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)

    # Add the param to the group, no need to add it to the page
    lastNode.float1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(1, 1)
    lastNode.f_lerp_range = param
    del param

    param = lastNode.createDoubleParam("f_lerp_result", "f_lerp_result")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)

    # Add the param to the group, no need to add it to the page
    lastNode.float1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(0.13, 0)
    lastNode.f_lerp_result = param
    del param

    param = lastNode.createSeparatorParam("integer_________", "integer linear interpolation")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.integer_________ = param
    del param

    param = lastNode.createSeparatorParam("float________", "float linear interpolation")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.float________ = param
    del param

    # Refresh the GUI with the newly created parameters
    lastNode.setPagesOrder(['Controls', 'Node', 'Settings'])
    lastNode.refreshUserParamsGUI()
    del lastNode
    # End of node "Lerp_lumpy_mix"

    groupgroup = groupLerp_lumpy_mix
    # Create all nodes in the group

    # Create the parameters of the group node the same way we did for all internal nodes
    lastNode = groupgroup
    lastNode.setColor(0.7, 0.7, 0.7)

    # Create the user parameters
    lastNode.Controls = lastNode.createPageParam("Controls", "Controls")
    param = lastNode.createGroupParam("int1", "integer linear interpolation")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    lastNode.int1 = param
    del param

    param = lastNode.createStringParam("i_input_desc", "i_input_desc")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeDefault)

    # Add the param to the group, no need to add it to the page
    lastNode.int1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.i_input_desc = param
    del param

    param = lastNode.createStringParam("i_result_desc", "i_result_desc")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeDefault)

    # Add the param to the group, no need to add it to the page
    lastNode.int1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.i_result_desc = param
    del param

    param = lastNode.createIntParam("i_input", "i_input")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)

    # Add the param to the group, no need to add it to the page
    lastNode.int1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.i_input = param
    del param

    param = lastNode.createInt2DParam("i_input_range", "i_input_range")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)
    param.setDefaultValue(0, 1)
    param.restoreDefaultValue(1)

    # Add the param to the group, no need to add it to the page
    lastNode.int1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(100, 1)
    lastNode.i_input_range = param
    del param

    param = lastNode.createInt2DParam("i_lerp_range", "i_lerp_range")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)
    param.setDefaultValue(0, 1)
    param.restoreDefaultValue(1)

    # Add the param to the group, no need to add it to the page
    lastNode.int1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(7, 0)
    lastNode.i_lerp_range = param
    del param

    param = lastNode.createIntParam("i_lerp_result", "i_lerp_result")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)

    # Add the param to the group, no need to add it to the page
    lastNode.int1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(7, 0)
    lastNode.i_lerp_result = param
    del param

    param = lastNode.createGroupParam("float1", "float linear interpolation")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setOpened(True)
    lastNode.float1 = param
    del param

    param = lastNode.createStringParam("f_input_desc", "f_input_desc")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeDefault)

    # Add the param to the group, no need to add it to the page
    lastNode.float1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue("thisGroup.lumpy_mix.get()")
    lastNode.f_input_desc = param
    del param

    param = lastNode.createStringParam("f_result_desc", "f_result_desc")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeDefault)

    # Add the param to the group, no need to add it to the page
    lastNode.float1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue("LumpyMix/mix")
    lastNode.f_result_desc = param
    del param

    param = lastNode.createDoubleParam("f_input", "f_input")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)

    # Add the param to the group, no need to add it to the page
    lastNode.float1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(13, 0)
    lastNode.f_input = param
    del param

    param = lastNode.createDouble2DParam("f_input_range", "f_input_range")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setMinimum(-2147483648, 1)
    param.setMaximum(2147483647, 1)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)

    # Add the param to the group, no need to add it to the page
    lastNode.float1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(100, 1)
    lastNode.f_input_range = param
    del param

    param = lastNode.createDouble2DParam("f_lerp_range", "f_lerp_range")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setMinimum(-2147483648, 1)
    param.setMaximum(2147483647, 1)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)

    # Add the param to the group, no need to add it to the page
    lastNode.float1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(1, 1)
    lastNode.f_lerp_range = param
    del param

    param = lastNode.createDoubleParam("f_lerp_result", "f_lerp_result")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)

    # Add the param to the group, no need to add it to the page
    lastNode.float1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(0.13, 0)
    lastNode.f_lerp_result = param
    del param

    param = lastNode.createSeparatorParam("integer_________", "integer linear interpolation")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.integer_________ = param
    del param

    param = lastNode.createSeparatorParam("float________", "float linear interpolation")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.float________ = param
    del param

    # Refresh the GUI with the newly created parameters
    lastNode.setPagesOrder(['Controls', 'Node', 'Settings'])
    lastNode.refreshUserParamsGUI()
    del lastNode

    # Start of node "Input1"
    lastNode = app.createNode("fr.inria.built-in.Input", 1, groupgroup)
    lastNode.setScriptName("Input1")
    lastNode.setLabel("Input1")
    lastNode.setPosition(642, 175)
    lastNode.setSize(104, 30)
    lastNode.setColor(0.3, 0.5, 0.2)
    groupgroupInput1 = lastNode

    del lastNode
    # End of node "Input1"

    # Start of node "Output1"
    lastNode = app.createNode("fr.inria.built-in.Output", 1, groupgroup)
    lastNode.setLabel("Output1")
    lastNode.setPosition(642, 247)
    lastNode.setSize(104, 30)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupgroupOutput1 = lastNode

    del lastNode
    # End of node "Output1"

    # Now that all nodes are created we can connect them together, restore expressions
    groupgroupOutput1.connectInput(0, groupgroupInput1)

    param = groupgroup.getParam("i_lerp_result")
    param.setExpression("import numpy as np\r\n\r\ni = thisNode.i_input.get()\r\n\r\ni0 = thisNode.i_input_range.get()[0]\r\ni1 = thisNode.i_input_range.get()[1]\r\n\r\nr0 = thisNode.i_lerp_range.get()[0]\r\nr1 = thisNode.i_lerp_range.get()[1]\r\n\r\nir = [i0, i1]\r\nlr = [r0, r1]\r\n\r\ny_new = np.interp(i, ir, lr)\r\nret = y_new\r\n\r\n\r\n", True, 0)
    del param
    param = groupgroup.getParam("f_input")
    param.setExpression("thisGroup.lumpy_mix.get()", False, 0)
    del param
    param = groupgroup.getParam("f_lerp_result")
    param.setExpression("import numpy as np\r\n\r\ni = thisNode.f_input.get()\r\n\r\ni0 = thisNode.f_input_range.get()[0]\r\ni1 = thisNode.f_input_range.get()[1]\r\n\r\nr0 = thisNode.f_lerp_range.get()[0]\r\nr1 = thisNode.f_lerp_range.get()[1]\r\n\r\nir = [i0, i1]\r\nlr = [r0, r1]\r\n\r\ny_new = np.interp(i, ir, lr)\r\nret = y_new\r\n\r\n\r\n", True, 0)
    del param

    # Start of node "Dot23"
    lastNode = app.createNode("fr.inria.built-in.Dot", 1, group)
    lastNode.setScriptName("Dot23")
    lastNode.setLabel("Dot23")
    lastNode.setPosition(1845, 2740)
    lastNode.setSize(15, 15)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupDot23 = lastNode

    del lastNode
    # End of node "Dot23"

    # Start of node "Grade2"
    lastNode = app.createNode("net.sf.openfx.GradePlugin", 2, group)
    lastNode.setScriptName("Grade2")
    lastNode.setLabel("Grade2")
    lastNode.setPosition(1700, 2559)
    lastNode.setSize(104, 30)
    lastNode.setColor(0.48, 0.66, 1)
    groupGrade2 = lastNode

    param = lastNode.getParam("premultChanged")
    if param is not None:
        param.setValue(True)
        del param

    del lastNode
    # End of node "Grade2"

    # Start of node "Backdrop3"
    lastNode = app.createNode("fr.inria.built-in.BackDrop", 1, group)
    lastNode.setScriptName("Backdrop3")
    lastNode.setLabel("Backdrop3")
    lastNode.setPosition(1187, 4730)
    lastNode.setSize(1671, 937)
    lastNode.setColor(0.45, 0.45, 0.45)
    groupBackdrop3 = lastNode

    param = lastNode.getParam("Label")
    if param is not None:
        param.setValue("<font size=\"26\" color=\"#000000\" face=\"Droid Sans\">Burn After</font>")
        del param

    del lastNode
    # End of node "Backdrop3"

    # Start of node "Lerp_burn"
    lastNode = app.createNode("fr.inria.built-in.Group", 1, group)
    lastNode.setScriptName("Lerp_burn")
    lastNode.setLabel("Lerp_burn")
    lastNode.setPosition(2130, 5183)
    lastNode.setSize(104, 30)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupLerp_burn = lastNode


    # Create the user parameters
    lastNode.Controls = lastNode.createPageParam("Controls", "Controls")
    param = lastNode.createGroupParam("int1", "integer linear interpolation")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setOpened(True)
    lastNode.int1 = param
    del param

    param = lastNode.createStringParam("i_input_desc", "i_input_desc")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeDefault)

    # Add the param to the group, no need to add it to the page
    lastNode.int1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue("thisGroup.burn_edges.get()")
    lastNode.i_input_desc = param
    del param

    param = lastNode.createStringParam("i_result_desc", "i_result_desc")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeDefault)

    # Add the param to the group, no need to add it to the page
    lastNode.int1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.i_result_desc = param
    del param

    param = lastNode.createIntParam("i_input", "i_input")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)

    # Add the param to the group, no need to add it to the page
    lastNode.int1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(94, 0)
    lastNode.i_input = param
    del param

    param = lastNode.createInt2DParam("i_input_range", "i_input_range")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)
    param.setDefaultValue(0, 1)
    param.restoreDefaultValue(1)

    # Add the param to the group, no need to add it to the page
    lastNode.int1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(100, 1)
    lastNode.i_input_range = param
    del param

    param = lastNode.createInt2DParam("i_lerp_range", "i_lerp_range")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)
    param.setDefaultValue(0, 1)
    param.restoreDefaultValue(1)

    # Add the param to the group, no need to add it to the page
    lastNode.int1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(30, 0)
    lastNode.i_lerp_range = param
    del param

    param = lastNode.createIntParam("i_lerp_result", "i_lerp_result")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)

    # Add the param to the group, no need to add it to the page
    lastNode.int1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(1, 0)
    lastNode.i_lerp_result = param
    del param

    param = lastNode.createGroupParam("float1", "float linear interpolation")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setOpened(True)
    lastNode.float1 = param
    del param

    param = lastNode.createStringParam("f_input_desc", "f_input_desc")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeDefault)

    # Add the param to the group, no need to add it to the page
    lastNode.float1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue("thisGroup.burn_amt.get()")
    lastNode.f_input_desc = param
    del param

    param = lastNode.createStringParam("f_result_desc", "f_result_desc")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeDefault)

    # Add the param to the group, no need to add it to the page
    lastNode.float1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue("Lerp_burn.f_lerp_result.get()")
    lastNode.f_result_desc = param
    del param

    param = lastNode.createDoubleParam("f_input", "f_input")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)

    # Add the param to the group, no need to add it to the page
    lastNode.float1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(15.1, 0)
    lastNode.f_input = param
    del param

    param = lastNode.createDouble2DParam("f_input_range", "f_input_range")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setMinimum(-2147483648, 1)
    param.setMaximum(2147483647, 1)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)

    # Add the param to the group, no need to add it to the page
    lastNode.float1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(100, 1)
    lastNode.f_input_range = param
    del param

    param = lastNode.createDouble2DParam("f_lerp_range", "f_lerp_range")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setMinimum(-2147483648, 1)
    param.setMaximum(2147483647, 1)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)

    # Add the param to the group, no need to add it to the page
    lastNode.float1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(1, 0)
    param.setValue(0.5, 1)
    lastNode.f_lerp_range = param
    del param

    param = lastNode.createDoubleParam("f_lerp_result", "f_lerp_result")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)

    # Add the param to the group, no need to add it to the page
    lastNode.float1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(0.9245, 0)
    lastNode.f_lerp_result = param
    del param

    param = lastNode.createSeparatorParam("integer_________", "integer linear interpolation")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.integer_________ = param
    del param

    param = lastNode.createSeparatorParam("float________", "float linear interpolation")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.float________ = param
    del param

    # Refresh the GUI with the newly created parameters
    lastNode.setPagesOrder(['Controls', 'Node', 'Settings'])
    lastNode.refreshUserParamsGUI()
    del lastNode
    # End of node "Lerp_burn"

    groupgroup = groupLerp_burn
    # Create all nodes in the group

    # Create the parameters of the group node the same way we did for all internal nodes
    lastNode = groupgroup
    lastNode.setColor(0.7, 0.7, 0.7)

    # Create the user parameters
    lastNode.Controls = lastNode.createPageParam("Controls", "Controls")
    param = lastNode.createGroupParam("int1", "integer linear interpolation")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setOpened(True)
    lastNode.int1 = param
    del param

    param = lastNode.createStringParam("i_input_desc", "i_input_desc")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeDefault)

    # Add the param to the group, no need to add it to the page
    lastNode.int1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue("thisGroup.burn_edges.get()")
    lastNode.i_input_desc = param
    del param

    param = lastNode.createStringParam("i_result_desc", "i_result_desc")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeDefault)

    # Add the param to the group, no need to add it to the page
    lastNode.int1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.i_result_desc = param
    del param

    param = lastNode.createIntParam("i_input", "i_input")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)

    # Add the param to the group, no need to add it to the page
    lastNode.int1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(94, 0)
    lastNode.i_input = param
    del param

    param = lastNode.createInt2DParam("i_input_range", "i_input_range")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)
    param.setDefaultValue(0, 1)
    param.restoreDefaultValue(1)

    # Add the param to the group, no need to add it to the page
    lastNode.int1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(100, 1)
    lastNode.i_input_range = param
    del param

    param = lastNode.createInt2DParam("i_lerp_range", "i_lerp_range")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)
    param.setDefaultValue(0, 1)
    param.restoreDefaultValue(1)

    # Add the param to the group, no need to add it to the page
    lastNode.int1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(30, 0)
    lastNode.i_lerp_range = param
    del param

    param = lastNode.createIntParam("i_lerp_result", "i_lerp_result")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)

    # Add the param to the group, no need to add it to the page
    lastNode.int1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(1, 0)
    lastNode.i_lerp_result = param
    del param

    param = lastNode.createGroupParam("float1", "float linear interpolation")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setOpened(True)
    lastNode.float1 = param
    del param

    param = lastNode.createStringParam("f_input_desc", "f_input_desc")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeDefault)

    # Add the param to the group, no need to add it to the page
    lastNode.float1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue("thisGroup.burn_amt.get()")
    lastNode.f_input_desc = param
    del param

    param = lastNode.createStringParam("f_result_desc", "f_result_desc")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeDefault)

    # Add the param to the group, no need to add it to the page
    lastNode.float1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue("Lerp_burn.f_lerp_result.get()")
    lastNode.f_result_desc = param
    del param

    param = lastNode.createDoubleParam("f_input", "f_input")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)

    # Add the param to the group, no need to add it to the page
    lastNode.float1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(15.1, 0)
    lastNode.f_input = param
    del param

    param = lastNode.createDouble2DParam("f_input_range", "f_input_range")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setMinimum(-2147483648, 1)
    param.setMaximum(2147483647, 1)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)

    # Add the param to the group, no need to add it to the page
    lastNode.float1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(100, 1)
    lastNode.f_input_range = param
    del param

    param = lastNode.createDouble2DParam("f_lerp_range", "f_lerp_range")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setMinimum(-2147483648, 1)
    param.setMaximum(2147483647, 1)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)

    # Add the param to the group, no need to add it to the page
    lastNode.float1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(1, 0)
    param.setValue(0.5, 1)
    lastNode.f_lerp_range = param
    del param

    param = lastNode.createDoubleParam("f_lerp_result", "f_lerp_result")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)

    # Add the param to the group, no need to add it to the page
    lastNode.float1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(0.9245, 0)
    lastNode.f_lerp_result = param
    del param

    param = lastNode.createSeparatorParam("integer_________", "integer linear interpolation")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.integer_________ = param
    del param

    param = lastNode.createSeparatorParam("float________", "float linear interpolation")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.float________ = param
    del param

    # Refresh the GUI with the newly created parameters
    lastNode.setPagesOrder(['Controls', 'Node', 'Settings'])
    lastNode.refreshUserParamsGUI()
    del lastNode

    # Start of node "Input1"
    lastNode = app.createNode("fr.inria.built-in.Input", 1, groupgroup)
    lastNode.setScriptName("Input1")
    lastNode.setLabel("Input1")
    lastNode.setPosition(642, 175)
    lastNode.setSize(104, 30)
    lastNode.setColor(0.3, 0.5, 0.2)
    groupgroupInput1 = lastNode

    del lastNode
    # End of node "Input1"

    # Start of node "Output1"
    lastNode = app.createNode("fr.inria.built-in.Output", 1, groupgroup)
    lastNode.setLabel("Output1")
    lastNode.setPosition(642, 247)
    lastNode.setSize(104, 30)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupgroupOutput1 = lastNode

    del lastNode
    # End of node "Output1"

    # Now that all nodes are created we can connect them together, restore expressions
    groupgroupOutput1.connectInput(0, groupgroupInput1)

    param = groupgroup.getParam("i_input")
    param.setExpression("thisNode.i_input_range.get()[1]-thisGroup.burn_edges2.get()", False, 0)
    del param
    param = groupgroup.getParam("i_lerp_result")
    param.setExpression("import numpy as np\r\n\r\ni = thisNode.i_input.get()\r\n\r\ni0 = thisNode.i_input_range.get()[0]\r\ni1 = thisNode.i_input_range.get()[1]\r\n\r\nr0 = thisNode.i_lerp_range.get()[0]\r\nr1 = thisNode.i_lerp_range.get()[1]\r\n\r\nir = [i0, i1]\r\nlr = [r0, r1]\r\n\r\ny_new = np.interp(i, ir, lr)\r\nret = y_new\r\n\r\n\r\n", True, 0)
    del param
    param = groupgroup.getParam("f_input")
    param.setExpression("thisGroup.burn_amt2.get()", False, 0)
    del param
    param = groupgroup.getParam("f_lerp_result")
    param.setExpression("import numpy as np\r\n\r\ni = thisNode.f_input.get()\r\n\r\ni0 = thisNode.f_input_range.get()[0]\r\ni1 = thisNode.f_input_range.get()[1]\r\n\r\nr0 = thisNode.f_lerp_range.get()[0]\r\nr1 = thisNode.f_lerp_range.get()[1]\r\n\r\nir = [i0, i1]\r\nlr = [r0, r1]\r\n\r\ny_new = np.interp(i, ir, lr)\r\nret = y_new\r\n\r\n\r\n", True, 0)
    del param

    # Start of node "Labsorption"
    lastNode = app.createNode("fr.inria.built-in.Group", 1, group)
    lastNode.setScriptName("Labsorption")
    lastNode.setLabel("Labsorption")
    lastNode.setPosition(2273, -622)
    lastNode.setSize(104, 30)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupLabsorption = lastNode

    param = lastNode.getParam("hideInputs")
    if param is not None:
        param.setValue(True)
        del param


    # Create the user parameters
    lastNode.Controls = lastNode.createPageParam("Controls", "Controls")
    param = lastNode.createGroupParam("int1", "integer linear interpolation")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    lastNode.int1 = param
    del param

    param = lastNode.createStringParam("i_input_desc", "i_input_desc")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeDefault)

    # Add the param to the group, no need to add it to the page
    lastNode.int1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.i_input_desc = param
    del param

    param = lastNode.createStringParam("i_result_desc", "i_result_desc")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeDefault)

    # Add the param to the group, no need to add it to the page
    lastNode.int1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.i_result_desc = param
    del param

    param = lastNode.createIntParam("i_input", "i_input")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)

    # Add the param to the group, no need to add it to the page
    lastNode.int1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.i_input = param
    del param

    param = lastNode.createInt2DParam("i_input_range", "i_input_range")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)
    param.setDefaultValue(0, 1)
    param.restoreDefaultValue(1)

    # Add the param to the group, no need to add it to the page
    lastNode.int1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(100, 1)
    lastNode.i_input_range = param
    del param

    param = lastNode.createInt2DParam("i_lerp_range", "i_lerp_range")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)
    param.setDefaultValue(0, 1)
    param.restoreDefaultValue(1)

    # Add the param to the group, no need to add it to the page
    lastNode.int1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(7, 0)
    lastNode.i_lerp_range = param
    del param

    param = lastNode.createIntParam("i_lerp_result", "i_lerp_result")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)

    # Add the param to the group, no need to add it to the page
    lastNode.int1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(7, 0)
    lastNode.i_lerp_result = param
    del param

    param = lastNode.createGroupParam("float1", "float linear interpolation")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setOpened(True)
    lastNode.float1 = param
    del param

    param = lastNode.createStringParam("f_input_desc", "f_input_desc")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeDefault)

    # Add the param to the group, no need to add it to the page
    lastNode.float1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue("absorption")
    lastNode.f_input_desc = param
    del param

    param = lastNode.createStringParam("f_result_desc", "f_result_desc")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeDefault)

    # Add the param to the group, no need to add it to the page
    lastNode.float1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue("offset")
    lastNode.f_result_desc = param
    del param

    param = lastNode.createDoubleParam("f_input", "f_input")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)

    # Add the param to the group, no need to add it to the page
    lastNode.float1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(50, 0)
    lastNode.f_input = param
    del param

    param = lastNode.createDouble2DParam("f_input_range", "f_input_range")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setMinimum(-2147483648, 1)
    param.setMaximum(2147483647, 1)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)

    # Add the param to the group, no need to add it to the page
    lastNode.float1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(100, 1)
    lastNode.f_input_range = param
    del param

    param = lastNode.createDouble2DParam("f_lerp_range", "f_lerp_range")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setMinimum(-2147483648, 1)
    param.setMaximum(2147483647, 1)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)

    # Add the param to the group, no need to add it to the page
    lastNode.float1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(-1, 0)
    param.setValue(1, 1)
    lastNode.f_lerp_range = param
    del param

    param = lastNode.createDoubleParam("f_lerp_result", "f_lerp_result")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)

    # Add the param to the group, no need to add it to the page
    lastNode.float1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(0, 0)
    lastNode.f_lerp_result = param
    del param

    param = lastNode.createSeparatorParam("integer_________", "integer linear interpolation")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.integer_________ = param
    del param

    param = lastNode.createSeparatorParam("float________", "float linear interpolation")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.float________ = param
    del param

    # Refresh the GUI with the newly created parameters
    lastNode.setPagesOrder(['Controls', 'Node', 'Settings'])
    lastNode.refreshUserParamsGUI()
    del lastNode
    # End of node "Labsorption"

    groupgroup = groupLabsorption
    # Create all nodes in the group

    # Create the parameters of the group node the same way we did for all internal nodes
    lastNode = groupgroup
    lastNode.setColor(0.7, 0.7, 0.7)
    param = lastNode.getParam("hideInputs")
    if param is not None:
        param.setValue(True)
        del param


    # Create the user parameters
    lastNode.Controls = lastNode.createPageParam("Controls", "Controls")
    param = lastNode.createGroupParam("int1", "integer linear interpolation")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    lastNode.int1 = param
    del param

    param = lastNode.createStringParam("i_input_desc", "i_input_desc")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeDefault)

    # Add the param to the group, no need to add it to the page
    lastNode.int1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.i_input_desc = param
    del param

    param = lastNode.createStringParam("i_result_desc", "i_result_desc")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeDefault)

    # Add the param to the group, no need to add it to the page
    lastNode.int1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.i_result_desc = param
    del param

    param = lastNode.createIntParam("i_input", "i_input")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)

    # Add the param to the group, no need to add it to the page
    lastNode.int1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.i_input = param
    del param

    param = lastNode.createInt2DParam("i_input_range", "i_input_range")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)
    param.setDefaultValue(0, 1)
    param.restoreDefaultValue(1)

    # Add the param to the group, no need to add it to the page
    lastNode.int1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(100, 1)
    lastNode.i_input_range = param
    del param

    param = lastNode.createInt2DParam("i_lerp_range", "i_lerp_range")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)
    param.setDefaultValue(0, 1)
    param.restoreDefaultValue(1)

    # Add the param to the group, no need to add it to the page
    lastNode.int1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(7, 0)
    lastNode.i_lerp_range = param
    del param

    param = lastNode.createIntParam("i_lerp_result", "i_lerp_result")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)

    # Add the param to the group, no need to add it to the page
    lastNode.int1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(7, 0)
    lastNode.i_lerp_result = param
    del param

    param = lastNode.createGroupParam("float1", "float linear interpolation")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setOpened(True)
    lastNode.float1 = param
    del param

    param = lastNode.createStringParam("f_input_desc", "f_input_desc")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeDefault)

    # Add the param to the group, no need to add it to the page
    lastNode.float1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue("absorption")
    lastNode.f_input_desc = param
    del param

    param = lastNode.createStringParam("f_result_desc", "f_result_desc")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeDefault)

    # Add the param to the group, no need to add it to the page
    lastNode.float1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue("offset")
    lastNode.f_result_desc = param
    del param

    param = lastNode.createDoubleParam("f_input", "f_input")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)

    # Add the param to the group, no need to add it to the page
    lastNode.float1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(50, 0)
    lastNode.f_input = param
    del param

    param = lastNode.createDouble2DParam("f_input_range", "f_input_range")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setMinimum(-2147483648, 1)
    param.setMaximum(2147483647, 1)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)

    # Add the param to the group, no need to add it to the page
    lastNode.float1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(100, 1)
    lastNode.f_input_range = param
    del param

    param = lastNode.createDouble2DParam("f_lerp_range", "f_lerp_range")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setMinimum(-2147483648, 1)
    param.setMaximum(2147483647, 1)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)

    # Add the param to the group, no need to add it to the page
    lastNode.float1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(-1, 0)
    param.setValue(1, 1)
    lastNode.f_lerp_range = param
    del param

    param = lastNode.createDoubleParam("f_lerp_result", "f_lerp_result")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)

    # Add the param to the group, no need to add it to the page
    lastNode.float1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(0, 0)
    lastNode.f_lerp_result = param
    del param

    param = lastNode.createSeparatorParam("integer_________", "integer linear interpolation")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.integer_________ = param
    del param

    param = lastNode.createSeparatorParam("float________", "float linear interpolation")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.float________ = param
    del param

    # Refresh the GUI with the newly created parameters
    lastNode.setPagesOrder(['Controls', 'Node', 'Settings'])
    lastNode.refreshUserParamsGUI()
    del lastNode

    # Start of node "Input1"
    lastNode = app.createNode("fr.inria.built-in.Input", 1, groupgroup)
    lastNode.setScriptName("Input1")
    lastNode.setLabel("Input1")
    lastNode.setPosition(642, 175)
    lastNode.setSize(104, 30)
    lastNode.setColor(0.3, 0.5, 0.2)
    groupgroupInput1 = lastNode

    del lastNode
    # End of node "Input1"

    # Start of node "Output1"
    lastNode = app.createNode("fr.inria.built-in.Output", 1, groupgroup)
    lastNode.setLabel("Output1")
    lastNode.setPosition(642, 247)
    lastNode.setSize(104, 30)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupgroupOutput1 = lastNode

    del lastNode
    # End of node "Output1"

    # Now that all nodes are created we can connect them together, restore expressions
    groupgroupOutput1.connectInput(0, groupgroupInput1)

    param = groupgroup.getParam("i_lerp_result")
    param.setExpression("import numpy as np\r\n\r\ni = thisNode.i_input.get()\r\n\r\ni0 = thisNode.i_input_range.get()[0]\r\ni1 = thisNode.i_input_range.get()[1]\r\n\r\nr0 = thisNode.i_lerp_range.get()[0]\r\nr1 = thisNode.i_lerp_range.get()[1]\r\n\r\nir = [i0, i1]\r\nlr = [r0, r1]\r\n\r\ny_new = np.interp(i, ir, lr)\r\nret = y_new\r\n\r\n\r\n", True, 0)
    del param
    param = groupgroup.getParam("f_input")
    param.setExpression("thisGroup.absorption.get()", False, 0)
    del param
    param = groupgroup.getParam("f_lerp_result")
    param.setExpression("import numpy as np\r\n\r\ni = thisNode.f_input.get()\r\n\r\ni0 = thisNode.f_input_range.get()[0]\r\ni1 = thisNode.f_input_range.get()[1]\r\n\r\nr0 = thisNode.f_lerp_range.get()[0]\r\nr1 = thisNode.f_lerp_range.get()[1]\r\n\r\nir = [i0, i1]\r\nlr = [r0, r1]\r\n\r\ny_new = np.interp(i, ir, lr)\r\nret = y_new\r\n\r\n\r\n", True, 0)
    del param

    # Start of node "Melt"
    lastNode = app.createNode("eu.gmic.Crease", 1, group)
    lastNode.setScriptName("Melt")
    lastNode.setLabel("Melt")
    lastNode.setPosition(1800, 1619)
    lastNode.setSize(80, 26)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupMelt = lastNode

    param = lastNode.getParam("Amplitude")
    if param is not None:
        param.setValue(0.8999999999999999, 0)
        del param

    param = lastNode.getParam("Frequency_")
    if param is not None:
        param.setValue(1.928, 0)
        del param

    del lastNode
    # End of node "Melt"

    # Start of node "SwitchMelt"
    lastNode = app.createNode("net.sf.openfx.switchPlugin", 1, group)
    lastNode.setScriptName("SwitchMelt")
    lastNode.setLabel("SwitchMelt")
    lastNode.setPosition(1788, 1880)
    lastNode.setSize(104, 30)
    lastNode.setColor(0.3, 0.37, 0.776)
    groupSwitchMelt = lastNode

    param = lastNode.getParam("which")
    if param is not None:
        param.setValue(1, 0)
        del param

    del lastNode
    # End of node "SwitchMelt"

    # Start of node "Lmelt_freq"
    lastNode = app.createNode("fr.inria.built-in.Group", 1, group)
    lastNode.setScriptName("Lmelt_freq")
    lastNode.setLabel("Lmelt_freq")
    lastNode.setPosition(2012, 1587)
    lastNode.setSize(104, 30)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupLmelt_freq = lastNode

    param = lastNode.getParam("hideInputs")
    if param is not None:
        param.setValue(True)
        del param


    # Create the user parameters
    lastNode.Controls = lastNode.createPageParam("Controls", "Controls")
    param = lastNode.createGroupParam("int1", "integer linear interpolation")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    lastNode.int1 = param
    del param

    param = lastNode.createStringParam("i_input_desc", "i_input_desc")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeDefault)

    # Add the param to the group, no need to add it to the page
    lastNode.int1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.i_input_desc = param
    del param

    param = lastNode.createStringParam("i_result_desc", "i_result_desc")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeDefault)

    # Add the param to the group, no need to add it to the page
    lastNode.int1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.i_result_desc = param
    del param

    param = lastNode.createIntParam("i_input", "i_input")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)

    # Add the param to the group, no need to add it to the page
    lastNode.int1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.i_input = param
    del param

    param = lastNode.createInt2DParam("i_input_range", "i_input_range")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)
    param.setDefaultValue(0, 1)
    param.restoreDefaultValue(1)

    # Add the param to the group, no need to add it to the page
    lastNode.int1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(100, 1)
    lastNode.i_input_range = param
    del param

    param = lastNode.createInt2DParam("i_lerp_range", "i_lerp_range")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)
    param.setDefaultValue(0, 1)
    param.restoreDefaultValue(1)

    # Add the param to the group, no need to add it to the page
    lastNode.int1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(7, 0)
    lastNode.i_lerp_range = param
    del param

    param = lastNode.createIntParam("i_lerp_result", "i_lerp_result")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)

    # Add the param to the group, no need to add it to the page
    lastNode.int1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(7, 0)
    lastNode.i_lerp_result = param
    del param

    param = lastNode.createGroupParam("float1", "float linear interpolation")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setOpened(True)
    lastNode.float1 = param
    del param

    param = lastNode.createStringParam("f_input_desc", "f_input_desc")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeDefault)

    # Add the param to the group, no need to add it to the page
    lastNode.float1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.f_input_desc = param
    del param

    param = lastNode.createStringParam("f_result_desc", "f_result_desc")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeDefault)

    # Add the param to the group, no need to add it to the page
    lastNode.float1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.f_result_desc = param
    del param

    param = lastNode.createDoubleParam("f_input", "f_input")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)

    # Add the param to the group, no need to add it to the page
    lastNode.float1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(3.2, 0)
    lastNode.f_input = param
    del param

    param = lastNode.createDouble2DParam("f_input_range", "f_input_range")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setMinimum(-2147483648, 1)
    param.setMaximum(2147483647, 1)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)

    # Add the param to the group, no need to add it to the page
    lastNode.float1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(100, 1)
    lastNode.f_input_range = param
    del param

    param = lastNode.createDouble2DParam("f_lerp_range", "f_lerp_range")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setMinimum(-2147483648, 1)
    param.setMaximum(2147483647, 1)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)

    # Add the param to the group, no need to add it to the page
    lastNode.float1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(1, 0)
    param.setValue(30, 1)
    lastNode.f_lerp_range = param
    del param

    param = lastNode.createDoubleParam("f_lerp_result", "f_lerp_result")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)

    # Add the param to the group, no need to add it to the page
    lastNode.float1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(1.928, 0)
    lastNode.f_lerp_result = param
    del param

    param = lastNode.createSeparatorParam("integer_________", "integer linear interpolation")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.integer_________ = param
    del param

    param = lastNode.createSeparatorParam("float________", "float linear interpolation")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.float________ = param
    del param

    # Refresh the GUI with the newly created parameters
    lastNode.setPagesOrder(['Controls', 'Node', 'Settings'])
    lastNode.refreshUserParamsGUI()
    del lastNode
    # End of node "Lmelt_freq"

    groupgroup = groupLmelt_freq
    # Create all nodes in the group

    # Create the parameters of the group node the same way we did for all internal nodes
    lastNode = groupgroup
    lastNode.setColor(0.7, 0.7, 0.7)
    param = lastNode.getParam("hideInputs")
    if param is not None:
        param.setValue(True)
        del param


    # Create the user parameters
    lastNode.Controls = lastNode.createPageParam("Controls", "Controls")
    param = lastNode.createGroupParam("int1", "integer linear interpolation")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    lastNode.int1 = param
    del param

    param = lastNode.createStringParam("i_input_desc", "i_input_desc")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeDefault)

    # Add the param to the group, no need to add it to the page
    lastNode.int1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.i_input_desc = param
    del param

    param = lastNode.createStringParam("i_result_desc", "i_result_desc")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeDefault)

    # Add the param to the group, no need to add it to the page
    lastNode.int1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.i_result_desc = param
    del param

    param = lastNode.createIntParam("i_input", "i_input")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)

    # Add the param to the group, no need to add it to the page
    lastNode.int1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.i_input = param
    del param

    param = lastNode.createInt2DParam("i_input_range", "i_input_range")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)
    param.setDefaultValue(0, 1)
    param.restoreDefaultValue(1)

    # Add the param to the group, no need to add it to the page
    lastNode.int1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(100, 1)
    lastNode.i_input_range = param
    del param

    param = lastNode.createInt2DParam("i_lerp_range", "i_lerp_range")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)
    param.setDefaultValue(0, 1)
    param.restoreDefaultValue(1)

    # Add the param to the group, no need to add it to the page
    lastNode.int1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(7, 0)
    lastNode.i_lerp_range = param
    del param

    param = lastNode.createIntParam("i_lerp_result", "i_lerp_result")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)

    # Add the param to the group, no need to add it to the page
    lastNode.int1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(7, 0)
    lastNode.i_lerp_result = param
    del param

    param = lastNode.createGroupParam("float1", "float linear interpolation")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setOpened(True)
    lastNode.float1 = param
    del param

    param = lastNode.createStringParam("f_input_desc", "f_input_desc")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeDefault)

    # Add the param to the group, no need to add it to the page
    lastNode.float1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.f_input_desc = param
    del param

    param = lastNode.createStringParam("f_result_desc", "f_result_desc")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeDefault)

    # Add the param to the group, no need to add it to the page
    lastNode.float1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.f_result_desc = param
    del param

    param = lastNode.createDoubleParam("f_input", "f_input")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)

    # Add the param to the group, no need to add it to the page
    lastNode.float1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(3.2, 0)
    lastNode.f_input = param
    del param

    param = lastNode.createDouble2DParam("f_input_range", "f_input_range")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setMinimum(-2147483648, 1)
    param.setMaximum(2147483647, 1)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)

    # Add the param to the group, no need to add it to the page
    lastNode.float1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(100, 1)
    lastNode.f_input_range = param
    del param

    param = lastNode.createDouble2DParam("f_lerp_range", "f_lerp_range")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setMinimum(-2147483648, 1)
    param.setMaximum(2147483647, 1)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)

    # Add the param to the group, no need to add it to the page
    lastNode.float1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(1, 0)
    param.setValue(30, 1)
    lastNode.f_lerp_range = param
    del param

    param = lastNode.createDoubleParam("f_lerp_result", "f_lerp_result")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)

    # Add the param to the group, no need to add it to the page
    lastNode.float1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(1.928, 0)
    lastNode.f_lerp_result = param
    del param

    param = lastNode.createSeparatorParam("integer_________", "integer linear interpolation")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.integer_________ = param
    del param

    param = lastNode.createSeparatorParam("float________", "float linear interpolation")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.float________ = param
    del param

    # Refresh the GUI with the newly created parameters
    lastNode.setPagesOrder(['Controls', 'Node', 'Settings'])
    lastNode.refreshUserParamsGUI()
    del lastNode

    # Start of node "Input1"
    lastNode = app.createNode("fr.inria.built-in.Input", 1, groupgroup)
    lastNode.setScriptName("Input1")
    lastNode.setLabel("Input1")
    lastNode.setPosition(642, 175)
    lastNode.setSize(104, 30)
    lastNode.setColor(0.3, 0.5, 0.2)
    groupgroupInput1 = lastNode

    del lastNode
    # End of node "Input1"

    # Start of node "Output1"
    lastNode = app.createNode("fr.inria.built-in.Output", 1, groupgroup)
    lastNode.setLabel("Output1")
    lastNode.setPosition(642, 247)
    lastNode.setSize(104, 30)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupgroupOutput1 = lastNode

    del lastNode
    # End of node "Output1"

    # Now that all nodes are created we can connect them together, restore expressions
    groupgroupOutput1.connectInput(0, groupgroupInput1)

    param = groupgroup.getParam("i_lerp_result")
    param.setExpression("import numpy as np\r\n\r\ni = thisNode.i_input.get()\r\n\r\ni0 = thisNode.i_input_range.get()[0]\r\ni1 = thisNode.i_input_range.get()[1]\r\n\r\nr0 = thisNode.i_lerp_range.get()[0]\r\nr1 = thisNode.i_lerp_range.get()[1]\r\n\r\nir = [i0, i1]\r\nlr = [r0, r1]\r\n\r\ny_new = np.interp(i, ir, lr)\r\nret = y_new\r\n\r\n\r\n", True, 0)
    del param
    param = groupgroup.getParam("f_input")
    param.setExpression("thisGroup.liquify.get()", False, 0)
    del param
    param = groupgroup.getParam("f_lerp_result")
    param.setExpression("import numpy as np\r\n\r\ni = thisNode.f_input.get()\r\n\r\ni0 = thisNode.f_input_range.get()[0]\r\ni1 = thisNode.f_input_range.get()[1]\r\n\r\nr0 = thisNode.f_lerp_range.get()[0]\r\nr1 = thisNode.f_lerp_range.get()[1]\r\n\r\nir = [i0, i1]\r\nlr = [r0, r1]\r\n\r\ny_new = np.interp(i, ir, lr)\r\nret = y_new\r\n\r\n\r\n", True, 0)
    del param

    # Start of node "Lmelt_amp"
    lastNode = app.createNode("fr.inria.built-in.Group", 1, group)
    lastNode.setScriptName("Lmelt_amp")
    lastNode.setLabel("Lmelt_amp")
    lastNode.setPosition(2012, 1648)
    lastNode.setSize(104, 30)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupLmelt_amp = lastNode

    param = lastNode.getParam("hideInputs")
    if param is not None:
        param.setValue(True)
        del param


    # Create the user parameters
    lastNode.Controls = lastNode.createPageParam("Controls", "Controls")
    param = lastNode.createGroupParam("int1", "integer linear interpolation")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    lastNode.int1 = param
    del param

    param = lastNode.createStringParam("i_input_desc", "i_input_desc")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeDefault)

    # Add the param to the group, no need to add it to the page
    lastNode.int1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.i_input_desc = param
    del param

    param = lastNode.createStringParam("i_result_desc", "i_result_desc")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeDefault)

    # Add the param to the group, no need to add it to the page
    lastNode.int1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.i_result_desc = param
    del param

    param = lastNode.createIntParam("i_input", "i_input")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)

    # Add the param to the group, no need to add it to the page
    lastNode.int1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.i_input = param
    del param

    param = lastNode.createInt2DParam("i_input_range", "i_input_range")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)
    param.setDefaultValue(0, 1)
    param.restoreDefaultValue(1)

    # Add the param to the group, no need to add it to the page
    lastNode.int1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(100, 1)
    lastNode.i_input_range = param
    del param

    param = lastNode.createInt2DParam("i_lerp_range", "i_lerp_range")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)
    param.setDefaultValue(0, 1)
    param.restoreDefaultValue(1)

    # Add the param to the group, no need to add it to the page
    lastNode.int1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(7, 0)
    lastNode.i_lerp_range = param
    del param

    param = lastNode.createIntParam("i_lerp_result", "i_lerp_result")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)

    # Add the param to the group, no need to add it to the page
    lastNode.int1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(7, 0)
    lastNode.i_lerp_result = param
    del param

    param = lastNode.createGroupParam("float1", "float linear interpolation")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setOpened(True)
    lastNode.float1 = param
    del param

    param = lastNode.createStringParam("f_input_desc", "f_input_desc")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeDefault)

    # Add the param to the group, no need to add it to the page
    lastNode.float1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.f_input_desc = param
    del param

    param = lastNode.createStringParam("f_result_desc", "f_result_desc")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeDefault)

    # Add the param to the group, no need to add it to the page
    lastNode.float1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.f_result_desc = param
    del param

    param = lastNode.createDoubleParam("f_input", "f_input")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)

    # Add the param to the group, no need to add it to the page
    lastNode.float1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(3, 0)
    lastNode.f_input = param
    del param

    param = lastNode.createDouble2DParam("f_input_range", "f_input_range")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setMinimum(-2147483648, 1)
    param.setMaximum(2147483647, 1)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)

    # Add the param to the group, no need to add it to the page
    lastNode.float1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(100, 1)
    lastNode.f_input_range = param
    del param

    param = lastNode.createDouble2DParam("f_lerp_range", "f_lerp_range")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setMinimum(-2147483648, 1)
    param.setMaximum(2147483647, 1)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)

    # Add the param to the group, no need to add it to the page
    lastNode.float1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(30, 1)
    lastNode.f_lerp_range = param
    del param

    param = lastNode.createDoubleParam("f_lerp_result", "f_lerp_result")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)

    # Add the param to the group, no need to add it to the page
    lastNode.float1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(0.8999999999999999, 0)
    lastNode.f_lerp_result = param
    del param

    param = lastNode.createSeparatorParam("integer_________", "integer linear interpolation")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.integer_________ = param
    del param

    param = lastNode.createSeparatorParam("float________", "float linear interpolation")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.float________ = param
    del param

    # Refresh the GUI with the newly created parameters
    lastNode.setPagesOrder(['Controls', 'Node', 'Settings'])
    lastNode.refreshUserParamsGUI()
    del lastNode
    # End of node "Lmelt_amp"

    groupgroup = groupLmelt_amp
    # Create all nodes in the group

    # Create the parameters of the group node the same way we did for all internal nodes
    lastNode = groupgroup
    lastNode.setColor(0.7, 0.7, 0.7)
    param = lastNode.getParam("hideInputs")
    if param is not None:
        param.setValue(True)
        del param


    # Create the user parameters
    lastNode.Controls = lastNode.createPageParam("Controls", "Controls")
    param = lastNode.createGroupParam("int1", "integer linear interpolation")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    lastNode.int1 = param
    del param

    param = lastNode.createStringParam("i_input_desc", "i_input_desc")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeDefault)

    # Add the param to the group, no need to add it to the page
    lastNode.int1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.i_input_desc = param
    del param

    param = lastNode.createStringParam("i_result_desc", "i_result_desc")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeDefault)

    # Add the param to the group, no need to add it to the page
    lastNode.int1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.i_result_desc = param
    del param

    param = lastNode.createIntParam("i_input", "i_input")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)

    # Add the param to the group, no need to add it to the page
    lastNode.int1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.i_input = param
    del param

    param = lastNode.createInt2DParam("i_input_range", "i_input_range")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)
    param.setDefaultValue(0, 1)
    param.restoreDefaultValue(1)

    # Add the param to the group, no need to add it to the page
    lastNode.int1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(100, 1)
    lastNode.i_input_range = param
    del param

    param = lastNode.createInt2DParam("i_lerp_range", "i_lerp_range")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)
    param.setDefaultValue(0, 1)
    param.restoreDefaultValue(1)

    # Add the param to the group, no need to add it to the page
    lastNode.int1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(7, 0)
    lastNode.i_lerp_range = param
    del param

    param = lastNode.createIntParam("i_lerp_result", "i_lerp_result")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)

    # Add the param to the group, no need to add it to the page
    lastNode.int1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(7, 0)
    lastNode.i_lerp_result = param
    del param

    param = lastNode.createGroupParam("float1", "float linear interpolation")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setOpened(True)
    lastNode.float1 = param
    del param

    param = lastNode.createStringParam("f_input_desc", "f_input_desc")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeDefault)

    # Add the param to the group, no need to add it to the page
    lastNode.float1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.f_input_desc = param
    del param

    param = lastNode.createStringParam("f_result_desc", "f_result_desc")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeDefault)

    # Add the param to the group, no need to add it to the page
    lastNode.float1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.f_result_desc = param
    del param

    param = lastNode.createDoubleParam("f_input", "f_input")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)

    # Add the param to the group, no need to add it to the page
    lastNode.float1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(3, 0)
    lastNode.f_input = param
    del param

    param = lastNode.createDouble2DParam("f_input_range", "f_input_range")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setMinimum(-2147483648, 1)
    param.setMaximum(2147483647, 1)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)

    # Add the param to the group, no need to add it to the page
    lastNode.float1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(100, 1)
    lastNode.f_input_range = param
    del param

    param = lastNode.createDouble2DParam("f_lerp_range", "f_lerp_range")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setMinimum(-2147483648, 1)
    param.setMaximum(2147483647, 1)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)

    # Add the param to the group, no need to add it to the page
    lastNode.float1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(30, 1)
    lastNode.f_lerp_range = param
    del param

    param = lastNode.createDoubleParam("f_lerp_result", "f_lerp_result")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)

    # Add the param to the group, no need to add it to the page
    lastNode.float1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(0.8999999999999999, 0)
    lastNode.f_lerp_result = param
    del param

    param = lastNode.createSeparatorParam("integer_________", "integer linear interpolation")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.integer_________ = param
    del param

    param = lastNode.createSeparatorParam("float________", "float linear interpolation")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.float________ = param
    del param

    # Refresh the GUI with the newly created parameters
    lastNode.setPagesOrder(['Controls', 'Node', 'Settings'])
    lastNode.refreshUserParamsGUI()
    del lastNode

    # Start of node "Input1"
    lastNode = app.createNode("fr.inria.built-in.Input", 1, groupgroup)
    lastNode.setScriptName("Input1")
    lastNode.setLabel("Input1")
    lastNode.setPosition(642, 175)
    lastNode.setSize(104, 30)
    lastNode.setColor(0.3, 0.5, 0.2)
    groupgroupInput1 = lastNode

    del lastNode
    # End of node "Input1"

    # Start of node "Output1"
    lastNode = app.createNode("fr.inria.built-in.Output", 1, groupgroup)
    lastNode.setLabel("Output1")
    lastNode.setPosition(642, 247)
    lastNode.setSize(104, 30)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupgroupOutput1 = lastNode

    del lastNode
    # End of node "Output1"

    # Now that all nodes are created we can connect them together, restore expressions
    groupgroupOutput1.connectInput(0, groupgroupInput1)

    param = groupgroup.getParam("i_lerp_result")
    param.setExpression("import numpy as np\r\n\r\ni = thisNode.i_input.get()\r\n\r\ni0 = thisNode.i_input_range.get()[0]\r\ni1 = thisNode.i_input_range.get()[1]\r\n\r\nr0 = thisNode.i_lerp_range.get()[0]\r\nr1 = thisNode.i_lerp_range.get()[1]\r\n\r\nir = [i0, i1]\r\nlr = [r0, r1]\r\n\r\ny_new = np.interp(i, ir, lr)\r\nret = y_new\r\n\r\n\r\n", True, 0)
    del param
    param = groupgroup.getParam("f_input")
    param.setExpression("thisGroup.amplify.get()", False, 0)
    del param
    param = groupgroup.getParam("f_lerp_result")
    param.setExpression("import numpy as np\r\n\r\ni = thisNode.f_input.get()\r\n\r\ni0 = thisNode.f_input_range.get()[0]\r\ni1 = thisNode.f_input_range.get()[1]\r\n\r\nr0 = thisNode.f_lerp_range.get()[0]\r\nr1 = thisNode.f_lerp_range.get()[1]\r\n\r\nir = [i0, i1]\r\nlr = [r0, r1]\r\n\r\ny_new = np.interp(i, ir, lr)\r\nret = y_new\r\n\r\n\r\n", True, 0)
    del param

    # Start of node "Switch3"
    lastNode = app.createNode("net.sf.openfx.switchPlugin", 1, group)
    lastNode.setScriptName("Switch3")
    lastNode.setLabel("Switch3")
    lastNode.setPosition(2425, 6342)
    lastNode.setSize(104, 30)
    lastNode.setColor(0.3, 0.37, 0.776)
    groupSwitch3 = lastNode

    param = lastNode.getParam("which")
    if param is not None:
        param.setValue(0, 0)
        del param

    del lastNode
    # End of node "Switch3"

    # Start of node "Backdrop5"
    lastNode = app.createNode("fr.inria.built-in.BackDrop", 1, group)
    lastNode.setScriptName("Backdrop5")
    lastNode.setLabel("Backdrop5")
    lastNode.setPosition(1503, 1478)
    lastNode.setSize(669, 484)
    lastNode.setColor(0.45, 0.45, 0.45)
    groupBackdrop5 = lastNode

    param = lastNode.getParam("Label")
    if param is not None:
        param.setValue("<font size=\"26\" color=\"#000000\" face=\"Droid Sans\">Melt</font>")
        del param

    del lastNode
    # End of node "Backdrop5"

    # Start of node "Dot25"
    lastNode = app.createNode("fr.inria.built-in.Dot", 1, group)
    lastNode.setScriptName("Dot25")
    lastNode.setLabel("Dot25")
    lastNode.setPosition(1833, 1529)
    lastNode.setSize(15, 15)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupDot25 = lastNode

    del lastNode
    # End of node "Dot25"

    # Start of node "Blur3"
    lastNode = app.createNode("net.sf.cimg.CImgBlur", 4, group)
    lastNode.setScriptName("Blur3")
    lastNode.setLabel("Blur3")
    lastNode.setPosition(1506, 5153)
    lastNode.setSize(104, 30)
    lastNode.setColor(0.8, 0.5, 0.3)
    groupBlur3 = lastNode

    param = lastNode.getParam("NatronOfxParamProcessR")
    if param is not None:
        param.setValue(False)
        del param

    param = lastNode.getParam("NatronOfxParamProcessG")
    if param is not None:
        param.setValue(False)
        del param

    param = lastNode.getParam("NatronOfxParamProcessB")
    if param is not None:
        param.setValue(False)
        del param

    param = lastNode.getParam("size")
    if param is not None:
        param.setValue(72.30000000000001, 0)
        param.setValue(72.30000000000001, 1)
        del param

    param = lastNode.getParam("filter")
    if param is not None:
        param.set("quasigaussian")
        del param

    param = lastNode.getParam("maskInvert")
    if param is not None:
        param.setValue(True)
        del param

    param = lastNode.getParam("enableMask_Mask")
    if param is not None:
        param.setValue(True)
        del param

    del lastNode
    # End of node "Blur3"

    # Start of node "Lerp_burn_2"
    lastNode = app.createNode("fr.inria.built-in.Group", 1, group)
    lastNode.setScriptName("Lerp_burn_2")
    lastNode.setLabel("Lerp_burn_2")
    lastNode.setPosition(2130, 5219)
    lastNode.setSize(104, 30)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupLerp_burn_2 = lastNode


    # Create the user parameters
    lastNode.Controls = lastNode.createPageParam("Controls", "Controls")
    param = lastNode.createGroupParam("int1", "integer linear interpolation")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    lastNode.int1 = param
    del param

    param = lastNode.createStringParam("i_input_desc", "i_input_desc")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeDefault)

    # Add the param to the group, no need to add it to the page
    lastNode.int1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.i_input_desc = param
    del param

    param = lastNode.createStringParam("i_result_desc", "i_result_desc")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeDefault)

    # Add the param to the group, no need to add it to the page
    lastNode.int1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.i_result_desc = param
    del param

    param = lastNode.createIntParam("i_input", "i_input")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)

    # Add the param to the group, no need to add it to the page
    lastNode.int1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.i_input = param
    del param

    param = lastNode.createInt2DParam("i_input_range", "i_input_range")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)
    param.setDefaultValue(0, 1)
    param.restoreDefaultValue(1)

    # Add the param to the group, no need to add it to the page
    lastNode.int1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(100, 1)
    lastNode.i_input_range = param
    del param

    param = lastNode.createInt2DParam("i_lerp_range", "i_lerp_range")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)
    param.setDefaultValue(0, 1)
    param.restoreDefaultValue(1)

    # Add the param to the group, no need to add it to the page
    lastNode.int1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(7, 0)
    lastNode.i_lerp_range = param
    del param

    param = lastNode.createIntParam("i_lerp_result", "i_lerp_result")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)

    # Add the param to the group, no need to add it to the page
    lastNode.int1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(7, 0)
    lastNode.i_lerp_result = param
    del param

    param = lastNode.createGroupParam("float1", "float linear interpolation")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setOpened(True)
    lastNode.float1 = param
    del param

    param = lastNode.createStringParam("f_input_desc", "f_input_desc")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeDefault)

    # Add the param to the group, no need to add it to the page
    lastNode.float1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue("thisGroup.burn_amt.get()")
    lastNode.f_input_desc = param
    del param

    param = lastNode.createStringParam("f_result_desc", "f_result_desc")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeDefault)

    # Add the param to the group, no need to add it to the page
    lastNode.float1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue("Lerp_burn.f_lerp_result.get()")
    lastNode.f_result_desc = param
    del param

    param = lastNode.createDoubleParam("f_input", "f_input")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)

    # Add the param to the group, no need to add it to the page
    lastNode.float1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(15.1, 0)
    lastNode.f_input = param
    del param

    param = lastNode.createDouble2DParam("f_input_range", "f_input_range")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setMinimum(-2147483648, 1)
    param.setMaximum(2147483647, 1)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)

    # Add the param to the group, no need to add it to the page
    lastNode.float1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(100, 1)
    lastNode.f_input_range = param
    del param

    param = lastNode.createDouble2DParam("f_lerp_range", "f_lerp_range")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setMinimum(-2147483648, 1)
    param.setMaximum(2147483647, 1)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)

    # Add the param to the group, no need to add it to the page
    lastNode.float1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(0.2, 0)
    lastNode.f_lerp_range = param
    del param

    param = lastNode.createDoubleParam("f_lerp_result", "f_lerp_result")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)

    # Add the param to the group, no need to add it to the page
    lastNode.float1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(0.1698, 0)
    lastNode.f_lerp_result = param
    del param

    param = lastNode.createSeparatorParam("integer_________", "integer linear interpolation")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.integer_________ = param
    del param

    param = lastNode.createSeparatorParam("float________", "float linear interpolation")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.float________ = param
    del param

    # Refresh the GUI with the newly created parameters
    lastNode.setPagesOrder(['Controls', 'Node', 'Settings'])
    lastNode.refreshUserParamsGUI()
    del lastNode
    # End of node "Lerp_burn_2"

    groupgroup = groupLerp_burn_2
    # Create all nodes in the group

    # Create the parameters of the group node the same way we did for all internal nodes
    lastNode = groupgroup
    lastNode.setColor(0.7, 0.7, 0.7)

    # Create the user parameters
    lastNode.Controls = lastNode.createPageParam("Controls", "Controls")
    param = lastNode.createGroupParam("int1", "integer linear interpolation")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    lastNode.int1 = param
    del param

    param = lastNode.createStringParam("i_input_desc", "i_input_desc")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeDefault)

    # Add the param to the group, no need to add it to the page
    lastNode.int1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.i_input_desc = param
    del param

    param = lastNode.createStringParam("i_result_desc", "i_result_desc")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeDefault)

    # Add the param to the group, no need to add it to the page
    lastNode.int1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.i_result_desc = param
    del param

    param = lastNode.createIntParam("i_input", "i_input")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)

    # Add the param to the group, no need to add it to the page
    lastNode.int1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.i_input = param
    del param

    param = lastNode.createInt2DParam("i_input_range", "i_input_range")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)
    param.setDefaultValue(0, 1)
    param.restoreDefaultValue(1)

    # Add the param to the group, no need to add it to the page
    lastNode.int1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(100, 1)
    lastNode.i_input_range = param
    del param

    param = lastNode.createInt2DParam("i_lerp_range", "i_lerp_range")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)
    param.setDefaultValue(0, 1)
    param.restoreDefaultValue(1)

    # Add the param to the group, no need to add it to the page
    lastNode.int1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(7, 0)
    lastNode.i_lerp_range = param
    del param

    param = lastNode.createIntParam("i_lerp_result", "i_lerp_result")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)

    # Add the param to the group, no need to add it to the page
    lastNode.int1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(7, 0)
    lastNode.i_lerp_result = param
    del param

    param = lastNode.createGroupParam("float1", "float linear interpolation")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setOpened(True)
    lastNode.float1 = param
    del param

    param = lastNode.createStringParam("f_input_desc", "f_input_desc")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeDefault)

    # Add the param to the group, no need to add it to the page
    lastNode.float1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue("thisGroup.burn_amt.get()")
    lastNode.f_input_desc = param
    del param

    param = lastNode.createStringParam("f_result_desc", "f_result_desc")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeDefault)

    # Add the param to the group, no need to add it to the page
    lastNode.float1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue("Lerp_burn.f_lerp_result.get()")
    lastNode.f_result_desc = param
    del param

    param = lastNode.createDoubleParam("f_input", "f_input")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)

    # Add the param to the group, no need to add it to the page
    lastNode.float1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(15.1, 0)
    lastNode.f_input = param
    del param

    param = lastNode.createDouble2DParam("f_input_range", "f_input_range")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setMinimum(-2147483648, 1)
    param.setMaximum(2147483647, 1)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)

    # Add the param to the group, no need to add it to the page
    lastNode.float1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(100, 1)
    lastNode.f_input_range = param
    del param

    param = lastNode.createDouble2DParam("f_lerp_range", "f_lerp_range")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setMinimum(-2147483648, 1)
    param.setMaximum(2147483647, 1)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)

    # Add the param to the group, no need to add it to the page
    lastNode.float1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(0.2, 0)
    lastNode.f_lerp_range = param
    del param

    param = lastNode.createDoubleParam("f_lerp_result", "f_lerp_result")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)

    # Add the param to the group, no need to add it to the page
    lastNode.float1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(0.1698, 0)
    lastNode.f_lerp_result = param
    del param

    param = lastNode.createSeparatorParam("integer_________", "integer linear interpolation")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.integer_________ = param
    del param

    param = lastNode.createSeparatorParam("float________", "float linear interpolation")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.float________ = param
    del param

    # Refresh the GUI with the newly created parameters
    lastNode.setPagesOrder(['Controls', 'Node', 'Settings'])
    lastNode.refreshUserParamsGUI()
    del lastNode

    # Start of node "Input1"
    lastNode = app.createNode("fr.inria.built-in.Input", 1, groupgroup)
    lastNode.setScriptName("Input1")
    lastNode.setLabel("Input1")
    lastNode.setPosition(642, 175)
    lastNode.setSize(104, 30)
    lastNode.setColor(0.3, 0.5, 0.2)
    groupgroupInput1 = lastNode

    del lastNode
    # End of node "Input1"

    # Start of node "Output1"
    lastNode = app.createNode("fr.inria.built-in.Output", 1, groupgroup)
    lastNode.setLabel("Output1")
    lastNode.setPosition(642, 247)
    lastNode.setSize(104, 30)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupgroupOutput1 = lastNode

    del lastNode
    # End of node "Output1"

    # Now that all nodes are created we can connect them together, restore expressions
    groupgroupOutput1.connectInput(0, groupgroupInput1)

    param = groupgroup.getParam("i_lerp_result")
    param.setExpression("import numpy as np\r\n\r\ni = thisNode.i_input.get()\r\n\r\ni0 = thisNode.i_input_range.get()[0]\r\ni1 = thisNode.i_input_range.get()[1]\r\n\r\nr0 = thisNode.i_lerp_range.get()[0]\r\nr1 = thisNode.i_lerp_range.get()[1]\r\n\r\nir = [i0, i1]\r\nlr = [r0, r1]\r\n\r\ny_new = np.interp(i, ir, lr)\r\nret = y_new\r\n\r\n\r\n", True, 0)
    del param
    param = groupgroup.getParam("f_input")
    param.setExpression("thisGroup.burn_amt2.get()", False, 0)
    del param
    param = groupgroup.getParam("f_lerp_result")
    param.setExpression("import numpy as np\r\n\r\ni = thisNode.f_input.get()\r\n\r\ni0 = thisNode.f_input_range.get()[0]\r\ni1 = thisNode.f_input_range.get()[1]\r\n\r\nr0 = thisNode.f_lerp_range.get()[0]\r\nr1 = thisNode.f_lerp_range.get()[1]\r\n\r\nir = [i0, i1]\r\nlr = [r0, r1]\r\n\r\ny_new = np.interp(i, ir, lr)\r\nret = y_new\r\n\r\n\r\n", True, 0)
    del param

    # Start of node "Shuffle2"
    lastNode = app.createNode("net.sf.openfx.ShufflePlugin", 3, group)
    lastNode.setScriptName("Shuffle2")
    lastNode.setLabel("Shuffle2")
    lastNode.setPosition(1671, 5350)
    lastNode.setSize(104, 30)
    lastNode.setColor(0.6, 0.24, 0.39)
    groupShuffle2 = lastNode

    del lastNode
    # End of node "Shuffle2"

    # Start of node "Erode4"
    lastNode = app.createNode("net.sf.cimg.CImgErode", 2, group)
    lastNode.setScriptName("Erode4")
    lastNode.setLabel("Erode4")
    lastNode.setPosition(1506, 5083)
    lastNode.setSize(104, 30)
    lastNode.setColor(0.8, 0.5, 0.3)
    groupErode4 = lastNode

    param = lastNode.getParam("NatronOfxParamProcessR")
    if param is not None:
        param.setValue(False)
        del param

    param = lastNode.getParam("NatronOfxParamProcessG")
    if param is not None:
        param.setValue(False)
        del param

    param = lastNode.getParam("NatronOfxParamProcessB")
    if param is not None:
        param.setValue(False)
        del param

    param = lastNode.getParam("size")
    if param is not None:
        param.setValue(48, 0)
        param.setValue(48, 1)
        del param

    param = lastNode.getParam("premult")
    if param is not None:
        param.setValue(True)
        del param

    del lastNode
    # End of node "Erode4"

    # Start of node "Transform1"
    lastNode = app.createNode("net.sf.openfx.TransformPlugin", 1, group)
    lastNode.setScriptName("Transform1")
    lastNode.setLabel("Transform1")
    lastNode.setPosition(1671, 5423)
    lastNode.setSize(104, 30)
    lastNode.setColor(0.7, 0.3, 0.1)
    groupTransform1 = lastNode

    param = lastNode.getParam("scale")
    if param is not None:
        param.setValue(0.9703000000000001, 0)
        param.setValue(0.9703000000000001, 1)
        del param

    param = lastNode.getParam("disableNode")
    if param is not None:
        param.setValue(True)
        del param

    del lastNode
    # End of node "Transform1"

    # Start of node "Lerp_erode"
    lastNode = app.createNode("fr.inria.built-in.Group", 1, group)
    lastNode.setScriptName("Lerp_erode")
    lastNode.setLabel("Lerp_erode")
    lastNode.setPosition(2130, 5255)
    lastNode.setSize(104, 30)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupLerp_erode = lastNode


    # Create the user parameters
    lastNode.Controls = lastNode.createPageParam("Controls", "Controls")
    param = lastNode.createSeparatorParam("integer_________", "integer linear interpolation")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.integer_________ = param
    del param

    param = lastNode.createIntParam("i_input", "i_input")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(10, 0)
    lastNode.i_input = param
    del param

    param = lastNode.createInt2DParam("i_input_range", "i_input_range")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)
    param.setDefaultValue(0, 1)
    param.restoreDefaultValue(1)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(100, 1)
    lastNode.i_input_range = param
    del param

    param = lastNode.createInt2DParam("i_lerp_range", "i_lerp_range")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)
    param.setDefaultValue(0, 1)
    param.restoreDefaultValue(1)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(3, 1)
    lastNode.i_lerp_range = param
    del param

    param = lastNode.createIntParam("i_lerp_result", "i_lerp_result")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(0, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(0, 0)
    lastNode.i_lerp_result = param
    del param

    param = lastNode.createSeparatorParam("float________", "float linear interpolation")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.float________ = param
    del param

    param = lastNode.createDoubleParam("f_input", "f_input")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(100, 0)
    lastNode.f_input = param
    del param

    param = lastNode.createDouble2DParam("f_input_range", "f_input_range")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setMinimum(-2147483648, 1)
    param.setMaximum(2147483647, 1)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(100, 1)
    lastNode.f_input_range = param
    del param

    param = lastNode.createDouble2DParam("f_lerp_range", "f_lerp_range")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setMinimum(-2147483648, 1)
    param.setMaximum(2147483647, 1)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(10, 1)
    lastNode.f_lerp_range = param
    del param

    param = lastNode.createDoubleParam("f_lerp_result", "f_lerp_result")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(10, 0)
    lastNode.f_lerp_result = param
    del param

    # Refresh the GUI with the newly created parameters
    lastNode.setPagesOrder(['Controls', 'Node', 'Settings'])
    lastNode.refreshUserParamsGUI()
    del lastNode
    # End of node "Lerp_erode"

    groupgroup = groupLerp_erode
    # Create all nodes in the group

    # Create the parameters of the group node the same way we did for all internal nodes
    lastNode = groupgroup
    lastNode.setColor(0.7, 0.7, 0.7)

    # Create the user parameters
    lastNode.Controls = lastNode.createPageParam("Controls", "Controls")
    param = lastNode.createSeparatorParam("integer_________", "integer linear interpolation")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.integer_________ = param
    del param

    param = lastNode.createIntParam("i_input", "i_input")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(10, 0)
    lastNode.i_input = param
    del param

    param = lastNode.createInt2DParam("i_input_range", "i_input_range")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)
    param.setDefaultValue(0, 1)
    param.restoreDefaultValue(1)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(100, 1)
    lastNode.i_input_range = param
    del param

    param = lastNode.createInt2DParam("i_lerp_range", "i_lerp_range")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)
    param.setDefaultValue(0, 1)
    param.restoreDefaultValue(1)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(3, 1)
    lastNode.i_lerp_range = param
    del param

    param = lastNode.createIntParam("i_lerp_result", "i_lerp_result")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(0, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(0, 0)
    lastNode.i_lerp_result = param
    del param

    param = lastNode.createSeparatorParam("float________", "float linear interpolation")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.float________ = param
    del param

    param = lastNode.createDoubleParam("f_input", "f_input")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(100, 0)
    lastNode.f_input = param
    del param

    param = lastNode.createDouble2DParam("f_input_range", "f_input_range")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setMinimum(-2147483648, 1)
    param.setMaximum(2147483647, 1)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(100, 1)
    lastNode.f_input_range = param
    del param

    param = lastNode.createDouble2DParam("f_lerp_range", "f_lerp_range")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setMinimum(-2147483648, 1)
    param.setMaximum(2147483647, 1)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(10, 1)
    lastNode.f_lerp_range = param
    del param

    param = lastNode.createDoubleParam("f_lerp_result", "f_lerp_result")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(10, 0)
    lastNode.f_lerp_result = param
    del param

    # Refresh the GUI with the newly created parameters
    lastNode.setPagesOrder(['Controls', 'Node', 'Settings'])
    lastNode.refreshUserParamsGUI()
    del lastNode

    # Start of node "Input1"
    lastNode = app.createNode("fr.inria.built-in.Input", 1, groupgroup)
    lastNode.setScriptName("Input1")
    lastNode.setLabel("Input1")
    lastNode.setPosition(642, 175)
    lastNode.setSize(104, 30)
    lastNode.setColor(0.3, 0.5, 0.2)
    groupgroupInput1 = lastNode

    del lastNode
    # End of node "Input1"

    # Start of node "Output1"
    lastNode = app.createNode("fr.inria.built-in.Output", 1, groupgroup)
    lastNode.setLabel("Output1")
    lastNode.setPosition(642, 247)
    lastNode.setSize(104, 30)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupgroupOutput1 = lastNode

    del lastNode
    # End of node "Output1"

    # Now that all nodes are created we can connect them together, restore expressions
    groupgroupOutput1.connectInput(0, groupgroupInput1)

    param = groupgroup.getParam("i_input")
    param.setExpression("(thisGroup.burn_amt2.get()/2)+(thisGroup.burn_edges2.get()/2)", False, 0)
    del param
    param = groupgroup.getParam("i_lerp_result")
    param.setExpression("import numpy as np\r\n\r\ni = thisNode.i_input.get()\r\n\r\ni0 = thisNode.i_input_range.get()[0]\r\ni1 = thisNode.i_input_range.get()[1]\r\n\r\nr0 = thisNode.i_lerp_range.get()[0]\r\nr1 = thisNode.i_lerp_range.get()[1]\r\n\r\nir = [i0, i1]\r\nlr = [r0, r1]\r\n\r\ny_new = np.interp(i, ir, lr)\r\nret = y_new\r\n\r\n\r\n", True, 0)
    del param
    param = groupgroup.getParam("f_lerp_result")
    param.setExpression("import numpy as np\r\n\r\ni = thisNode.f_input.get()\r\n\r\ni0 = thisNode.f_input_range.get()[0]\r\ni1 = thisNode.f_input_range.get()[1]\r\n\r\nr0 = thisNode.f_lerp_range.get()[0]\r\nr1 = thisNode.f_lerp_range.get()[1]\r\n\r\nir = [i0, i1]\r\nlr = [r0, r1]\r\n\r\ny_new = np.interp(i, ir, lr)\r\nret = y_new\r\n\r\n\r\n", True, 0)
    del param

    # Start of node "SeGrain_after"
    lastNode = app.createNode("net.sf.openfx.SeGrain", 1, group)
    lastNode.setScriptName("SeGrain_after")
    lastNode.setLabel("SeGrain_after")
    lastNode.setPosition(1683, 4949)
    lastNode.setSize(80, 38)
    lastNode.setColor(0.75, 0.75, 0.75)
    groupSeGrain_after = lastNode

    param = lastNode.getParam("grainSizeAll")
    if param is not None:
        param.setValue(50.9, 0)
        del param

    param = lastNode.getParam("grainSizeBlue")
    if param is not None:
        param.setValue(19.1, 0)
        del param

    param = lastNode.getParam("grainIrregularityGreen")
    if param is not None:
        param.setValue(0.6, 0)
        del param

    param = lastNode.getParam("grainIrregularityBlue")
    if param is not None:
        param.setValue(0.6, 0)
        del param

    param = lastNode.getParam("grainIntensityRed")
    if param is not None:
        param.setValue(0.27, 0)
        del param

    param = lastNode.getParam("grainIntensityGreen")
    if param is not None:
        param.setValue(0.27, 0)
        del param

    param = lastNode.getParam("grainIntensityBlue")
    if param is not None:
        param.setValue(0.27, 0)
        del param

    param = lastNode.getParam("colorCorr")
    if param is not None:
        param.setValue(0.46027, 0)
        del param

    param = lastNode.getParam("grainBlack")
    if param is not None:
        param.setValue(0.034, 0)
        param.setValue(0.034, 1)
        param.setValue(0.034, 2)
        del param

    param = lastNode.getParam("userTextArea")
    if param is not None:
        param.setValue("<Natron>(Kodak 5248)</Natron>")
        del param

    del lastNode
    # End of node "SeGrain_after"

    # Start of node "Lerp_grain"
    lastNode = app.createNode("fr.inria.built-in.Group", 1, group)
    lastNode.setScriptName("Lerp_grain")
    lastNode.setLabel("Lerp_grain")
    lastNode.setPosition(2130, 5112)
    lastNode.setSize(104, 30)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupLerp_grain = lastNode


    # Create the user parameters
    lastNode.Controls = lastNode.createPageParam("Controls", "Controls")
    param = lastNode.createSeparatorParam("integer_________", "integer linear interpolation")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.integer_________ = param
    del param

    param = lastNode.createIntParam("i_input", "i_input")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.i_input = param
    del param

    param = lastNode.createInt2DParam("i_input_range", "i_input_range")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)
    param.setDefaultValue(0, 1)
    param.restoreDefaultValue(1)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(100, 1)
    lastNode.i_input_range = param
    del param

    param = lastNode.createInt2DParam("i_lerp_range", "i_lerp_range")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)
    param.setDefaultValue(0, 1)
    param.restoreDefaultValue(1)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(7, 0)
    lastNode.i_lerp_range = param
    del param

    param = lastNode.createIntParam("i_lerp_result", "i_lerp_result")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(0, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(7, 0)
    lastNode.i_lerp_result = param
    del param

    param = lastNode.createSeparatorParam("float________", "float linear interpolation")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.float________ = param
    del param

    param = lastNode.createDoubleParam("f_input", "f_input")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(15.1, 0)
    lastNode.f_input = param
    del param

    param = lastNode.createDouble2DParam("f_input_range", "f_input_range")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setMinimum(-2147483648, 1)
    param.setMaximum(2147483647, 1)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(100, 1)
    lastNode.f_input_range = param
    del param

    param = lastNode.createDouble2DParam("f_lerp_range", "f_lerp_range")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setMinimum(-2147483648, 1)
    param.setMaximum(2147483647, 1)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(1, 0)
    param.setValue(40.9, 1)
    lastNode.f_lerp_range = param
    del param

    param = lastNode.createDoubleParam("f_lerp_result", "f_lerp_result")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(7.0249, 0)
    lastNode.f_lerp_result = param
    del param

    # Refresh the GUI with the newly created parameters
    lastNode.setPagesOrder(['Controls', 'Node', 'Settings'])
    lastNode.refreshUserParamsGUI()
    del lastNode
    # End of node "Lerp_grain"

    groupgroup = groupLerp_grain
    # Create all nodes in the group

    # Create the parameters of the group node the same way we did for all internal nodes
    lastNode = groupgroup
    lastNode.setColor(0.7, 0.7, 0.7)

    # Create the user parameters
    lastNode.Controls = lastNode.createPageParam("Controls", "Controls")
    param = lastNode.createSeparatorParam("integer_________", "integer linear interpolation")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.integer_________ = param
    del param

    param = lastNode.createIntParam("i_input", "i_input")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.i_input = param
    del param

    param = lastNode.createInt2DParam("i_input_range", "i_input_range")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)
    param.setDefaultValue(0, 1)
    param.restoreDefaultValue(1)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(100, 1)
    lastNode.i_input_range = param
    del param

    param = lastNode.createInt2DParam("i_lerp_range", "i_lerp_range")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)
    param.setDefaultValue(0, 1)
    param.restoreDefaultValue(1)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(7, 0)
    lastNode.i_lerp_range = param
    del param

    param = lastNode.createIntParam("i_lerp_result", "i_lerp_result")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(0, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(7, 0)
    lastNode.i_lerp_result = param
    del param

    param = lastNode.createSeparatorParam("float________", "float linear interpolation")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.float________ = param
    del param

    param = lastNode.createDoubleParam("f_input", "f_input")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(15.1, 0)
    lastNode.f_input = param
    del param

    param = lastNode.createDouble2DParam("f_input_range", "f_input_range")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setMinimum(-2147483648, 1)
    param.setMaximum(2147483647, 1)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(100, 1)
    lastNode.f_input_range = param
    del param

    param = lastNode.createDouble2DParam("f_lerp_range", "f_lerp_range")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setMinimum(-2147483648, 1)
    param.setMaximum(2147483647, 1)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(1, 0)
    param.setValue(40.9, 1)
    lastNode.f_lerp_range = param
    del param

    param = lastNode.createDoubleParam("f_lerp_result", "f_lerp_result")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(7.0249, 0)
    lastNode.f_lerp_result = param
    del param

    # Refresh the GUI with the newly created parameters
    lastNode.setPagesOrder(['Controls', 'Node', 'Settings'])
    lastNode.refreshUserParamsGUI()
    del lastNode

    # Start of node "Input1"
    lastNode = app.createNode("fr.inria.built-in.Input", 1, groupgroup)
    lastNode.setScriptName("Input1")
    lastNode.setLabel("Input1")
    lastNode.setPosition(642, 175)
    lastNode.setSize(104, 30)
    lastNode.setColor(0.3, 0.5, 0.2)
    groupgroupInput1 = lastNode

    del lastNode
    # End of node "Input1"

    # Start of node "Output1"
    lastNode = app.createNode("fr.inria.built-in.Output", 1, groupgroup)
    lastNode.setLabel("Output1")
    lastNode.setPosition(642, 247)
    lastNode.setSize(104, 30)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupgroupOutput1 = lastNode

    del lastNode
    # End of node "Output1"

    # Now that all nodes are created we can connect them together, restore expressions
    groupgroupOutput1.connectInput(0, groupgroupInput1)

    param = groupgroup.getParam("i_lerp_result")
    param.setExpression("import numpy as np\r\n\r\ni = thisNode.i_input.get()\r\n\r\ni0 = thisNode.i_input_range.get()[0]\r\ni1 = thisNode.i_input_range.get()[1]\r\n\r\nr0 = thisNode.i_lerp_range.get()[0]\r\nr1 = thisNode.i_lerp_range.get()[1]\r\n\r\nir = [i0, i1]\r\nlr = [r0, r1]\r\n\r\ny_new = np.interp(i, ir, lr)\r\nret = y_new\r\n\r\n\r\n", True, 0)
    del param
    param = groupgroup.getParam("f_input")
    param.setExpression("thisGroup.burn_amt2.get()", False, 0)
    del param
    param = groupgroup.getParam("f_lerp_result")
    param.setExpression("import numpy as np\r\n\r\ni = thisNode.f_input.get()\r\n\r\ni0 = thisNode.f_input_range.get()[0]\r\ni1 = thisNode.f_input_range.get()[1]\r\n\r\nr0 = thisNode.f_lerp_range.get()[0]\r\nr1 = thisNode.f_lerp_range.get()[1]\r\n\r\nir = [i0, i1]\r\nlr = [r0, r1]\r\n\r\ny_new = np.interp(i, ir, lr)\r\nret = y_new\r\n\r\n\r\n", True, 0)
    del param

    # Start of node "Lerp1"
    lastNode = app.createNode("fr.inria.built-in.Group", 1, group)
    lastNode.setScriptName("Lerp1")
    lastNode.setLabel("Lerp1")
    lastNode.setPosition(2130, 5148)
    lastNode.setSize(104, 30)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupLerp1 = lastNode


    # Create the user parameters
    lastNode.Controls = lastNode.createPageParam("Controls", "Controls")
    param = lastNode.createSeparatorParam("integer_________", "integer linear interpolation")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.integer_________ = param
    del param

    param = lastNode.createIntParam("i_input", "i_input")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.i_input = param
    del param

    param = lastNode.createInt2DParam("i_input_range", "i_input_range")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)
    param.setDefaultValue(0, 1)
    param.restoreDefaultValue(1)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(100, 1)
    lastNode.i_input_range = param
    del param

    param = lastNode.createInt2DParam("i_lerp_range", "i_lerp_range")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)
    param.setDefaultValue(0, 1)
    param.restoreDefaultValue(1)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(7, 0)
    lastNode.i_lerp_range = param
    del param

    param = lastNode.createIntParam("i_lerp_result", "i_lerp_result")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(0, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(7, 0)
    lastNode.i_lerp_result = param
    del param

    param = lastNode.createSeparatorParam("float________", "float linear interpolation")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.float________ = param
    del param

    param = lastNode.createDoubleParam("f_input", "f_input")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(20.4, 0)
    lastNode.f_input = param
    del param

    param = lastNode.createDouble2DParam("f_input_range", "f_input_range")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setMinimum(-2147483648, 1)
    param.setMaximum(2147483647, 1)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(100, 1)
    lastNode.f_input_range = param
    del param

    param = lastNode.createDouble2DParam("f_lerp_range", "f_lerp_range")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setMinimum(-2147483648, 1)
    param.setMaximum(2147483647, 1)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(1, 1)
    lastNode.f_lerp_range = param
    del param

    param = lastNode.createDoubleParam("f_lerp_result", "f_lerp_result")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(0.204, 0)
    lastNode.f_lerp_result = param
    del param

    # Refresh the GUI with the newly created parameters
    lastNode.setPagesOrder(['Controls', 'Node', 'Settings'])
    lastNode.refreshUserParamsGUI()
    del lastNode
    # End of node "Lerp1"

    groupgroup = groupLerp1
    # Create all nodes in the group

    # Create the parameters of the group node the same way we did for all internal nodes
    lastNode = groupgroup
    lastNode.setColor(0.7, 0.7, 0.7)

    # Create the user parameters
    lastNode.Controls = lastNode.createPageParam("Controls", "Controls")
    param = lastNode.createSeparatorParam("integer_________", "integer linear interpolation")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.integer_________ = param
    del param

    param = lastNode.createIntParam("i_input", "i_input")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.i_input = param
    del param

    param = lastNode.createInt2DParam("i_input_range", "i_input_range")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)
    param.setDefaultValue(0, 1)
    param.restoreDefaultValue(1)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(100, 1)
    lastNode.i_input_range = param
    del param

    param = lastNode.createInt2DParam("i_lerp_range", "i_lerp_range")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)
    param.setDefaultValue(0, 1)
    param.restoreDefaultValue(1)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(7, 0)
    lastNode.i_lerp_range = param
    del param

    param = lastNode.createIntParam("i_lerp_result", "i_lerp_result")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(0, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(7, 0)
    lastNode.i_lerp_result = param
    del param

    param = lastNode.createSeparatorParam("float________", "float linear interpolation")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.float________ = param
    del param

    param = lastNode.createDoubleParam("f_input", "f_input")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(20.4, 0)
    lastNode.f_input = param
    del param

    param = lastNode.createDouble2DParam("f_input_range", "f_input_range")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setMinimum(-2147483648, 1)
    param.setMaximum(2147483647, 1)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(100, 1)
    lastNode.f_input_range = param
    del param

    param = lastNode.createDouble2DParam("f_lerp_range", "f_lerp_range")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setMinimum(-2147483648, 1)
    param.setMaximum(2147483647, 1)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(1, 1)
    lastNode.f_lerp_range = param
    del param

    param = lastNode.createDoubleParam("f_lerp_result", "f_lerp_result")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(0.204, 0)
    lastNode.f_lerp_result = param
    del param

    # Refresh the GUI with the newly created parameters
    lastNode.setPagesOrder(['Controls', 'Node', 'Settings'])
    lastNode.refreshUserParamsGUI()
    del lastNode

    # Start of node "Input1"
    lastNode = app.createNode("fr.inria.built-in.Input", 1, groupgroup)
    lastNode.setScriptName("Input1")
    lastNode.setLabel("Input1")
    lastNode.setPosition(642, 175)
    lastNode.setSize(104, 30)
    lastNode.setColor(0.3, 0.5, 0.2)
    groupgroupInput1 = lastNode

    del lastNode
    # End of node "Input1"

    # Start of node "Output1"
    lastNode = app.createNode("fr.inria.built-in.Output", 1, groupgroup)
    lastNode.setLabel("Output1")
    lastNode.setPosition(642, 247)
    lastNode.setSize(104, 30)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupgroupOutput1 = lastNode

    del lastNode
    # End of node "Output1"

    # Now that all nodes are created we can connect them together, restore expressions
    groupgroupOutput1.connectInput(0, groupgroupInput1)

    param = groupgroup.getParam("i_lerp_result")
    param.setExpression("import numpy as np\r\n\r\ni = thisNode.i_input.get()\r\n\r\ni0 = thisNode.i_input_range.get()[0]\r\ni1 = thisNode.i_input_range.get()[1]\r\n\r\nr0 = thisNode.i_lerp_range.get()[0]\r\nr1 = thisNode.i_lerp_range.get()[1]\r\n\r\nir = [i0, i1]\r\nlr = [r0, r1]\r\n\r\ny_new = np.interp(i, ir, lr)\r\nret = y_new\r\n\r\n\r\n", True, 0)
    del param
    param = groupgroup.getParam("f_input")
    param.setExpression("(thisGroup.burn_amt2.get()+thisGroup.burn_edges2.get())", False, 0)
    del param
    param = groupgroup.getParam("f_lerp_result")
    param.setExpression("import numpy as np\r\n\r\ni = thisNode.f_input.get()\r\n\r\ni0 = thisNode.f_input_range.get()[0]\r\ni1 = thisNode.f_input_range.get()[1]\r\n\r\nr0 = thisNode.f_lerp_range.get()[0]\r\nr1 = thisNode.f_lerp_range.get()[1]\r\n\r\nir = [i0, i1]\r\nlr = [r0, r1]\r\n\r\ny_new = np.interp(i, ir, lr)\r\nret = y_new\r\n\r\n\r\n", True, 0)
    del param

    # Start of node "Dot18"
    lastNode = app.createNode("fr.inria.built-in.Dot", 1, group)
    lastNode.setScriptName("Dot18")
    lastNode.setLabel("Dot18")
    lastNode.setPosition(1719, 4774)
    lastNode.setSize(15, 15)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupDot18 = lastNode

    del lastNode
    # End of node "Dot18"

    # Start of node "Dot19"
    lastNode = app.createNode("fr.inria.built-in.Dot", 1, group)
    lastNode.setScriptName("Dot19")
    lastNode.setLabel("Dot19")
    lastNode.setPosition(1616, 1729)
    lastNode.setSize(15, 15)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupDot19 = lastNode

    del lastNode
    # End of node "Dot19"

    # Start of node "Transform2"
    lastNode = app.createNode("net.sf.openfx.TransformPlugin", 1, group)
    lastNode.setScriptName("Transform2")
    lastNode.setLabel("Transform2")
    lastNode.setPosition(1788, 1713)
    lastNode.setSize(104, 30)
    lastNode.setColor(0.7, 0.3, 0.1)
    groupTransform2 = lastNode

    param = lastNode.getParam("scale")
    if param is not None:
        param.setValue(1.04, 0)
        param.setValue(1.04, 1)
        del param

    del lastNode
    # End of node "Transform2"

    # Start of node "Dot27"
    lastNode = app.createNode("fr.inria.built-in.Dot", 1, group)
    lastNode.setScriptName("Dot27")
    lastNode.setLabel("Dot27")
    lastNode.setPosition(1447, 5001)
    lastNode.setSize(15, 15)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupDot27 = lastNode

    del lastNode
    # End of node "Dot27"

    # Start of node "Unpremult2"
    lastNode = app.createNode("net.sf.openfx.Unpremult", 2, group)
    lastNode.setScriptName("Unpremult2")
    lastNode.setLabel("Unpremult2")
    lastNode.setPosition(1674, 4867)
    lastNode.setSize(104, 30)
    lastNode.setColor(0.3, 0.37, 0.776)
    groupUnpremult2 = lastNode

    del lastNode
    # End of node "Unpremult2"

    # Start of node "Premult4"
    lastNode = app.createNode("net.sf.openfx.Premult", 2, group)
    lastNode.setScriptName("Premult4")
    lastNode.setLabel("Premult4")
    lastNode.setPosition(1671, 5483)
    lastNode.setSize(104, 30)
    lastNode.setColor(0.3, 0.37, 0.776)
    groupPremult4 = lastNode

    del lastNode
    # End of node "Premult4"

    # Start of node "Switch2_2"
    lastNode = app.createNode("net.sf.openfx.switchPlugin", 1, group)
    lastNode.setScriptName("Switch2_2")
    lastNode.setLabel("Switch2_2")
    lastNode.setPosition(1795, 1186)
    lastNode.setSize(104, 30)
    lastNode.setColor(0.3, 0.37, 0.776)
    groupSwitch2_2 = lastNode

    param = lastNode.getParam("which")
    if param is not None:
        param.setValue(1, 0)
        del param

    del lastNode
    # End of node "Switch2_2"

    # Start of node "Dot20_2"
    lastNode = app.createNode("fr.inria.built-in.Dot", 1, group)
    lastNode.setScriptName("Dot20_2")
    lastNode.setLabel("Dot20_2")
    lastNode.setPosition(1711, 1020)
    lastNode.setSize(15, 15)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupDot20_2 = lastNode

    del lastNode
    # End of node "Dot20_2"

    # Start of node "Backdrop3_2"
    lastNode = app.createNode("fr.inria.built-in.BackDrop", 1, group)
    lastNode.setScriptName("Backdrop3_2")
    lastNode.setLabel("Backdrop3_2")
    lastNode.setPosition(1660, 418)
    lastNode.setSize(690, 908)
    lastNode.setColor(0.45, 0.45, 0.45)
    groupBackdrop3_2 = lastNode

    param = lastNode.getParam("Label")
    if param is not None:
        param.setValue("<font size=\"26\" color=\"#000000\" face=\"Droid Sans\">Burn Before</font>")
        del param

    del lastNode
    # End of node "Backdrop3_2"

    # Start of node "Lerp_burn_3"
    lastNode = app.createNode("fr.inria.built-in.Group", 1, group)
    lastNode.setScriptName("Lerp_burn_3")
    lastNode.setLabel("Lerp_burn_3")
    lastNode.setPosition(2065, 883)
    lastNode.setSize(104, 30)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupLerp_burn_3 = lastNode


    # Create the user parameters
    lastNode.Controls = lastNode.createPageParam("Controls", "Controls")
    param = lastNode.createGroupParam("int1", "integer linear interpolation")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setOpened(True)
    lastNode.int1 = param
    del param

    param = lastNode.createStringParam("i_input_desc", "i_input_desc")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeDefault)

    # Add the param to the group, no need to add it to the page
    lastNode.int1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue("thisGroup.burn_edges.get()")
    lastNode.i_input_desc = param
    del param

    param = lastNode.createStringParam("i_result_desc", "i_result_desc")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeDefault)

    # Add the param to the group, no need to add it to the page
    lastNode.int1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.i_result_desc = param
    del param

    param = lastNode.createIntParam("i_input", "i_input")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)

    # Add the param to the group, no need to add it to the page
    lastNode.int1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(75, 0)
    lastNode.i_input = param
    del param

    param = lastNode.createInt2DParam("i_input_range", "i_input_range")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)
    param.setDefaultValue(0, 1)
    param.restoreDefaultValue(1)

    # Add the param to the group, no need to add it to the page
    lastNode.int1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(100, 1)
    lastNode.i_input_range = param
    del param

    param = lastNode.createInt2DParam("i_lerp_range", "i_lerp_range")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)
    param.setDefaultValue(0, 1)
    param.restoreDefaultValue(1)

    # Add the param to the group, no need to add it to the page
    lastNode.int1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(35, 1)
    lastNode.i_lerp_range = param
    del param

    param = lastNode.createIntParam("i_lerp_result", "i_lerp_result")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)

    # Add the param to the group, no need to add it to the page
    lastNode.int1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(26, 0)
    lastNode.i_lerp_result = param
    del param

    param = lastNode.createGroupParam("float1", "float linear interpolation")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setOpened(True)
    lastNode.float1 = param
    del param

    param = lastNode.createStringParam("f_input_desc", "f_input_desc")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeDefault)

    # Add the param to the group, no need to add it to the page
    lastNode.float1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue("thisGroup.burn_amt.get()")
    lastNode.f_input_desc = param
    del param

    param = lastNode.createStringParam("f_result_desc", "f_result_desc")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeDefault)

    # Add the param to the group, no need to add it to the page
    lastNode.float1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue("Lerp_burn.f_lerp_result.get()")
    lastNode.f_result_desc = param
    del param

    param = lastNode.createDoubleParam("f_input", "f_input")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)

    # Add the param to the group, no need to add it to the page
    lastNode.float1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(29.7, 0)
    lastNode.f_input = param
    del param

    param = lastNode.createDouble2DParam("f_input_range", "f_input_range")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setMinimum(-2147483648, 1)
    param.setMaximum(2147483647, 1)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)

    # Add the param to the group, no need to add it to the page
    lastNode.float1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(100, 1)
    lastNode.f_input_range = param
    del param

    param = lastNode.createDouble2DParam("f_lerp_range", "f_lerp_range")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setMinimum(-2147483648, 1)
    param.setMaximum(2147483647, 1)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)

    # Add the param to the group, no need to add it to the page
    lastNode.float1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(1, 0)
    lastNode.f_lerp_range = param
    del param

    param = lastNode.createDoubleParam("f_lerp_result", "f_lerp_result")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)

    # Add the param to the group, no need to add it to the page
    lastNode.float1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(0.7030000000000001, 0)
    lastNode.f_lerp_result = param
    del param

    param = lastNode.createSeparatorParam("integer_________", "integer linear interpolation")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.integer_________ = param
    del param

    param = lastNode.createSeparatorParam("float________", "float linear interpolation")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.float________ = param
    del param

    # Refresh the GUI with the newly created parameters
    lastNode.setPagesOrder(['Controls', 'Node', 'Settings'])
    lastNode.refreshUserParamsGUI()
    del lastNode
    # End of node "Lerp_burn_3"

    groupgroup = groupLerp_burn_3
    # Create all nodes in the group

    # Create the parameters of the group node the same way we did for all internal nodes
    lastNode = groupgroup
    lastNode.setColor(0.7, 0.7, 0.7)

    # Create the user parameters
    lastNode.Controls = lastNode.createPageParam("Controls", "Controls")
    param = lastNode.createGroupParam("int1", "integer linear interpolation")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setOpened(True)
    lastNode.int1 = param
    del param

    param = lastNode.createStringParam("i_input_desc", "i_input_desc")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeDefault)

    # Add the param to the group, no need to add it to the page
    lastNode.int1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue("thisGroup.burn_edges.get()")
    lastNode.i_input_desc = param
    del param

    param = lastNode.createStringParam("i_result_desc", "i_result_desc")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeDefault)

    # Add the param to the group, no need to add it to the page
    lastNode.int1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.i_result_desc = param
    del param

    param = lastNode.createIntParam("i_input", "i_input")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)

    # Add the param to the group, no need to add it to the page
    lastNode.int1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(75, 0)
    lastNode.i_input = param
    del param

    param = lastNode.createInt2DParam("i_input_range", "i_input_range")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)
    param.setDefaultValue(0, 1)
    param.restoreDefaultValue(1)

    # Add the param to the group, no need to add it to the page
    lastNode.int1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(100, 1)
    lastNode.i_input_range = param
    del param

    param = lastNode.createInt2DParam("i_lerp_range", "i_lerp_range")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)
    param.setDefaultValue(0, 1)
    param.restoreDefaultValue(1)

    # Add the param to the group, no need to add it to the page
    lastNode.int1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(35, 1)
    lastNode.i_lerp_range = param
    del param

    param = lastNode.createIntParam("i_lerp_result", "i_lerp_result")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)

    # Add the param to the group, no need to add it to the page
    lastNode.int1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(26, 0)
    lastNode.i_lerp_result = param
    del param

    param = lastNode.createGroupParam("float1", "float linear interpolation")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setOpened(True)
    lastNode.float1 = param
    del param

    param = lastNode.createStringParam("f_input_desc", "f_input_desc")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeDefault)

    # Add the param to the group, no need to add it to the page
    lastNode.float1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue("thisGroup.burn_amt.get()")
    lastNode.f_input_desc = param
    del param

    param = lastNode.createStringParam("f_result_desc", "f_result_desc")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeDefault)

    # Add the param to the group, no need to add it to the page
    lastNode.float1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue("Lerp_burn.f_lerp_result.get()")
    lastNode.f_result_desc = param
    del param

    param = lastNode.createDoubleParam("f_input", "f_input")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)

    # Add the param to the group, no need to add it to the page
    lastNode.float1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(29.7, 0)
    lastNode.f_input = param
    del param

    param = lastNode.createDouble2DParam("f_input_range", "f_input_range")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setMinimum(-2147483648, 1)
    param.setMaximum(2147483647, 1)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)

    # Add the param to the group, no need to add it to the page
    lastNode.float1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(100, 1)
    lastNode.f_input_range = param
    del param

    param = lastNode.createDouble2DParam("f_lerp_range", "f_lerp_range")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setMinimum(-2147483648, 1)
    param.setMaximum(2147483647, 1)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)

    # Add the param to the group, no need to add it to the page
    lastNode.float1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(1, 0)
    lastNode.f_lerp_range = param
    del param

    param = lastNode.createDoubleParam("f_lerp_result", "f_lerp_result")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)

    # Add the param to the group, no need to add it to the page
    lastNode.float1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(0.7030000000000001, 0)
    lastNode.f_lerp_result = param
    del param

    param = lastNode.createSeparatorParam("integer_________", "integer linear interpolation")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.integer_________ = param
    del param

    param = lastNode.createSeparatorParam("float________", "float linear interpolation")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.float________ = param
    del param

    # Refresh the GUI with the newly created parameters
    lastNode.setPagesOrder(['Controls', 'Node', 'Settings'])
    lastNode.refreshUserParamsGUI()
    del lastNode

    # Start of node "Input1"
    lastNode = app.createNode("fr.inria.built-in.Input", 1, groupgroup)
    lastNode.setScriptName("Input1")
    lastNode.setLabel("Input1")
    lastNode.setPosition(642, 175)
    lastNode.setSize(104, 30)
    lastNode.setColor(0.3, 0.5, 0.2)
    groupgroupInput1 = lastNode

    del lastNode
    # End of node "Input1"

    # Start of node "Output1"
    lastNode = app.createNode("fr.inria.built-in.Output", 1, groupgroup)
    lastNode.setLabel("Output1")
    lastNode.setPosition(642, 247)
    lastNode.setSize(104, 30)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupgroupOutput1 = lastNode

    del lastNode
    # End of node "Output1"

    # Now that all nodes are created we can connect them together, restore expressions
    groupgroupOutput1.connectInput(0, groupgroupInput1)

    param = groupgroup.getParam("i_input")
    param.setExpression("thisNode.i_input_range.get()[1]-thisGroup.burn_edges.get()", False, 0)
    del param
    param = groupgroup.getParam("i_lerp_result")
    param.setExpression("import numpy as np\r\n\r\ni = thisNode.i_input.get()\r\n\r\ni0 = thisNode.i_input_range.get()[0]\r\ni1 = thisNode.i_input_range.get()[1]\r\n\r\nr0 = thisNode.i_lerp_range.get()[0]\r\nr1 = thisNode.i_lerp_range.get()[1]\r\n\r\nir = [i0, i1]\r\nlr = [r0, r1]\r\n\r\ny_new = np.interp(i, ir, lr)\r\nret = y_new\r\n\r\n\r\n", True, 0)
    del param
    param = groupgroup.getParam("f_input")
    param.setExpression("thisGroup.burn_amt.get()", False, 0)
    del param
    param = groupgroup.getParam("f_lerp_result")
    param.setExpression("import numpy as np\r\n\r\ni = thisNode.f_input.get()\r\n\r\ni0 = thisNode.f_input_range.get()[0]\r\ni1 = thisNode.f_input_range.get()[1]\r\n\r\nr0 = thisNode.f_lerp_range.get()[0]\r\nr1 = thisNode.f_lerp_range.get()[1]\r\n\r\nir = [i0, i1]\r\nlr = [r0, r1]\r\n\r\ny_new = np.interp(i, ir, lr)\r\nret = y_new\r\n\r\n\r\n", True, 0)
    del param

    # Start of node "Dot24_2"
    lastNode = app.createNode("fr.inria.built-in.Dot", 1, group)
    lastNode.setScriptName("Dot24_2")
    lastNode.setLabel("Dot24_2")
    lastNode.setPosition(1840, 1287)
    lastNode.setSize(15, 15)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupDot24_2 = lastNode

    del lastNode
    # End of node "Dot24_2"

    # Start of node "Blur3_2"
    lastNode = app.createNode("net.sf.cimg.CImgBlur", 4, group)
    lastNode.setScriptName("Blur3_2")
    lastNode.setLabel("Blur3_2")
    lastNode.setPosition(1938, 813)
    lastNode.setSize(104, 30)
    lastNode.setColor(0.8, 0.5, 0.3)
    groupBlur3_2 = lastNode

    param = lastNode.getParam("NatronOfxParamProcessR")
    if param is not None:
        param.setValue(False)
        del param

    param = lastNode.getParam("NatronOfxParamProcessG")
    if param is not None:
        param.setValue(False)
        del param

    param = lastNode.getParam("NatronOfxParamProcessB")
    if param is not None:
        param.setValue(False)
        del param

    param = lastNode.getParam("size")
    if param is not None:
        param.setValue(28.8, 0)
        param.setValue(28.8, 1)
        del param

    param = lastNode.getParam("maskInvert")
    if param is not None:
        param.setValue(True)
        del param

    param = lastNode.getParam("enableMask_Mask")
    if param is not None:
        param.setValue(True)
        del param

    param = lastNode.getParam("disableNode")
    if param is not None:
        param.setValue(True)
        del param

    del lastNode
    # End of node "Blur3_2"

    # Start of node "Lerp_burn_2_2"
    lastNode = app.createNode("fr.inria.built-in.Group", 1, group)
    lastNode.setScriptName("Lerp_burn_2_2")
    lastNode.setLabel("Lerp_burn_2_2")
    lastNode.setPosition(2191, 1013)
    lastNode.setSize(104, 30)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupLerp_burn_2_2 = lastNode


    # Create the user parameters
    lastNode.Controls = lastNode.createPageParam("Controls", "Controls")
    param = lastNode.createGroupParam("int1", "integer linear interpolation")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    lastNode.int1 = param
    del param

    param = lastNode.createStringParam("i_input_desc", "i_input_desc")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeDefault)

    # Add the param to the group, no need to add it to the page
    lastNode.int1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.i_input_desc = param
    del param

    param = lastNode.createStringParam("i_result_desc", "i_result_desc")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeDefault)

    # Add the param to the group, no need to add it to the page
    lastNode.int1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.i_result_desc = param
    del param

    param = lastNode.createIntParam("i_input", "i_input")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)

    # Add the param to the group, no need to add it to the page
    lastNode.int1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.i_input = param
    del param

    param = lastNode.createInt2DParam("i_input_range", "i_input_range")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)
    param.setDefaultValue(0, 1)
    param.restoreDefaultValue(1)

    # Add the param to the group, no need to add it to the page
    lastNode.int1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(100, 1)
    lastNode.i_input_range = param
    del param

    param = lastNode.createInt2DParam("i_lerp_range", "i_lerp_range")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)
    param.setDefaultValue(0, 1)
    param.restoreDefaultValue(1)

    # Add the param to the group, no need to add it to the page
    lastNode.int1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(7, 0)
    lastNode.i_lerp_range = param
    del param

    param = lastNode.createIntParam("i_lerp_result", "i_lerp_result")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)

    # Add the param to the group, no need to add it to the page
    lastNode.int1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(7, 0)
    lastNode.i_lerp_result = param
    del param

    param = lastNode.createGroupParam("float1", "float linear interpolation")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setOpened(True)
    lastNode.float1 = param
    del param

    param = lastNode.createStringParam("f_input_desc", "f_input_desc")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeDefault)

    # Add the param to the group, no need to add it to the page
    lastNode.float1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue("thisGroup.burn_amt.get()")
    lastNode.f_input_desc = param
    del param

    param = lastNode.createStringParam("f_result_desc", "f_result_desc")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeDefault)

    # Add the param to the group, no need to add it to the page
    lastNode.float1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue("Lerp_burn.f_lerp_result.get()")
    lastNode.f_result_desc = param
    del param

    param = lastNode.createDoubleParam("f_input", "f_input")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)

    # Add the param to the group, no need to add it to the page
    lastNode.float1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(29.7, 0)
    lastNode.f_input = param
    del param

    param = lastNode.createDouble2DParam("f_input_range", "f_input_range")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setMinimum(-2147483648, 1)
    param.setMaximum(2147483647, 1)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)

    # Add the param to the group, no need to add it to the page
    lastNode.float1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(100, 1)
    lastNode.f_input_range = param
    del param

    param = lastNode.createDouble2DParam("f_lerp_range", "f_lerp_range")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setMinimum(-2147483648, 1)
    param.setMaximum(2147483647, 1)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)

    # Add the param to the group, no need to add it to the page
    lastNode.float1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(0.2, 0)
    lastNode.f_lerp_range = param
    del param

    param = lastNode.createDoubleParam("f_lerp_result", "f_lerp_result")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)

    # Add the param to the group, no need to add it to the page
    lastNode.float1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(0.1406, 0)
    lastNode.f_lerp_result = param
    del param

    param = lastNode.createSeparatorParam("integer_________", "integer linear interpolation")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.integer_________ = param
    del param

    param = lastNode.createSeparatorParam("float________", "float linear interpolation")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.float________ = param
    del param

    # Refresh the GUI with the newly created parameters
    lastNode.setPagesOrder(['Controls', 'Node', 'Settings'])
    lastNode.refreshUserParamsGUI()
    del lastNode
    # End of node "Lerp_burn_2_2"

    groupgroup = groupLerp_burn_2_2
    # Create all nodes in the group

    # Create the parameters of the group node the same way we did for all internal nodes
    lastNode = groupgroup
    lastNode.setColor(0.7, 0.7, 0.7)

    # Create the user parameters
    lastNode.Controls = lastNode.createPageParam("Controls", "Controls")
    param = lastNode.createGroupParam("int1", "integer linear interpolation")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    lastNode.int1 = param
    del param

    param = lastNode.createStringParam("i_input_desc", "i_input_desc")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeDefault)

    # Add the param to the group, no need to add it to the page
    lastNode.int1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.i_input_desc = param
    del param

    param = lastNode.createStringParam("i_result_desc", "i_result_desc")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeDefault)

    # Add the param to the group, no need to add it to the page
    lastNode.int1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.i_result_desc = param
    del param

    param = lastNode.createIntParam("i_input", "i_input")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)

    # Add the param to the group, no need to add it to the page
    lastNode.int1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.i_input = param
    del param

    param = lastNode.createInt2DParam("i_input_range", "i_input_range")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)
    param.setDefaultValue(0, 1)
    param.restoreDefaultValue(1)

    # Add the param to the group, no need to add it to the page
    lastNode.int1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(100, 1)
    lastNode.i_input_range = param
    del param

    param = lastNode.createInt2DParam("i_lerp_range", "i_lerp_range")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)
    param.setDefaultValue(0, 1)
    param.restoreDefaultValue(1)

    # Add the param to the group, no need to add it to the page
    lastNode.int1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(7, 0)
    lastNode.i_lerp_range = param
    del param

    param = lastNode.createIntParam("i_lerp_result", "i_lerp_result")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)

    # Add the param to the group, no need to add it to the page
    lastNode.int1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(7, 0)
    lastNode.i_lerp_result = param
    del param

    param = lastNode.createGroupParam("float1", "float linear interpolation")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setOpened(True)
    lastNode.float1 = param
    del param

    param = lastNode.createStringParam("f_input_desc", "f_input_desc")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeDefault)

    # Add the param to the group, no need to add it to the page
    lastNode.float1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue("thisGroup.burn_amt.get()")
    lastNode.f_input_desc = param
    del param

    param = lastNode.createStringParam("f_result_desc", "f_result_desc")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeDefault)

    # Add the param to the group, no need to add it to the page
    lastNode.float1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue("Lerp_burn.f_lerp_result.get()")
    lastNode.f_result_desc = param
    del param

    param = lastNode.createDoubleParam("f_input", "f_input")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)

    # Add the param to the group, no need to add it to the page
    lastNode.float1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(29.7, 0)
    lastNode.f_input = param
    del param

    param = lastNode.createDouble2DParam("f_input_range", "f_input_range")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setMinimum(-2147483648, 1)
    param.setMaximum(2147483647, 1)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)

    # Add the param to the group, no need to add it to the page
    lastNode.float1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(100, 1)
    lastNode.f_input_range = param
    del param

    param = lastNode.createDouble2DParam("f_lerp_range", "f_lerp_range")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setMinimum(-2147483648, 1)
    param.setMaximum(2147483647, 1)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)

    # Add the param to the group, no need to add it to the page
    lastNode.float1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(0.2, 0)
    lastNode.f_lerp_range = param
    del param

    param = lastNode.createDoubleParam("f_lerp_result", "f_lerp_result")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)

    # Add the param to the group, no need to add it to the page
    lastNode.float1.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(0.1406, 0)
    lastNode.f_lerp_result = param
    del param

    param = lastNode.createSeparatorParam("integer_________", "integer linear interpolation")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.integer_________ = param
    del param

    param = lastNode.createSeparatorParam("float________", "float linear interpolation")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.float________ = param
    del param

    # Refresh the GUI with the newly created parameters
    lastNode.setPagesOrder(['Controls', 'Node', 'Settings'])
    lastNode.refreshUserParamsGUI()
    del lastNode

    # Start of node "Input1"
    lastNode = app.createNode("fr.inria.built-in.Input", 1, groupgroup)
    lastNode.setScriptName("Input1")
    lastNode.setLabel("Input1")
    lastNode.setPosition(642, 175)
    lastNode.setSize(104, 30)
    lastNode.setColor(0.3, 0.5, 0.2)
    groupgroupInput1 = lastNode

    del lastNode
    # End of node "Input1"

    # Start of node "Output1"
    lastNode = app.createNode("fr.inria.built-in.Output", 1, groupgroup)
    lastNode.setLabel("Output1")
    lastNode.setPosition(642, 247)
    lastNode.setSize(104, 30)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupgroupOutput1 = lastNode

    del lastNode
    # End of node "Output1"

    # Now that all nodes are created we can connect them together, restore expressions
    groupgroupOutput1.connectInput(0, groupgroupInput1)

    param = groupgroup.getParam("i_lerp_result")
    param.setExpression("import numpy as np\r\n\r\ni = thisNode.i_input.get()\r\n\r\ni0 = thisNode.i_input_range.get()[0]\r\ni1 = thisNode.i_input_range.get()[1]\r\n\r\nr0 = thisNode.i_lerp_range.get()[0]\r\nr1 = thisNode.i_lerp_range.get()[1]\r\n\r\nir = [i0, i1]\r\nlr = [r0, r1]\r\n\r\ny_new = np.interp(i, ir, lr)\r\nret = y_new\r\n\r\n\r\n", True, 0)
    del param
    param = groupgroup.getParam("f_input")
    param.setExpression("thisGroup.burn_amt.get()", False, 0)
    del param
    param = groupgroup.getParam("f_lerp_result")
    param.setExpression("import numpy as np\r\n\r\ni = thisNode.f_input.get()\r\n\r\ni0 = thisNode.f_input_range.get()[0]\r\ni1 = thisNode.f_input_range.get()[1]\r\n\r\nr0 = thisNode.f_lerp_range.get()[0]\r\nr1 = thisNode.f_lerp_range.get()[1]\r\n\r\nir = [i0, i1]\r\nlr = [r0, r1]\r\n\r\ny_new = np.interp(i, ir, lr)\r\nret = y_new\r\n\r\n\r\n", True, 0)
    del param

    # Start of node "Shuffle2_2"
    lastNode = app.createNode("net.sf.openfx.ShufflePlugin", 3, group)
    lastNode.setScriptName("Shuffle2_2")
    lastNode.setLabel("Shuffle2_2")
    lastNode.setPosition(1836, 1014)
    lastNode.setSize(104, 30)
    lastNode.setColor(0.6, 0.24, 0.39)
    groupShuffle2_2 = lastNode

    del lastNode
    # End of node "Shuffle2_2"

    # Start of node "Erode4_2"
    lastNode = app.createNode("net.sf.cimg.CImgErode", 2, group)
    lastNode.setScriptName("Erode4_2")
    lastNode.setLabel("Erode4_2")
    lastNode.setPosition(1938, 756)
    lastNode.setSize(104, 30)
    lastNode.setColor(0.8, 0.5, 0.3)
    groupErode4_2 = lastNode

    param = lastNode.getParam("size")
    if param is not None:
        param.setValue(75, 0)
        param.setValue(75, 1)
        del param

    param = lastNode.getParam("disableNode")
    if param is not None:
        param.setValue(True)
        del param

    del lastNode
    # End of node "Erode4_2"

    # Start of node "Transform1_2"
    lastNode = app.createNode("net.sf.openfx.TransformPlugin", 1, group)
    lastNode.setScriptName("Transform1_2")
    lastNode.setLabel("Transform1_2")
    lastNode.setPosition(1844, 1061)
    lastNode.setSize(104, 30)
    lastNode.setColor(0.7, 0.3, 0.1)
    groupTransform1_2 = lastNode

    param = lastNode.getParam("scale")
    if param is not None:
        param.setValue(0.9703000000000001, 0)
        param.setValue(0.9703000000000001, 1)
        del param

    param = lastNode.getParam("disableNode")
    if param is not None:
        param.setValue(True)
        del param

    del lastNode
    # End of node "Transform1_2"

    # Start of node "Erode3_2"
    lastNode = app.createNode("net.sf.cimg.CImgErode", 2, group)
    lastNode.setScriptName("Erode3_2")
    lastNode.setLabel("Erode3_2")
    lastNode.setPosition(1844, 1097)
    lastNode.setSize(104, 30)
    lastNode.setColor(0.8, 0.5, 0.3)
    groupErode3_2 = lastNode

    param = lastNode.getParam("size")
    if param is not None:
        param.setValue(0, 0)
        param.setValue(0, 1)
        del param

    param = lastNode.getParam("premult")
    if param is not None:
        param.setValue(True)
        del param

    param = lastNode.getParam("disableNode")
    if param is not None:
        param.setValue(True)
        del param

    del lastNode
    # End of node "Erode3_2"

    # Start of node "Lerp_erode_2"
    lastNode = app.createNode("fr.inria.built-in.Group", 1, group)
    lastNode.setScriptName("Lerp_erode_2")
    lastNode.setLabel("Lerp_erode_2")
    lastNode.setPosition(2191, 1099)
    lastNode.setSize(104, 30)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupLerp_erode_2 = lastNode


    # Create the user parameters
    lastNode.Controls = lastNode.createPageParam("Controls", "Controls")
    param = lastNode.createSeparatorParam("integer_________", "integer linear interpolation")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.integer_________ = param
    del param

    param = lastNode.createIntParam("i_input", "i_input")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(26, 0)
    lastNode.i_input = param
    del param

    param = lastNode.createInt2DParam("i_input_range", "i_input_range")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)
    param.setDefaultValue(0, 1)
    param.restoreDefaultValue(1)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(100, 1)
    lastNode.i_input_range = param
    del param

    param = lastNode.createInt2DParam("i_lerp_range", "i_lerp_range")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)
    param.setDefaultValue(0, 1)
    param.restoreDefaultValue(1)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(3, 1)
    lastNode.i_lerp_range = param
    del param

    param = lastNode.createIntParam("i_lerp_result", "i_lerp_result")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(0, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(0, 0)
    lastNode.i_lerp_result = param
    del param

    param = lastNode.createSeparatorParam("float________", "float linear interpolation")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.float________ = param
    del param

    param = lastNode.createDoubleParam("f_input", "f_input")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(100, 0)
    lastNode.f_input = param
    del param

    param = lastNode.createDouble2DParam("f_input_range", "f_input_range")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setMinimum(-2147483648, 1)
    param.setMaximum(2147483647, 1)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(100, 1)
    lastNode.f_input_range = param
    del param

    param = lastNode.createDouble2DParam("f_lerp_range", "f_lerp_range")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setMinimum(-2147483648, 1)
    param.setMaximum(2147483647, 1)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(10, 1)
    lastNode.f_lerp_range = param
    del param

    param = lastNode.createDoubleParam("f_lerp_result", "f_lerp_result")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(10, 0)
    lastNode.f_lerp_result = param
    del param

    # Refresh the GUI with the newly created parameters
    lastNode.setPagesOrder(['Controls', 'Node', 'Settings'])
    lastNode.refreshUserParamsGUI()
    del lastNode
    # End of node "Lerp_erode_2"

    groupgroup = groupLerp_erode_2
    # Create all nodes in the group

    # Create the parameters of the group node the same way we did for all internal nodes
    lastNode = groupgroup
    lastNode.setColor(0.7, 0.7, 0.7)

    # Create the user parameters
    lastNode.Controls = lastNode.createPageParam("Controls", "Controls")
    param = lastNode.createSeparatorParam("integer_________", "integer linear interpolation")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.integer_________ = param
    del param

    param = lastNode.createIntParam("i_input", "i_input")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(26, 0)
    lastNode.i_input = param
    del param

    param = lastNode.createInt2DParam("i_input_range", "i_input_range")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)
    param.setDefaultValue(0, 1)
    param.restoreDefaultValue(1)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(100, 1)
    lastNode.i_input_range = param
    del param

    param = lastNode.createInt2DParam("i_lerp_range", "i_lerp_range")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)
    param.setDefaultValue(0, 1)
    param.restoreDefaultValue(1)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(3, 1)
    lastNode.i_lerp_range = param
    del param

    param = lastNode.createIntParam("i_lerp_result", "i_lerp_result")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(0, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(0, 0)
    lastNode.i_lerp_result = param
    del param

    param = lastNode.createSeparatorParam("float________", "float linear interpolation")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.float________ = param
    del param

    param = lastNode.createDoubleParam("f_input", "f_input")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(100, 0)
    lastNode.f_input = param
    del param

    param = lastNode.createDouble2DParam("f_input_range", "f_input_range")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setMinimum(-2147483648, 1)
    param.setMaximum(2147483647, 1)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(100, 1)
    lastNode.f_input_range = param
    del param

    param = lastNode.createDouble2DParam("f_lerp_range", "f_lerp_range")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setMinimum(-2147483648, 1)
    param.setMaximum(2147483647, 1)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(10, 1)
    lastNode.f_lerp_range = param
    del param

    param = lastNode.createDoubleParam("f_lerp_result", "f_lerp_result")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(10, 0)
    lastNode.f_lerp_result = param
    del param

    # Refresh the GUI with the newly created parameters
    lastNode.setPagesOrder(['Controls', 'Node', 'Settings'])
    lastNode.refreshUserParamsGUI()
    del lastNode

    # Start of node "Input1"
    lastNode = app.createNode("fr.inria.built-in.Input", 1, groupgroup)
    lastNode.setScriptName("Input1")
    lastNode.setLabel("Input1")
    lastNode.setPosition(642, 175)
    lastNode.setSize(104, 30)
    lastNode.setColor(0.3, 0.5, 0.2)
    groupgroupInput1 = lastNode

    del lastNode
    # End of node "Input1"

    # Start of node "Output1"
    lastNode = app.createNode("fr.inria.built-in.Output", 1, groupgroup)
    lastNode.setLabel("Output1")
    lastNode.setPosition(642, 247)
    lastNode.setSize(104, 30)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupgroupOutput1 = lastNode

    del lastNode
    # End of node "Output1"

    # Now that all nodes are created we can connect them together, restore expressions
    groupgroupOutput1.connectInput(0, groupgroupInput1)

    param = groupgroup.getParam("i_input")
    param.setExpression("(thisGroup.burn_amt.get()/2)+(thisGroup.burn_edges.get()/2)", False, 0)
    del param
    param = groupgroup.getParam("i_lerp_result")
    param.setExpression("import numpy as np\r\n\r\ni = thisNode.i_input.get()\r\n\r\ni0 = thisNode.i_input_range.get()[0]\r\ni1 = thisNode.i_input_range.get()[1]\r\n\r\nr0 = thisNode.i_lerp_range.get()[0]\r\nr1 = thisNode.i_lerp_range.get()[1]\r\n\r\nir = [i0, i1]\r\nlr = [r0, r1]\r\n\r\ny_new = np.interp(i, ir, lr)\r\nret = y_new\r\n\r\n\r\n", True, 0)
    del param
    param = groupgroup.getParam("f_lerp_result")
    param.setExpression("import numpy as np\r\n\r\ni = thisNode.f_input.get()\r\n\r\ni0 = thisNode.f_input_range.get()[0]\r\ni1 = thisNode.f_input_range.get()[1]\r\n\r\nr0 = thisNode.f_lerp_range.get()[0]\r\nr1 = thisNode.f_lerp_range.get()[1]\r\n\r\nir = [i0, i1]\r\nlr = [r0, r1]\r\n\r\ny_new = np.interp(i, ir, lr)\r\nret = y_new\r\n\r\n\r\n", True, 0)
    del param

    # Start of node "SeGrain1_before"
    lastNode = app.createNode("net.sf.openfx.SeGrain", 1, group)
    lastNode.setScriptName("SeGrain1_before")
    lastNode.setLabel("SeGrain1_before")
    lastNode.setPosition(1848, 603)
    lastNode.setSize(80, 38)
    lastNode.setColor(0.75, 0.75, 0.75)
    groupSeGrain1_before = lastNode

    param = lastNode.getParam("grainPresets")
    if param is not None:
        param.set("Kodak 5217")
        del param

    param = lastNode.getParam("grainSizeAll")
    if param is not None:
        param.setValue(12.8503, 0)
        del param

    param = lastNode.getParam("grainSizeRed")
    if param is not None:
        param.setValue(3, 0)
        del param

    param = lastNode.getParam("grainSizeGreen")
    if param is not None:
        param.setValue(3, 0)
        del param

    param = lastNode.getParam("grainSizeBlue")
    if param is not None:
        param.setValue(3, 0)
        del param

    param = lastNode.getParam("grainIrregularityRed")
    if param is not None:
        param.setValue(0.538, 0)
        del param

    param = lastNode.getParam("grainIrregularityGreen")
    if param is not None:
        param.setValue(0.86, 0)
        del param

    param = lastNode.getParam("grainIntensityRed")
    if param is not None:
        param.setValue(0, 0)
        del param

    param = lastNode.getParam("grainIntensityGreen")
    if param is not None:
        param.setValue(0.42, 0)
        del param

    param = lastNode.getParam("grainIntensityBlue")
    if param is not None:
        param.setValue(0.87, 0)
        del param

    param = lastNode.getParam("colorCorr")
    if param is not None:
        param.setValue(1, 0)
        del param

    param = lastNode.getParam("userTextArea")
    if param is not None:
        param.setValue("<Natron>(Kodak 5248)</Natron>")
        del param

    del lastNode
    # End of node "SeGrain1_before"

    # Start of node "Lerp_grain_2"
    lastNode = app.createNode("fr.inria.built-in.Group", 1, group)
    lastNode.setScriptName("Lerp_grain_2")
    lastNode.setLabel("Lerp_grain_2")
    lastNode.setPosition(2191, 742)
    lastNode.setSize(104, 30)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupLerp_grain_2 = lastNode


    # Create the user parameters
    lastNode.Controls = lastNode.createPageParam("Controls", "Controls")
    param = lastNode.createSeparatorParam("integer_________", "integer linear interpolation")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.integer_________ = param
    del param

    param = lastNode.createIntParam("i_input", "i_input")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.i_input = param
    del param

    param = lastNode.createInt2DParam("i_input_range", "i_input_range")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)
    param.setDefaultValue(0, 1)
    param.restoreDefaultValue(1)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(100, 1)
    lastNode.i_input_range = param
    del param

    param = lastNode.createInt2DParam("i_lerp_range", "i_lerp_range")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)
    param.setDefaultValue(0, 1)
    param.restoreDefaultValue(1)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(7, 0)
    lastNode.i_lerp_range = param
    del param

    param = lastNode.createIntParam("i_lerp_result", "i_lerp_result")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(0, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(7, 0)
    lastNode.i_lerp_result = param
    del param

    param = lastNode.createSeparatorParam("float________", "float linear interpolation")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.float________ = param
    del param

    param = lastNode.createDoubleParam("f_input", "f_input")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(29.7, 0)
    lastNode.f_input = param
    del param

    param = lastNode.createDouble2DParam("f_input_range", "f_input_range")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setMinimum(-2147483648, 1)
    param.setMaximum(2147483647, 1)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(100, 1)
    lastNode.f_input_range = param
    del param

    param = lastNode.createDouble2DParam("f_lerp_range", "f_lerp_range")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setMinimum(-2147483648, 1)
    param.setMaximum(2147483647, 1)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(1, 0)
    param.setValue(40.9, 1)
    lastNode.f_lerp_range = param
    del param

    param = lastNode.createDoubleParam("f_lerp_result", "f_lerp_result")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(12.8503, 0)
    lastNode.f_lerp_result = param
    del param

    # Refresh the GUI with the newly created parameters
    lastNode.setPagesOrder(['Controls', 'Node', 'Settings'])
    lastNode.refreshUserParamsGUI()
    del lastNode
    # End of node "Lerp_grain_2"

    groupgroup = groupLerp_grain_2
    # Create all nodes in the group

    # Create the parameters of the group node the same way we did for all internal nodes
    lastNode = groupgroup
    lastNode.setColor(0.7, 0.7, 0.7)

    # Create the user parameters
    lastNode.Controls = lastNode.createPageParam("Controls", "Controls")
    param = lastNode.createSeparatorParam("integer_________", "integer linear interpolation")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.integer_________ = param
    del param

    param = lastNode.createIntParam("i_input", "i_input")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.i_input = param
    del param

    param = lastNode.createInt2DParam("i_input_range", "i_input_range")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)
    param.setDefaultValue(0, 1)
    param.restoreDefaultValue(1)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(100, 1)
    lastNode.i_input_range = param
    del param

    param = lastNode.createInt2DParam("i_lerp_range", "i_lerp_range")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)
    param.setDefaultValue(0, 1)
    param.restoreDefaultValue(1)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(7, 0)
    lastNode.i_lerp_range = param
    del param

    param = lastNode.createIntParam("i_lerp_result", "i_lerp_result")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(0, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(7, 0)
    lastNode.i_lerp_result = param
    del param

    param = lastNode.createSeparatorParam("float________", "float linear interpolation")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.float________ = param
    del param

    param = lastNode.createDoubleParam("f_input", "f_input")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(29.7, 0)
    lastNode.f_input = param
    del param

    param = lastNode.createDouble2DParam("f_input_range", "f_input_range")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setMinimum(-2147483648, 1)
    param.setMaximum(2147483647, 1)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(100, 1)
    lastNode.f_input_range = param
    del param

    param = lastNode.createDouble2DParam("f_lerp_range", "f_lerp_range")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setMinimum(-2147483648, 1)
    param.setMaximum(2147483647, 1)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(1, 0)
    param.setValue(40.9, 1)
    lastNode.f_lerp_range = param
    del param

    param = lastNode.createDoubleParam("f_lerp_result", "f_lerp_result")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(12.8503, 0)
    lastNode.f_lerp_result = param
    del param

    # Refresh the GUI with the newly created parameters
    lastNode.setPagesOrder(['Controls', 'Node', 'Settings'])
    lastNode.refreshUserParamsGUI()
    del lastNode

    # Start of node "Input1"
    lastNode = app.createNode("fr.inria.built-in.Input", 1, groupgroup)
    lastNode.setScriptName("Input1")
    lastNode.setLabel("Input1")
    lastNode.setPosition(642, 175)
    lastNode.setSize(104, 30)
    lastNode.setColor(0.3, 0.5, 0.2)
    groupgroupInput1 = lastNode

    del lastNode
    # End of node "Input1"

    # Start of node "Output1"
    lastNode = app.createNode("fr.inria.built-in.Output", 1, groupgroup)
    lastNode.setLabel("Output1")
    lastNode.setPosition(642, 247)
    lastNode.setSize(104, 30)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupgroupOutput1 = lastNode

    del lastNode
    # End of node "Output1"

    # Now that all nodes are created we can connect them together, restore expressions
    groupgroupOutput1.connectInput(0, groupgroupInput1)

    param = groupgroup.getParam("i_lerp_result")
    param.setExpression("import numpy as np\r\n\r\ni = thisNode.i_input.get()\r\n\r\ni0 = thisNode.i_input_range.get()[0]\r\ni1 = thisNode.i_input_range.get()[1]\r\n\r\nr0 = thisNode.i_lerp_range.get()[0]\r\nr1 = thisNode.i_lerp_range.get()[1]\r\n\r\nir = [i0, i1]\r\nlr = [r0, r1]\r\n\r\ny_new = np.interp(i, ir, lr)\r\nret = y_new\r\n\r\n\r\n", True, 0)
    del param
    param = groupgroup.getParam("f_input")
    param.setExpression("thisGroup.burn_amt.get()", False, 0)
    del param
    param = groupgroup.getParam("f_lerp_result")
    param.setExpression("import numpy as np\r\n\r\ni = thisNode.f_input.get()\r\n\r\ni0 = thisNode.f_input_range.get()[0]\r\ni1 = thisNode.f_input_range.get()[1]\r\n\r\nr0 = thisNode.f_lerp_range.get()[0]\r\nr1 = thisNode.f_lerp_range.get()[1]\r\n\r\nir = [i0, i1]\r\nlr = [r0, r1]\r\n\r\ny_new = np.interp(i, ir, lr)\r\nret = y_new\r\n\r\n\r\n", True, 0)
    del param

    # Start of node "Lerp1_2"
    lastNode = app.createNode("fr.inria.built-in.Group", 1, group)
    lastNode.setScriptName("Lerp1_2")
    lastNode.setLabel("Lerp1_2")
    lastNode.setPosition(2191, 799)
    lastNode.setSize(104, 30)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupLerp1_2 = lastNode


    # Create the user parameters
    lastNode.Controls = lastNode.createPageParam("Controls", "Controls")
    param = lastNode.createSeparatorParam("integer_________", "integer linear interpolation")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.integer_________ = param
    del param

    param = lastNode.createIntParam("i_input", "i_input")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.i_input = param
    del param

    param = lastNode.createInt2DParam("i_input_range", "i_input_range")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)
    param.setDefaultValue(0, 1)
    param.restoreDefaultValue(1)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(100, 1)
    lastNode.i_input_range = param
    del param

    param = lastNode.createInt2DParam("i_lerp_range", "i_lerp_range")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)
    param.setDefaultValue(0, 1)
    param.restoreDefaultValue(1)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(7, 0)
    lastNode.i_lerp_range = param
    del param

    param = lastNode.createIntParam("i_lerp_result", "i_lerp_result")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(0, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(7, 0)
    lastNode.i_lerp_result = param
    del param

    param = lastNode.createSeparatorParam("float________", "float linear interpolation")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.float________ = param
    del param

    param = lastNode.createDoubleParam("f_input", "f_input")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(53.8, 0)
    lastNode.f_input = param
    del param

    param = lastNode.createDouble2DParam("f_input_range", "f_input_range")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setMinimum(-2147483648, 1)
    param.setMaximum(2147483647, 1)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(100, 1)
    lastNode.f_input_range = param
    del param

    param = lastNode.createDouble2DParam("f_lerp_range", "f_lerp_range")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setMinimum(-2147483648, 1)
    param.setMaximum(2147483647, 1)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(1, 1)
    lastNode.f_lerp_range = param
    del param

    param = lastNode.createDoubleParam("f_lerp_result", "f_lerp_result")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(0.538, 0)
    lastNode.f_lerp_result = param
    del param

    # Refresh the GUI with the newly created parameters
    lastNode.setPagesOrder(['Controls', 'Node', 'Settings'])
    lastNode.refreshUserParamsGUI()
    del lastNode
    # End of node "Lerp1_2"

    groupgroup = groupLerp1_2
    # Create all nodes in the group

    # Create the parameters of the group node the same way we did for all internal nodes
    lastNode = groupgroup
    lastNode.setColor(0.7, 0.7, 0.7)

    # Create the user parameters
    lastNode.Controls = lastNode.createPageParam("Controls", "Controls")
    param = lastNode.createSeparatorParam("integer_________", "integer linear interpolation")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.integer_________ = param
    del param

    param = lastNode.createIntParam("i_input", "i_input")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.i_input = param
    del param

    param = lastNode.createInt2DParam("i_input_range", "i_input_range")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)
    param.setDefaultValue(0, 1)
    param.restoreDefaultValue(1)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(100, 1)
    lastNode.i_input_range = param
    del param

    param = lastNode.createInt2DParam("i_lerp_range", "i_lerp_range")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)
    param.setDefaultValue(0, 1)
    param.restoreDefaultValue(1)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(7, 0)
    lastNode.i_lerp_range = param
    del param

    param = lastNode.createIntParam("i_lerp_result", "i_lerp_result")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(0, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(7, 0)
    lastNode.i_lerp_result = param
    del param

    param = lastNode.createSeparatorParam("float________", "float linear interpolation")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.float________ = param
    del param

    param = lastNode.createDoubleParam("f_input", "f_input")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(53.8, 0)
    lastNode.f_input = param
    del param

    param = lastNode.createDouble2DParam("f_input_range", "f_input_range")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setMinimum(-2147483648, 1)
    param.setMaximum(2147483647, 1)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(100, 1)
    lastNode.f_input_range = param
    del param

    param = lastNode.createDouble2DParam("f_lerp_range", "f_lerp_range")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setMinimum(-2147483648, 1)
    param.setMaximum(2147483647, 1)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(1, 1)
    lastNode.f_lerp_range = param
    del param

    param = lastNode.createDoubleParam("f_lerp_result", "f_lerp_result")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(0.538, 0)
    lastNode.f_lerp_result = param
    del param

    # Refresh the GUI with the newly created parameters
    lastNode.setPagesOrder(['Controls', 'Node', 'Settings'])
    lastNode.refreshUserParamsGUI()
    del lastNode

    # Start of node "Input1"
    lastNode = app.createNode("fr.inria.built-in.Input", 1, groupgroup)
    lastNode.setScriptName("Input1")
    lastNode.setLabel("Input1")
    lastNode.setPosition(642, 175)
    lastNode.setSize(104, 30)
    lastNode.setColor(0.3, 0.5, 0.2)
    groupgroupInput1 = lastNode

    del lastNode
    # End of node "Input1"

    # Start of node "Output1"
    lastNode = app.createNode("fr.inria.built-in.Output", 1, groupgroup)
    lastNode.setLabel("Output1")
    lastNode.setPosition(642, 247)
    lastNode.setSize(104, 30)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupgroupOutput1 = lastNode

    del lastNode
    # End of node "Output1"

    # Now that all nodes are created we can connect them together, restore expressions
    groupgroupOutput1.connectInput(0, groupgroupInput1)

    param = groupgroup.getParam("i_lerp_result")
    param.setExpression("import numpy as np\r\n\r\ni = thisNode.i_input.get()\r\n\r\ni0 = thisNode.i_input_range.get()[0]\r\ni1 = thisNode.i_input_range.get()[1]\r\n\r\nr0 = thisNode.i_lerp_range.get()[0]\r\nr1 = thisNode.i_lerp_range.get()[1]\r\n\r\nir = [i0, i1]\r\nlr = [r0, r1]\r\n\r\ny_new = np.interp(i, ir, lr)\r\nret = y_new\r\n\r\n\r\n", True, 0)
    del param
    param = groupgroup.getParam("f_input")
    param.setExpression("(thisGroup.burn_amt.get()+thisGroup.burn_edges.get())", False, 0)
    del param
    param = groupgroup.getParam("f_lerp_result")
    param.setExpression("import numpy as np\r\n\r\ni = thisNode.f_input.get()\r\n\r\ni0 = thisNode.f_input_range.get()[0]\r\ni1 = thisNode.f_input_range.get()[1]\r\n\r\nr0 = thisNode.f_lerp_range.get()[0]\r\nr1 = thisNode.f_lerp_range.get()[1]\r\n\r\nir = [i0, i1]\r\nlr = [r0, r1]\r\n\r\ny_new = np.interp(i, ir, lr)\r\nret = y_new\r\n\r\n\r\n", True, 0)
    del param

    # Start of node "Dot18_2"
    lastNode = app.createNode("fr.inria.built-in.Dot", 1, group)
    lastNode.setScriptName("Dot18_2")
    lastNode.setLabel("Dot18_2")
    lastNode.setPosition(1881, 461)
    lastNode.setSize(15, 15)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupDot18_2 = lastNode

    del lastNode
    # End of node "Dot18_2"

    # Start of node "Dot27_2"
    lastNode = app.createNode("fr.inria.built-in.Dot", 1, group)
    lastNode.setScriptName("Dot27_2")
    lastNode.setLabel("Dot27_2")
    lastNode.setPosition(1711, 540)
    lastNode.setSize(15, 15)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupDot27_2 = lastNode

    del lastNode
    # End of node "Dot27_2"

    # Start of node "Unpremult2_2"
    lastNode = app.createNode("net.sf.openfx.Unpremult", 2, group)
    lastNode.setScriptName("Unpremult2_2")
    lastNode.setLabel("Unpremult2_2")
    lastNode.setPosition(1836, 542)
    lastNode.setSize(104, 30)
    lastNode.setColor(0.3, 0.37, 0.776)
    groupUnpremult2_2 = lastNode

    del lastNode
    # End of node "Unpremult2_2"

    # Start of node "Premult4_2"
    lastNode = app.createNode("net.sf.openfx.Premult", 2, group)
    lastNode.setScriptName("Premult4_2")
    lastNode.setLabel("Premult4_2")
    lastNode.setPosition(1831, 778)
    lastNode.setSize(104, 26)
    lastNode.setColor(0.3, 0.37, 0.776)
    groupPremult4_2 = lastNode

    del lastNode
    # End of node "Premult4_2"

    # Start of node "Backdrop6"
    lastNode = app.createNode("fr.inria.built-in.BackDrop", 1, group)
    lastNode.setScriptName("Backdrop6")
    lastNode.setLabel("Backdrop6")
    lastNode.setPosition(1183, 2113)
    lastNode.setSize(1667, 2563)
    lastNode.setColor(0.45, 0.45, 0.45)
    groupBackdrop6 = lastNode

    param = lastNode.getParam("Label")
    if param is not None:
        param.setValue("<font size=\"26\" color=\"#000000\" face=\"Duckface\">Lumpiness</font>")
        del param

    del lastNode
    # End of node "Backdrop6"

    # Start of node "Dot29"
    lastNode = app.createNode("fr.inria.built-in.Dot", 1, group)
    lastNode.setScriptName("Dot29")
    lastNode.setLabel("Dot29")
    lastNode.setPosition(1837, 1939)
    lastNode.setSize(15, 15)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupDot29 = lastNode

    del lastNode
    # End of node "Dot29"

    # Start of node "Dot30"
    lastNode = app.createNode("fr.inria.built-in.Dot", 1, group)
    lastNode.setScriptName("Dot30")
    lastNode.setLabel("Dot30")
    lastNode.setPosition(1837, 2161)
    lastNode.setSize(15, 15)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupDot30 = lastNode

    del lastNode
    # End of node "Dot30"

    # Start of node "Lerp_carmel"
    lastNode = app.createNode("fr.inria.built-in.Group", 1, group)
    lastNode.setScriptName("Lerp_carmel")
    lastNode.setLabel("Lerp_carmel")
    lastNode.setPosition(2182, 612)
    lastNode.setSize(104, 30)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupLerp_carmel = lastNode


    # Create the user parameters
    lastNode.Controls = lastNode.createPageParam("Controls", "Controls")
    param = lastNode.createSeparatorParam("integer_________", "integer linear interpolation")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.integer_________ = param
    del param

    param = lastNode.createIntParam("i_input", "i_input")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.i_input = param
    del param

    param = lastNode.createInt2DParam("i_input_range", "i_input_range")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)
    param.setDefaultValue(0, 1)
    param.restoreDefaultValue(1)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(100, 1)
    lastNode.i_input_range = param
    del param

    param = lastNode.createInt2DParam("i_lerp_range", "i_lerp_range")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)
    param.setDefaultValue(0, 1)
    param.restoreDefaultValue(1)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(7, 0)
    lastNode.i_lerp_range = param
    del param

    param = lastNode.createIntParam("i_lerp_result", "i_lerp_result")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(0, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(7, 0)
    lastNode.i_lerp_result = param
    del param

    param = lastNode.createSeparatorParam("float________", "float linear interpolation")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.float________ = param
    del param

    param = lastNode.createDoubleParam("f_input", "f_input")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(0, 0)
    lastNode.f_input = param
    del param

    param = lastNode.createDouble2DParam("f_input_range", "f_input_range")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setMinimum(-2147483648, 1)
    param.setMaximum(2147483647, 1)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(100, 1)
    lastNode.f_input_range = param
    del param

    param = lastNode.createDouble2DParam("f_lerp_range", "f_lerp_range")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setMinimum(-2147483648, 1)
    param.setMaximum(2147483647, 1)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(1, 0)
    param.setValue(-1, 1)
    lastNode.f_lerp_range = param
    del param

    param = lastNode.createDoubleParam("f_lerp_result", "f_lerp_result")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(1, 0)
    lastNode.f_lerp_result = param
    del param

    # Refresh the GUI with the newly created parameters
    lastNode.setPagesOrder(['Controls', 'Node', 'Settings'])
    lastNode.refreshUserParamsGUI()
    del lastNode
    # End of node "Lerp_carmel"

    groupgroup = groupLerp_carmel
    # Create all nodes in the group

    # Create the parameters of the group node the same way we did for all internal nodes
    lastNode = groupgroup
    lastNode.setColor(0.7, 0.7, 0.7)

    # Create the user parameters
    lastNode.Controls = lastNode.createPageParam("Controls", "Controls")
    param = lastNode.createSeparatorParam("integer_________", "integer linear interpolation")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.integer_________ = param
    del param

    param = lastNode.createIntParam("i_input", "i_input")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.i_input = param
    del param

    param = lastNode.createInt2DParam("i_input_range", "i_input_range")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)
    param.setDefaultValue(0, 1)
    param.restoreDefaultValue(1)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(100, 1)
    lastNode.i_input_range = param
    del param

    param = lastNode.createInt2DParam("i_lerp_range", "i_lerp_range")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)
    param.setDefaultValue(0, 1)
    param.restoreDefaultValue(1)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(7, 0)
    lastNode.i_lerp_range = param
    del param

    param = lastNode.createIntParam("i_lerp_result", "i_lerp_result")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(0, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(7, 0)
    lastNode.i_lerp_result = param
    del param

    param = lastNode.createSeparatorParam("float________", "float linear interpolation")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.float________ = param
    del param

    param = lastNode.createDoubleParam("f_input", "f_input")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(0, 0)
    lastNode.f_input = param
    del param

    param = lastNode.createDouble2DParam("f_input_range", "f_input_range")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setMinimum(-2147483648, 1)
    param.setMaximum(2147483647, 1)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(100, 1)
    lastNode.f_input_range = param
    del param

    param = lastNode.createDouble2DParam("f_lerp_range", "f_lerp_range")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setMinimum(-2147483648, 1)
    param.setMaximum(2147483647, 1)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(1, 0)
    param.setValue(-1, 1)
    lastNode.f_lerp_range = param
    del param

    param = lastNode.createDoubleParam("f_lerp_result", "f_lerp_result")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(1, 0)
    lastNode.f_lerp_result = param
    del param

    # Refresh the GUI with the newly created parameters
    lastNode.setPagesOrder(['Controls', 'Node', 'Settings'])
    lastNode.refreshUserParamsGUI()
    del lastNode

    # Start of node "Input1"
    lastNode = app.createNode("fr.inria.built-in.Input", 1, groupgroup)
    lastNode.setScriptName("Input1")
    lastNode.setLabel("Input1")
    lastNode.setPosition(642, 175)
    lastNode.setSize(104, 30)
    lastNode.setColor(0.3, 0.5, 0.2)
    groupgroupInput1 = lastNode

    del lastNode
    # End of node "Input1"

    # Start of node "Output1"
    lastNode = app.createNode("fr.inria.built-in.Output", 1, groupgroup)
    lastNode.setLabel("Output1")
    lastNode.setPosition(642, 247)
    lastNode.setSize(104, 30)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupgroupOutput1 = lastNode

    del lastNode
    # End of node "Output1"

    # Now that all nodes are created we can connect them together, restore expressions
    groupgroupOutput1.connectInput(0, groupgroupInput1)

    param = groupgroup.getParam("i_lerp_result")
    param.setExpression("import numpy as np\r\n\r\ni = thisNode.i_input.get()\r\n\r\ni0 = thisNode.i_input_range.get()[0]\r\ni1 = thisNode.i_input_range.get()[1]\r\n\r\nr0 = thisNode.i_lerp_range.get()[0]\r\nr1 = thisNode.i_lerp_range.get()[1]\r\n\r\nir = [i0, i1]\r\nlr = [r0, r1]\r\n\r\ny_new = np.interp(i, ir, lr)\r\nret = y_new\r\n\r\n\r\n", True, 0)
    del param
    param = groupgroup.getParam("f_input")
    param.setExpression("thisGroup.caramelization.get()", False, 0)
    del param
    param = groupgroup.getParam("f_lerp_result")
    param.setExpression("import numpy as np\r\n\r\ni = thisNode.f_input.get()\r\n\r\ni0 = thisNode.f_input_range.get()[0]\r\ni1 = thisNode.f_input_range.get()[1]\r\n\r\nr0 = thisNode.f_lerp_range.get()[0]\r\nr1 = thisNode.f_lerp_range.get()[1]\r\n\r\nir = [i0, i1]\r\nlr = [r0, r1]\r\n\r\ny_new = np.interp(i, ir, lr)\r\nret = y_new\r\n\r\n\r\n", True, 0)
    del param

    # Start of node "Lerp_carmel_2"
    lastNode = app.createNode("fr.inria.built-in.Group", 1, group)
    lastNode.setScriptName("Lerp_carmel_2")
    lastNode.setLabel("Lerp_carmel_2")
    lastNode.setPosition(2165, 546)
    lastNode.setSize(104, 30)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupLerp_carmel_2 = lastNode


    # Create the user parameters
    lastNode.Controls = lastNode.createPageParam("Controls", "Controls")
    param = lastNode.createSeparatorParam("integer_________", "integer linear interpolation")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.integer_________ = param
    del param

    param = lastNode.createIntParam("i_input", "i_input")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.i_input = param
    del param

    param = lastNode.createInt2DParam("i_input_range", "i_input_range")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)
    param.setDefaultValue(0, 1)
    param.restoreDefaultValue(1)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(100, 1)
    lastNode.i_input_range = param
    del param

    param = lastNode.createInt2DParam("i_lerp_range", "i_lerp_range")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)
    param.setDefaultValue(0, 1)
    param.restoreDefaultValue(1)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(7, 0)
    lastNode.i_lerp_range = param
    del param

    param = lastNode.createIntParam("i_lerp_result", "i_lerp_result")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(0, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(7, 0)
    lastNode.i_lerp_result = param
    del param

    param = lastNode.createSeparatorParam("float________", "float linear interpolation")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.float________ = param
    del param

    param = lastNode.createDoubleParam("f_input", "f_input")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(0, 0)
    lastNode.f_input = param
    del param

    param = lastNode.createDouble2DParam("f_input_range", "f_input_range")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setMinimum(-2147483648, 1)
    param.setMaximum(2147483647, 1)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(100, 1)
    lastNode.f_input_range = param
    del param

    param = lastNode.createDouble2DParam("f_lerp_range", "f_lerp_range")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setMinimum(-2147483648, 1)
    param.setMaximum(2147483647, 1)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(1, 1)
    lastNode.f_lerp_range = param
    del param

    param = lastNode.createDoubleParam("f_lerp_result", "f_lerp_result")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(0, 0)
    lastNode.f_lerp_result = param
    del param

    # Refresh the GUI with the newly created parameters
    lastNode.setPagesOrder(['Controls', 'Node', 'Settings'])
    lastNode.refreshUserParamsGUI()
    del lastNode
    # End of node "Lerp_carmel_2"

    groupgroup = groupLerp_carmel_2
    # Create all nodes in the group

    # Create the parameters of the group node the same way we did for all internal nodes
    lastNode = groupgroup
    lastNode.setColor(0.7, 0.7, 0.7)

    # Create the user parameters
    lastNode.Controls = lastNode.createPageParam("Controls", "Controls")
    param = lastNode.createSeparatorParam("integer_________", "integer linear interpolation")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.integer_________ = param
    del param

    param = lastNode.createIntParam("i_input", "i_input")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.i_input = param
    del param

    param = lastNode.createInt2DParam("i_input_range", "i_input_range")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)
    param.setDefaultValue(0, 1)
    param.restoreDefaultValue(1)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(100, 1)
    lastNode.i_input_range = param
    del param

    param = lastNode.createInt2DParam("i_lerp_range", "i_lerp_range")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)
    param.setDefaultValue(0, 1)
    param.restoreDefaultValue(1)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(7, 0)
    lastNode.i_lerp_range = param
    del param

    param = lastNode.createIntParam("i_lerp_result", "i_lerp_result")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(0, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(7, 0)
    lastNode.i_lerp_result = param
    del param

    param = lastNode.createSeparatorParam("float________", "float linear interpolation")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.float________ = param
    del param

    param = lastNode.createDoubleParam("f_input", "f_input")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(0, 0)
    lastNode.f_input = param
    del param

    param = lastNode.createDouble2DParam("f_input_range", "f_input_range")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setMinimum(-2147483648, 1)
    param.setMaximum(2147483647, 1)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(100, 1)
    lastNode.f_input_range = param
    del param

    param = lastNode.createDouble2DParam("f_lerp_range", "f_lerp_range")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setMinimum(-2147483648, 1)
    param.setMaximum(2147483647, 1)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(1, 1)
    lastNode.f_lerp_range = param
    del param

    param = lastNode.createDoubleParam("f_lerp_result", "f_lerp_result")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(0, 0)
    lastNode.f_lerp_result = param
    del param

    # Refresh the GUI with the newly created parameters
    lastNode.setPagesOrder(['Controls', 'Node', 'Settings'])
    lastNode.refreshUserParamsGUI()
    del lastNode

    # Start of node "Input1"
    lastNode = app.createNode("fr.inria.built-in.Input", 1, groupgroup)
    lastNode.setScriptName("Input1")
    lastNode.setLabel("Input1")
    lastNode.setPosition(642, 175)
    lastNode.setSize(104, 30)
    lastNode.setColor(0.3, 0.5, 0.2)
    groupgroupInput1 = lastNode

    del lastNode
    # End of node "Input1"

    # Start of node "Output1"
    lastNode = app.createNode("fr.inria.built-in.Output", 1, groupgroup)
    lastNode.setLabel("Output1")
    lastNode.setPosition(642, 247)
    lastNode.setSize(104, 30)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupgroupOutput1 = lastNode

    del lastNode
    # End of node "Output1"

    # Now that all nodes are created we can connect them together, restore expressions
    groupgroupOutput1.connectInput(0, groupgroupInput1)

    param = groupgroup.getParam("i_lerp_result")
    param.setExpression("import numpy as np\r\n\r\ni = thisNode.i_input.get()\r\n\r\ni0 = thisNode.i_input_range.get()[0]\r\ni1 = thisNode.i_input_range.get()[1]\r\n\r\nr0 = thisNode.i_lerp_range.get()[0]\r\nr1 = thisNode.i_lerp_range.get()[1]\r\n\r\nir = [i0, i1]\r\nlr = [r0, r1]\r\n\r\ny_new = np.interp(i, ir, lr)\r\nret = y_new\r\n\r\n\r\n", True, 0)
    del param
    param = groupgroup.getParam("f_input")
    param.setExpression("thisGroup.caramelization.get()", False, 0)
    del param
    param = groupgroup.getParam("f_lerp_result")
    param.setExpression("import numpy as np\r\n\r\ni = thisNode.f_input.get()\r\n\r\ni0 = thisNode.f_input_range.get()[0]\r\ni1 = thisNode.f_input_range.get()[1]\r\n\r\nr0 = thisNode.f_lerp_range.get()[0]\r\nr1 = thisNode.f_lerp_range.get()[1]\r\n\r\nir = [i0, i1]\r\nlr = [r0, r1]\r\n\r\ny_new = np.interp(i, ir, lr)\r\nret = y_new\r\n\r\n\r\n", True, 0)
    del param

    # Start of node "Lerp2_carmel"
    lastNode = app.createNode("fr.inria.built-in.Group", 1, group)
    lastNode.setScriptName("Lerp2_carmel")
    lastNode.setLabel("Lerp2_carmel")
    lastNode.setPosition(2130, 5040)
    lastNode.setSize(104, 30)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupLerp2_carmel = lastNode


    # Create the user parameters
    lastNode.Controls = lastNode.createPageParam("Controls", "Controls")
    param = lastNode.createSeparatorParam("integer_________", "integer linear interpolation")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.integer_________ = param
    del param

    param = lastNode.createIntParam("i_input", "i_input")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.i_input = param
    del param

    param = lastNode.createInt2DParam("i_input_range", "i_input_range")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)
    param.setDefaultValue(0, 1)
    param.restoreDefaultValue(1)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(100, 1)
    lastNode.i_input_range = param
    del param

    param = lastNode.createInt2DParam("i_lerp_range", "i_lerp_range")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)
    param.setDefaultValue(0, 1)
    param.restoreDefaultValue(1)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(7, 0)
    lastNode.i_lerp_range = param
    del param

    param = lastNode.createIntParam("i_lerp_result", "i_lerp_result")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(0, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(7, 0)
    lastNode.i_lerp_result = param
    del param

    param = lastNode.createSeparatorParam("float________", "float linear interpolation")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.float________ = param
    del param

    param = lastNode.createDoubleParam("f_input", "f_input")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(27, 0)
    lastNode.f_input = param
    del param

    param = lastNode.createDouble2DParam("f_input_range", "f_input_range")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setMinimum(-2147483648, 1)
    param.setMaximum(2147483647, 1)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(100, 1)
    lastNode.f_input_range = param
    del param

    param = lastNode.createDouble2DParam("f_lerp_range", "f_lerp_range")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setMinimum(-2147483648, 1)
    param.setMaximum(2147483647, 1)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(1, 1)
    lastNode.f_lerp_range = param
    del param

    param = lastNode.createDoubleParam("f_lerp_result", "f_lerp_result")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(0.27, 0)
    lastNode.f_lerp_result = param
    del param

    # Refresh the GUI with the newly created parameters
    lastNode.setPagesOrder(['Controls', 'Node', 'Settings'])
    lastNode.refreshUserParamsGUI()
    del lastNode
    # End of node "Lerp2_carmel"

    groupgroup = groupLerp2_carmel
    # Create all nodes in the group

    # Create the parameters of the group node the same way we did for all internal nodes
    lastNode = groupgroup
    lastNode.setColor(0.7, 0.7, 0.7)

    # Create the user parameters
    lastNode.Controls = lastNode.createPageParam("Controls", "Controls")
    param = lastNode.createSeparatorParam("integer_________", "integer linear interpolation")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.integer_________ = param
    del param

    param = lastNode.createIntParam("i_input", "i_input")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.i_input = param
    del param

    param = lastNode.createInt2DParam("i_input_range", "i_input_range")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)
    param.setDefaultValue(0, 1)
    param.restoreDefaultValue(1)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(100, 1)
    lastNode.i_input_range = param
    del param

    param = lastNode.createInt2DParam("i_lerp_range", "i_lerp_range")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)
    param.setDefaultValue(0, 1)
    param.restoreDefaultValue(1)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(7, 0)
    lastNode.i_lerp_range = param
    del param

    param = lastNode.createIntParam("i_lerp_result", "i_lerp_result")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(0, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(7, 0)
    lastNode.i_lerp_result = param
    del param

    param = lastNode.createSeparatorParam("float________", "float linear interpolation")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.float________ = param
    del param

    param = lastNode.createDoubleParam("f_input", "f_input")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(27, 0)
    lastNode.f_input = param
    del param

    param = lastNode.createDouble2DParam("f_input_range", "f_input_range")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setMinimum(-2147483648, 1)
    param.setMaximum(2147483647, 1)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(100, 1)
    lastNode.f_input_range = param
    del param

    param = lastNode.createDouble2DParam("f_lerp_range", "f_lerp_range")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setMinimum(-2147483648, 1)
    param.setMaximum(2147483647, 1)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(1, 1)
    lastNode.f_lerp_range = param
    del param

    param = lastNode.createDoubleParam("f_lerp_result", "f_lerp_result")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(0.27, 0)
    lastNode.f_lerp_result = param
    del param

    # Refresh the GUI with the newly created parameters
    lastNode.setPagesOrder(['Controls', 'Node', 'Settings'])
    lastNode.refreshUserParamsGUI()
    del lastNode

    # Start of node "Input1"
    lastNode = app.createNode("fr.inria.built-in.Input", 1, groupgroup)
    lastNode.setScriptName("Input1")
    lastNode.setLabel("Input1")
    lastNode.setPosition(642, 175)
    lastNode.setSize(104, 30)
    lastNode.setColor(0.3, 0.5, 0.2)
    groupgroupInput1 = lastNode

    del lastNode
    # End of node "Input1"

    # Start of node "Output1"
    lastNode = app.createNode("fr.inria.built-in.Output", 1, groupgroup)
    lastNode.setLabel("Output1")
    lastNode.setPosition(642, 247)
    lastNode.setSize(104, 30)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupgroupOutput1 = lastNode

    del lastNode
    # End of node "Output1"

    # Now that all nodes are created we can connect them together, restore expressions
    groupgroupOutput1.connectInput(0, groupgroupInput1)

    param = groupgroup.getParam("i_lerp_result")
    param.setExpression("import numpy as np\r\n\r\ni = thisNode.i_input.get()\r\n\r\ni0 = thisNode.i_input_range.get()[0]\r\ni1 = thisNode.i_input_range.get()[1]\r\n\r\nr0 = thisNode.i_lerp_range.get()[0]\r\nr1 = thisNode.i_lerp_range.get()[1]\r\n\r\nir = [i0, i1]\r\nlr = [r0, r1]\r\n\r\ny_new = np.interp(i, ir, lr)\r\nret = y_new\r\n\r\n\r\n", True, 0)
    del param
    param = groupgroup.getParam("f_input")
    param.setExpression("thisGroup.caramelization2.get()", False, 0)
    del param
    param = groupgroup.getParam("f_lerp_result")
    param.setExpression("import numpy as np\r\n\r\ni = thisNode.f_input.get()\r\n\r\ni0 = thisNode.f_input_range.get()[0]\r\ni1 = thisNode.f_input_range.get()[1]\r\n\r\nr0 = thisNode.f_lerp_range.get()[0]\r\nr1 = thisNode.f_lerp_range.get()[1]\r\n\r\nir = [i0, i1]\r\nlr = [r0, r1]\r\n\r\ny_new = np.interp(i, ir, lr)\r\nret = y_new\r\n\r\n\r\n", True, 0)
    del param

    # Start of node "Lerp3_carmel"
    lastNode = app.createNode("fr.inria.built-in.Group", 1, group)
    lastNode.setScriptName("Lerp3_carmel")
    lastNode.setLabel("Lerp3_carmel")
    lastNode.setPosition(2130, 5076)
    lastNode.setSize(104, 30)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupLerp3_carmel = lastNode


    # Create the user parameters
    lastNode.Controls = lastNode.createPageParam("Controls", "Controls")
    param = lastNode.createSeparatorParam("integer_________", "integer linear interpolation")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.integer_________ = param
    del param

    param = lastNode.createIntParam("i_input", "i_input")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.i_input = param
    del param

    param = lastNode.createInt2DParam("i_input_range", "i_input_range")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)
    param.setDefaultValue(0, 1)
    param.restoreDefaultValue(1)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(100, 1)
    lastNode.i_input_range = param
    del param

    param = lastNode.createInt2DParam("i_lerp_range", "i_lerp_range")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)
    param.setDefaultValue(0, 1)
    param.restoreDefaultValue(1)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(7, 0)
    lastNode.i_lerp_range = param
    del param

    param = lastNode.createIntParam("i_lerp_result", "i_lerp_result")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(0, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(7, 0)
    lastNode.i_lerp_result = param
    del param

    param = lastNode.createSeparatorParam("float________", "float linear interpolation")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.float________ = param
    del param

    param = lastNode.createDoubleParam("f_input", "f_input")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(27, 0)
    lastNode.f_input = param
    del param

    param = lastNode.createDouble2DParam("f_input_range", "f_input_range")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setMinimum(-2147483648, 1)
    param.setMaximum(2147483647, 1)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(100, 1)
    lastNode.f_input_range = param
    del param

    param = lastNode.createDouble2DParam("f_lerp_range", "f_lerp_range")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setMinimum(-2147483648, 1)
    param.setMaximum(2147483647, 1)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(1, 0)
    param.setValue(-0.999, 1)
    lastNode.f_lerp_range = param
    del param

    param = lastNode.createDoubleParam("f_lerp_result", "f_lerp_result")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(0.46027, 0)
    lastNode.f_lerp_result = param
    del param

    # Refresh the GUI with the newly created parameters
    lastNode.setPagesOrder(['Controls', 'Node', 'Settings'])
    lastNode.refreshUserParamsGUI()
    del lastNode
    # End of node "Lerp3_carmel"

    groupgroup = groupLerp3_carmel
    # Create all nodes in the group

    # Create the parameters of the group node the same way we did for all internal nodes
    lastNode = groupgroup
    lastNode.setColor(0.7, 0.7, 0.7)

    # Create the user parameters
    lastNode.Controls = lastNode.createPageParam("Controls", "Controls")
    param = lastNode.createSeparatorParam("integer_________", "integer linear interpolation")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.integer_________ = param
    del param

    param = lastNode.createIntParam("i_input", "i_input")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.i_input = param
    del param

    param = lastNode.createInt2DParam("i_input_range", "i_input_range")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)
    param.setDefaultValue(0, 1)
    param.restoreDefaultValue(1)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(100, 1)
    lastNode.i_input_range = param
    del param

    param = lastNode.createInt2DParam("i_lerp_range", "i_lerp_range")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)
    param.setDefaultValue(0, 1)
    param.restoreDefaultValue(1)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(7, 0)
    lastNode.i_lerp_range = param
    del param

    param = lastNode.createIntParam("i_lerp_result", "i_lerp_result")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(0, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(7, 0)
    lastNode.i_lerp_result = param
    del param

    param = lastNode.createSeparatorParam("float________", "float linear interpolation")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.float________ = param
    del param

    param = lastNode.createDoubleParam("f_input", "f_input")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(27, 0)
    lastNode.f_input = param
    del param

    param = lastNode.createDouble2DParam("f_input_range", "f_input_range")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setMinimum(-2147483648, 1)
    param.setMaximum(2147483647, 1)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(100, 1)
    lastNode.f_input_range = param
    del param

    param = lastNode.createDouble2DParam("f_lerp_range", "f_lerp_range")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setMinimum(-2147483648, 1)
    param.setMaximum(2147483647, 1)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(1, 0)
    param.setValue(-0.999, 1)
    lastNode.f_lerp_range = param
    del param

    param = lastNode.createDoubleParam("f_lerp_result", "f_lerp_result")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(0.46027, 0)
    lastNode.f_lerp_result = param
    del param

    # Refresh the GUI with the newly created parameters
    lastNode.setPagesOrder(['Controls', 'Node', 'Settings'])
    lastNode.refreshUserParamsGUI()
    del lastNode

    # Start of node "Input1"
    lastNode = app.createNode("fr.inria.built-in.Input", 1, groupgroup)
    lastNode.setScriptName("Input1")
    lastNode.setLabel("Input1")
    lastNode.setPosition(642, 175)
    lastNode.setSize(104, 30)
    lastNode.setColor(0.3, 0.5, 0.2)
    groupgroupInput1 = lastNode

    del lastNode
    # End of node "Input1"

    # Start of node "Output1"
    lastNode = app.createNode("fr.inria.built-in.Output", 1, groupgroup)
    lastNode.setLabel("Output1")
    lastNode.setPosition(642, 247)
    lastNode.setSize(104, 30)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupgroupOutput1 = lastNode

    del lastNode
    # End of node "Output1"

    # Now that all nodes are created we can connect them together, restore expressions
    groupgroupOutput1.connectInput(0, groupgroupInput1)

    param = groupgroup.getParam("i_lerp_result")
    param.setExpression("import numpy as np\r\n\r\ni = thisNode.i_input.get()\r\n\r\ni0 = thisNode.i_input_range.get()[0]\r\ni1 = thisNode.i_input_range.get()[1]\r\n\r\nr0 = thisNode.i_lerp_range.get()[0]\r\nr1 = thisNode.i_lerp_range.get()[1]\r\n\r\nir = [i0, i1]\r\nlr = [r0, r1]\r\n\r\ny_new = np.interp(i, ir, lr)\r\nret = y_new\r\n\r\n\r\n", True, 0)
    del param
    param = groupgroup.getParam("f_input")
    param.setExpression("thisGroup.caramelization2.get()", False, 0)
    del param
    param = groupgroup.getParam("f_lerp_result")
    param.setExpression("import numpy as np\r\n\r\ni = thisNode.f_input.get()\r\n\r\ni0 = thisNode.f_input_range.get()[0]\r\ni1 = thisNode.f_input_range.get()[1]\r\n\r\nr0 = thisNode.f_lerp_range.get()[0]\r\nr1 = thisNode.f_lerp_range.get()[1]\r\n\r\nir = [i0, i1]\r\nlr = [r0, r1]\r\n\r\ny_new = np.interp(i, ir, lr)\r\nret = y_new\r\n\r\n\r\n", True, 0)
    del param

    # Start of node "Grade1"
    lastNode = app.createNode("net.sf.openfx.GradePlugin", 2, group)
    lastNode.setScriptName("Grade1")
    lastNode.setLabel("Grade1")
    lastNode.setPosition(1831, 890)
    lastNode.setSize(104, 26)
    lastNode.setColor(0.48, 0.66, 1)
    groupGrade1 = lastNode

    param = lastNode.getParam("white")
    if param is not None:
        param.setValue(0.7030000000000001, 0)
        param.setValue(0.7030000000000001, 1)
        param.setValue(0.7030000000000001, 2)
        param.setValue(0.7030000000000001, 3)
        del param

    param = lastNode.getParam("multiply")
    if param is not None:
        param.setValue(1.723, 0)
        param.setValue(1.723, 1)
        param.setValue(1.723, 2)
        param.setValue(1.723, 3)
        del param

    param = lastNode.getParam("gamma")
    if param is not None:
        param.setValue(0.7030000000000001, 0)
        param.setValue(0.7030000000000001, 1)
        param.setValue(0.7030000000000001, 2)
        param.setValue(0.7030000000000001, 3)
        del param

    param = lastNode.getParam("premult")
    if param is not None:
        param.setValue(True)
        del param

    param = lastNode.getParam("premultChanged")
    if param is not None:
        param.setValue(True)
        del param

    del lastNode
    # End of node "Grade1"

    # Start of node "Lexpand"
    lastNode = app.createNode("fr.inria.built-in.Group", 1, group)
    lastNode.setScriptName("Lexpand")
    lastNode.setLabel("Lexpand")
    lastNode.setPosition(2012, 1718)
    lastNode.setSize(104, 30)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupLexpand = lastNode


    # Create the user parameters
    lastNode.Controls = lastNode.createPageParam("Controls", "Controls")
    param = lastNode.createSeparatorParam("integer_________", "integer linear interpolation")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.integer_________ = param
    del param

    param = lastNode.createIntParam("i_input", "i_input")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(3, 0)
    lastNode.i_input = param
    del param

    param = lastNode.createInt2DParam("i_input_range", "i_input_range")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)
    param.setDefaultValue(0, 1)
    param.restoreDefaultValue(1)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(2, 0)
    param.setValue(3, 1)
    lastNode.i_input_range = param
    del param

    param = lastNode.createInt2DParam("i_lerp_range", "i_lerp_range")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)
    param.setDefaultValue(0, 1)
    param.restoreDefaultValue(1)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(1, 1)
    lastNode.i_lerp_range = param
    del param

    param = lastNode.createIntParam("i_lerp_result", "i_lerp_result")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(0, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(1, 0)
    lastNode.i_lerp_result = param
    del param

    param = lastNode.createSeparatorParam("float________", "float linear interpolation")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.float________ = param
    del param

    param = lastNode.createDoubleParam("f_input", "f_input")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(60, 0)
    lastNode.f_input = param
    del param

    param = lastNode.createDouble2DParam("f_input_range", "f_input_range")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setMinimum(-2147483648, 1)
    param.setMaximum(2147483647, 1)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(100, 1)
    lastNode.f_input_range = param
    del param

    param = lastNode.createDouble2DParam("f_lerp_range", "f_lerp_range")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setMinimum(-2147483648, 1)
    param.setMaximum(2147483647, 1)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(0.8, 0)
    param.setValue(1.2, 1)
    lastNode.f_lerp_range = param
    del param

    param = lastNode.createDoubleParam("f_lerp_result", "f_lerp_result")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(1.04, 0)
    lastNode.f_lerp_result = param
    del param

    # Refresh the GUI with the newly created parameters
    lastNode.setPagesOrder(['Controls', 'Node', 'Settings'])
    lastNode.refreshUserParamsGUI()
    del lastNode
    # End of node "Lexpand"

    groupgroup = groupLexpand
    # Create all nodes in the group

    # Create the parameters of the group node the same way we did for all internal nodes
    lastNode = groupgroup
    lastNode.setColor(0.7, 0.7, 0.7)

    # Create the user parameters
    lastNode.Controls = lastNode.createPageParam("Controls", "Controls")
    param = lastNode.createSeparatorParam("integer_________", "integer linear interpolation")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.integer_________ = param
    del param

    param = lastNode.createIntParam("i_input", "i_input")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(3, 0)
    lastNode.i_input = param
    del param

    param = lastNode.createInt2DParam("i_input_range", "i_input_range")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)
    param.setDefaultValue(0, 1)
    param.restoreDefaultValue(1)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(2, 0)
    param.setValue(3, 1)
    lastNode.i_input_range = param
    del param

    param = lastNode.createInt2DParam("i_lerp_range", "i_lerp_range")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)
    param.setDefaultValue(0, 1)
    param.restoreDefaultValue(1)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(1, 1)
    lastNode.i_lerp_range = param
    del param

    param = lastNode.createIntParam("i_lerp_result", "i_lerp_result")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(0, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(1, 0)
    lastNode.i_lerp_result = param
    del param

    param = lastNode.createSeparatorParam("float________", "float linear interpolation")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.float________ = param
    del param

    param = lastNode.createDoubleParam("f_input", "f_input")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(60, 0)
    lastNode.f_input = param
    del param

    param = lastNode.createDouble2DParam("f_input_range", "f_input_range")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setMinimum(-2147483648, 1)
    param.setMaximum(2147483647, 1)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(100, 1)
    lastNode.f_input_range = param
    del param

    param = lastNode.createDouble2DParam("f_lerp_range", "f_lerp_range")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setMinimum(-2147483648, 1)
    param.setMaximum(2147483647, 1)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(0.8, 0)
    param.setValue(1.2, 1)
    lastNode.f_lerp_range = param
    del param

    param = lastNode.createDoubleParam("f_lerp_result", "f_lerp_result")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(1.04, 0)
    lastNode.f_lerp_result = param
    del param

    # Refresh the GUI with the newly created parameters
    lastNode.setPagesOrder(['Controls', 'Node', 'Settings'])
    lastNode.refreshUserParamsGUI()
    del lastNode

    # Start of node "Input1"
    lastNode = app.createNode("fr.inria.built-in.Input", 1, groupgroup)
    lastNode.setScriptName("Input1")
    lastNode.setLabel("Input1")
    lastNode.setPosition(642, 175)
    lastNode.setSize(104, 30)
    lastNode.setColor(0.3, 0.5, 0.2)
    groupgroupInput1 = lastNode

    del lastNode
    # End of node "Input1"

    # Start of node "Output1"
    lastNode = app.createNode("fr.inria.built-in.Output", 1, groupgroup)
    lastNode.setLabel("Output1")
    lastNode.setPosition(642, 247)
    lastNode.setSize(104, 30)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupgroupOutput1 = lastNode

    del lastNode
    # End of node "Output1"

    # Now that all nodes are created we can connect them together, restore expressions
    groupgroupOutput1.connectInput(0, groupgroupInput1)

    param = groupgroup.getParam("i_input")
    param.setExpression("thisGroup.liquify.get()", False, 0)
    del param
    param = groupgroup.getParam("i_lerp_result")
    param.setExpression("import numpy as np\r\n\r\ni = thisNode.i_input.get()\r\n\r\ni0 = thisNode.i_input_range.get()[0]\r\ni1 = thisNode.i_input_range.get()[1]\r\n\r\nr0 = thisNode.i_lerp_range.get()[0]\r\nr1 = thisNode.i_lerp_range.get()[1]\r\n\r\nir = [i0, i1]\r\nlr = [r0, r1]\r\n\r\ny_new = np.interp(i, ir, lr)\r\nret = y_new\r\n\r\n\r\n", True, 0)
    del param
    param = groupgroup.getParam("f_input")
    param.setExpression("thisGroup.expand.get()", False, 0)
    del param
    param = groupgroup.getParam("f_lerp_result")
    param.setExpression("import numpy as np\r\n\r\ni = thisNode.f_input.get()\r\n\r\ni0 = thisNode.f_input_range.get()[0]\r\ni1 = thisNode.f_input_range.get()[1]\r\n\r\nr0 = thisNode.f_lerp_range.get()[0]\r\nr1 = thisNode.f_lerp_range.get()[1]\r\n\r\nir = [i0, i1]\r\nlr = [r0, r1]\r\n\r\ny_new = np.interp(i, ir, lr)\r\nret = round(y_new,2)\r\n\r\n\r\n", True, 0)
    del param

    # Start of node "Grade3"
    lastNode = app.createNode("net.sf.openfx.GradePlugin", 2, group)
    lastNode.setScriptName("Grade3")
    lastNode.setLabel("Grade3")
    lastNode.setPosition(1671, 5182)
    lastNode.setSize(104, 26)
    lastNode.setColor(0.48, 0.66, 1)
    groupGrade3 = lastNode

    param = lastNode.getParam("white")
    if param is not None:
        param.setValue(1.0755, 0)
        param.setValue(1.0755, 1)
        param.setValue(1.0755, 2)
        param.setValue(1.0755, 3)
        del param

    param = lastNode.getParam("gamma")
    if param is not None:
        param.setValue(0.9245, 0)
        param.setValue(0.9245, 1)
        param.setValue(0.9245, 2)
        param.setValue(0.9245, 3)
        del param

    param = lastNode.getParam("premult")
    if param is not None:
        param.setValue(True)
        del param

    param = lastNode.getParam("maskInvert")
    if param is not None:
        param.setValue(True)
        del param

    param = lastNode.getParam("enableMask_Mask")
    if param is not None:
        param.setValue(True)
        del param

    del lastNode
    # End of node "Grade3"

    # Start of node "Grade3_2"
    lastNode = app.createNode("net.sf.openfx.GradePlugin", 2, group)
    lastNode.setScriptName("Grade3_2")
    lastNode.setLabel("Grade3_2")
    lastNode.setPosition(1671, 5230)
    lastNode.setSize(104, 26)
    lastNode.setColor(0.48, 0.66, 1)
    groupGrade3_2 = lastNode

    param = lastNode.getParam("blackPoint")
    if param is not None:
        param.setValue(0.008, 0)
        param.setValue(0.008, 1)
        param.setValue(0.008, 2)
        param.setValue(0.008, 3)
        del param

    param = lastNode.getParam("whitePoint")
    if param is not None:
        param.setValue(1.159, 0)
        param.setValue(1.159, 1)
        param.setValue(1.159, 2)
        param.setValue(1.159, 3)
        del param

    param = lastNode.getParam("white")
    if param is not None:
        param.setValue(0.9245, 0)
        param.setValue(0.9245, 1)
        param.setValue(0.9245, 2)
        param.setValue(0.9245, 3)
        del param

    param = lastNode.getParam("multiply")
    if param is not None:
        param.setValue(1.79, 0)
        param.setValue(1.79, 1)
        param.setValue(1.79, 2)
        param.setValue(1.79, 3)
        del param

    param = lastNode.getParam("gamma")
    if param is not None:
        param.setValue(0.9245, 0)
        param.setValue(0.9245, 1)
        param.setValue(0.9245, 2)
        param.setValue(0.9245, 3)
        del param

    param = lastNode.getParam("premult")
    if param is not None:
        param.setValue(True)
        del param

    param = lastNode.getParam("maskInvert")
    if param is not None:
        param.setValue(True)
        del param

    param = lastNode.getParam("premultChanged")
    if param is not None:
        param.setValue(True)
        del param

    param = lastNode.getParam("enableMask_Mask")
    if param is not None:
        param.setValue(True)
        del param

    del lastNode
    # End of node "Grade3_2"

    # Start of node "Lerp_whitepoint"
    lastNode = app.createNode("fr.inria.built-in.Group", 1, group)
    lastNode.setScriptName("Lerp_whitepoint")
    lastNode.setLabel("Lerp_whitepoint")
    lastNode.setPosition(2130, 5303)
    lastNode.setSize(104, 30)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupLerp_whitepoint = lastNode


    # Create the user parameters
    lastNode.Controls = lastNode.createPageParam("Controls", "Controls")
    param = lastNode.createSeparatorParam("integer_________", "integer linear interpolation")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.integer_________ = param
    del param

    param = lastNode.createIntParam("i_input", "i_input")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.i_input = param
    del param

    param = lastNode.createInt2DParam("i_input_range", "i_input_range")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)
    param.setDefaultValue(0, 1)
    param.restoreDefaultValue(1)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(100, 1)
    lastNode.i_input_range = param
    del param

    param = lastNode.createInt2DParam("i_lerp_range", "i_lerp_range")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)
    param.setDefaultValue(0, 1)
    param.restoreDefaultValue(1)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(7, 0)
    lastNode.i_lerp_range = param
    del param

    param = lastNode.createIntParam("i_lerp_result", "i_lerp_result")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(0, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(7, 0)
    lastNode.i_lerp_result = param
    del param

    param = lastNode.createSeparatorParam("float________", "float linear interpolation")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.float________ = param
    del param

    param = lastNode.createDoubleParam("f_input", "f_input")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(5.3, 0)
    lastNode.f_input = param
    del param

    param = lastNode.createDouble2DParam("f_input_range", "f_input_range")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setMinimum(-2147483648, 1)
    param.setMaximum(2147483647, 1)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(100, 1)
    lastNode.f_input_range = param
    del param

    param = lastNode.createDouble2DParam("f_lerp_range", "f_lerp_range")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setMinimum(-2147483648, 1)
    param.setMaximum(2147483647, 1)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(1, 0)
    param.setValue(4, 1)
    lastNode.f_lerp_range = param
    del param

    param = lastNode.createDoubleParam("f_lerp_result", "f_lerp_result")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(1.159, 0)
    lastNode.f_lerp_result = param
    del param

    # Refresh the GUI with the newly created parameters
    lastNode.setPagesOrder(['Controls', 'Node', 'Settings'])
    lastNode.refreshUserParamsGUI()
    del lastNode
    # End of node "Lerp_whitepoint"

    groupgroup = groupLerp_whitepoint
    # Create all nodes in the group

    # Create the parameters of the group node the same way we did for all internal nodes
    lastNode = groupgroup
    lastNode.setColor(0.7, 0.7, 0.7)

    # Create the user parameters
    lastNode.Controls = lastNode.createPageParam("Controls", "Controls")
    param = lastNode.createSeparatorParam("integer_________", "integer linear interpolation")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.integer_________ = param
    del param

    param = lastNode.createIntParam("i_input", "i_input")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.i_input = param
    del param

    param = lastNode.createInt2DParam("i_input_range", "i_input_range")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)
    param.setDefaultValue(0, 1)
    param.restoreDefaultValue(1)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(100, 1)
    lastNode.i_input_range = param
    del param

    param = lastNode.createInt2DParam("i_lerp_range", "i_lerp_range")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)
    param.setDefaultValue(0, 1)
    param.restoreDefaultValue(1)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(7, 0)
    lastNode.i_lerp_range = param
    del param

    param = lastNode.createIntParam("i_lerp_result", "i_lerp_result")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(0, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(7, 0)
    lastNode.i_lerp_result = param
    del param

    param = lastNode.createSeparatorParam("float________", "float linear interpolation")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.float________ = param
    del param

    param = lastNode.createDoubleParam("f_input", "f_input")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(5.3, 0)
    lastNode.f_input = param
    del param

    param = lastNode.createDouble2DParam("f_input_range", "f_input_range")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setMinimum(-2147483648, 1)
    param.setMaximum(2147483647, 1)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(100, 1)
    lastNode.f_input_range = param
    del param

    param = lastNode.createDouble2DParam("f_lerp_range", "f_lerp_range")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setMinimum(-2147483648, 1)
    param.setMaximum(2147483647, 1)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(1, 0)
    param.setValue(4, 1)
    lastNode.f_lerp_range = param
    del param

    param = lastNode.createDoubleParam("f_lerp_result", "f_lerp_result")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(1.159, 0)
    lastNode.f_lerp_result = param
    del param

    # Refresh the GUI with the newly created parameters
    lastNode.setPagesOrder(['Controls', 'Node', 'Settings'])
    lastNode.refreshUserParamsGUI()
    del lastNode

    # Start of node "Input1"
    lastNode = app.createNode("fr.inria.built-in.Input", 1, groupgroup)
    lastNode.setScriptName("Input1")
    lastNode.setLabel("Input1")
    lastNode.setPosition(642, 175)
    lastNode.setSize(104, 30)
    lastNode.setColor(0.3, 0.5, 0.2)
    groupgroupInput1 = lastNode

    del lastNode
    # End of node "Input1"

    # Start of node "Output1"
    lastNode = app.createNode("fr.inria.built-in.Output", 1, groupgroup)
    lastNode.setLabel("Output1")
    lastNode.setPosition(642, 247)
    lastNode.setSize(104, 30)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupgroupOutput1 = lastNode

    del lastNode
    # End of node "Output1"

    # Now that all nodes are created we can connect them together, restore expressions
    groupgroupOutput1.connectInput(0, groupgroupInput1)

    param = groupgroup.getParam("i_lerp_result")
    param.setExpression("import numpy as np\r\n\r\ni = thisNode.i_input.get()\r\n\r\ni0 = thisNode.i_input_range.get()[0]\r\ni1 = thisNode.i_input_range.get()[1]\r\n\r\nr0 = thisNode.i_lerp_range.get()[0]\r\nr1 = thisNode.i_lerp_range.get()[1]\r\n\r\nir = [i0, i1]\r\nlr = [r0, r1]\r\n\r\ny_new = np.interp(i, ir, lr)\r\nret = y_new\r\n\r\n\r\n", True, 0)
    del param
    param = groupgroup.getParam("f_input")
    param.setExpression("thisGroup.burn_edges2.get()", False, 0)
    del param
    param = groupgroup.getParam("f_lerp_result")
    param.setExpression("import numpy as np\r\n\r\ni = thisNode.f_input.get()\r\n\r\ni0 = thisNode.f_input_range.get()[0]\r\ni1 = thisNode.f_input_range.get()[1]\r\n\r\nr0 = thisNode.f_lerp_range.get()[0]\r\nr1 = thisNode.f_lerp_range.get()[1]\r\n\r\nir = [i0, i1]\r\nlr = [r0, r1]\r\n\r\ny_new = np.interp(i, ir, lr)\r\nret = y_new\r\n\r\n\r\n", True, 0)
    del param

    # Start of node "LerpLumpySpec"
    lastNode = app.createNode("fr.inria.built-in.Group", 1, group)
    lastNode.setScriptName("LerpLumpySpec")
    lastNode.setLabel("LerpLumpySpec")
    lastNode.setPosition(2430, 2727)
    lastNode.setSize(104, 30)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupLerpLumpySpec = lastNode


    # Create the user parameters
    lastNode.Controls = lastNode.createPageParam("Controls", "Controls")
    param = lastNode.createSeparatorParam("integer_________", "integer linear interpolation")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.integer_________ = param
    del param

    param = lastNode.createIntParam("i_input", "i_input")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.i_input = param
    del param

    param = lastNode.createInt2DParam("i_input_range", "i_input_range")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)
    param.setDefaultValue(0, 1)
    param.restoreDefaultValue(1)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(100, 1)
    lastNode.i_input_range = param
    del param

    param = lastNode.createInt2DParam("i_lerp_range", "i_lerp_range")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)
    param.setDefaultValue(0, 1)
    param.restoreDefaultValue(1)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(7, 0)
    lastNode.i_lerp_range = param
    del param

    param = lastNode.createIntParam("i_lerp_result", "i_lerp_result")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(0, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(7, 0)
    lastNode.i_lerp_result = param
    del param

    param = lastNode.createSeparatorParam("float________", "float linear interpolation")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.float________ = param
    del param

    param = lastNode.createDoubleParam("f_input", "f_input")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(8.9, 0)
    lastNode.f_input = param
    del param

    param = lastNode.createDouble2DParam("f_input_range", "f_input_range")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setMinimum(-2147483648, 1)
    param.setMaximum(2147483647, 1)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(100, 1)
    lastNode.f_input_range = param
    del param

    param = lastNode.createDouble2DParam("f_lerp_range", "f_lerp_range")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setMinimum(-2147483648, 1)
    param.setMaximum(2147483647, 1)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(1, 0)
    param.setValue(5, 1)
    lastNode.f_lerp_range = param
    del param

    param = lastNode.createDoubleParam("f_lerp_result", "f_lerp_result")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(1.356, 0)
    lastNode.f_lerp_result = param
    del param

    # Refresh the GUI with the newly created parameters
    lastNode.setPagesOrder(['Controls', 'Node', 'Settings'])
    lastNode.refreshUserParamsGUI()
    del lastNode
    # End of node "LerpLumpySpec"

    groupgroup = groupLerpLumpySpec
    # Create all nodes in the group

    # Create the parameters of the group node the same way we did for all internal nodes
    lastNode = groupgroup
    lastNode.setColor(0.7, 0.7, 0.7)

    # Create the user parameters
    lastNode.Controls = lastNode.createPageParam("Controls", "Controls")
    param = lastNode.createSeparatorParam("integer_________", "integer linear interpolation")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.integer_________ = param
    del param

    param = lastNode.createIntParam("i_input", "i_input")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.i_input = param
    del param

    param = lastNode.createInt2DParam("i_input_range", "i_input_range")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)
    param.setDefaultValue(0, 1)
    param.restoreDefaultValue(1)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(100, 1)
    lastNode.i_input_range = param
    del param

    param = lastNode.createInt2DParam("i_lerp_range", "i_lerp_range")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)
    param.setDefaultValue(0, 1)
    param.restoreDefaultValue(1)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(7, 0)
    lastNode.i_lerp_range = param
    del param

    param = lastNode.createIntParam("i_lerp_result", "i_lerp_result")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(0, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(7, 0)
    lastNode.i_lerp_result = param
    del param

    param = lastNode.createSeparatorParam("float________", "float linear interpolation")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.float________ = param
    del param

    param = lastNode.createDoubleParam("f_input", "f_input")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(8.9, 0)
    lastNode.f_input = param
    del param

    param = lastNode.createDouble2DParam("f_input_range", "f_input_range")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setMinimum(-2147483648, 1)
    param.setMaximum(2147483647, 1)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(100, 1)
    lastNode.f_input_range = param
    del param

    param = lastNode.createDouble2DParam("f_lerp_range", "f_lerp_range")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setMinimum(-2147483648, 1)
    param.setMaximum(2147483647, 1)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(1, 0)
    param.setValue(5, 1)
    lastNode.f_lerp_range = param
    del param

    param = lastNode.createDoubleParam("f_lerp_result", "f_lerp_result")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(1.356, 0)
    lastNode.f_lerp_result = param
    del param

    # Refresh the GUI with the newly created parameters
    lastNode.setPagesOrder(['Controls', 'Node', 'Settings'])
    lastNode.refreshUserParamsGUI()
    del lastNode

    # Start of node "Input1"
    lastNode = app.createNode("fr.inria.built-in.Input", 1, groupgroup)
    lastNode.setScriptName("Input1")
    lastNode.setLabel("Input1")
    lastNode.setPosition(642, 175)
    lastNode.setSize(104, 30)
    lastNode.setColor(0.3, 0.5, 0.2)
    groupgroupInput1 = lastNode

    del lastNode
    # End of node "Input1"

    # Start of node "Output1"
    lastNode = app.createNode("fr.inria.built-in.Output", 1, groupgroup)
    lastNode.setLabel("Output1")
    lastNode.setPosition(642, 247)
    lastNode.setSize(104, 30)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupgroupOutput1 = lastNode

    del lastNode
    # End of node "Output1"

    # Now that all nodes are created we can connect them together, restore expressions
    groupgroupOutput1.connectInput(0, groupgroupInput1)

    param = groupgroup.getParam("i_lerp_result")
    param.setExpression("import numpy as np\r\n\r\ni = thisNode.i_input.get()\r\n\r\ni0 = thisNode.i_input_range.get()[0]\r\ni1 = thisNode.i_input_range.get()[1]\r\n\r\nr0 = thisNode.i_lerp_range.get()[0]\r\nr1 = thisNode.i_lerp_range.get()[1]\r\n\r\nir = [i0, i1]\r\nlr = [r0, r1]\r\n\r\ny_new = np.interp(i, ir, lr)\r\nret = y_new\r\n\r\n\r\n", True, 0)
    del param
    param = groupgroup.getParam("f_input")
    param.setExpression("thisGroup.lumpy_height.get()", False, 0)
    del param
    param = groupgroup.getParam("f_lerp_result")
    param.setExpression("import numpy as np\r\n\r\ni = thisNode.f_input.get()\r\n\r\ni0 = thisNode.f_input_range.get()[0]\r\ni1 = thisNode.f_input_range.get()[1]\r\n\r\nr0 = thisNode.f_lerp_range.get()[0]\r\nr1 = thisNode.f_lerp_range.get()[1]\r\n\r\nir = [i0, i1]\r\nlr = [r0, r1]\r\n\r\ny_new = np.interp(i, ir, lr)\r\nret = y_new\r\n\r\n\r\n", True, 0)
    del param

    # Start of node "SwitchMelt1"
    lastNode = app.createNode("net.sf.openfx.switchPlugin", 1, group)
    lastNode.setScriptName("SwitchMelt1")
    lastNode.setLabel("SwitchMelt1")
    lastNode.setPosition(2014, 1798)
    lastNode.setSize(104, 30)
    lastNode.setColor(0.3, 0.37, 0.776)
    groupSwitchMelt1 = lastNode

    param = lastNode.getParam("which")
    if param is not None:
        param.setValueAtTime(0, 1, 0)
        del param

    param = lastNode.getParam("disableNode")
    if param is not None:
        param.setValue(True)
        del param

    del lastNode
    # End of node "SwitchMelt1"

    # Start of node "Plasma3"
    lastNode = app.createNode("net.sf.cimg.CImgPlasma", 2, group)
    lastNode.setScriptName("Plasma3")
    lastNode.setLabel("Plasma3")
    lastNode.setPosition(1971, 3518)
    lastNode.setSize(104, 30)
    lastNode.setColor(0.3, 0.5, 0.2)
    groupPlasma3 = lastNode

    param = lastNode.getParam("NatronOfxParamProcessA")
    if param is not None:
        param.setValue(True)
        del param

    param = lastNode.getParam("alpha")
    if param is not None:
        param.setValue(0.00108, 0)
        del param

    param = lastNode.getParam("beta")
    if param is not None:
        param.setValue(0.148, 0)
        del param

    del lastNode
    # End of node "Plasma3"

    # Start of node "Multiply2"
    lastNode = app.createNode("net.sf.openfx.MultiplyPlugin", 2, group)
    lastNode.setScriptName("Multiply2")
    lastNode.setLabel("Multiply2")
    lastNode.setPosition(2207, 3553)
    lastNode.setSize(104, 30)
    lastNode.setColor(0.48, 0.66, 1)
    groupMultiply2 = lastNode

    param = lastNode.getParam("value")
    if param is not None:
        param.setValue(0, 0)
        param.setValue(0, 1)
        param.setValue(0, 2)
        param.setValue(0, 3)
        del param

    param = lastNode.getParam("premult")
    if param is not None:
        param.setValue(True)
        del param

    param = lastNode.getParam("enableMask_Mask")
    if param is not None:
        param.setValue(True)
        del param

    del lastNode
    # End of node "Multiply2"

    # Start of node "Lerp2"
    lastNode = app.createNode("fr.inria.built-in.Group", 1, group)
    lastNode.setScriptName("Lerp2")
    lastNode.setLabel("Lerp2")
    lastNode.setPosition(2430, 2889)
    lastNode.setSize(104, 30)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupLerp2 = lastNode


    # Create the user parameters
    lastNode.Controls = lastNode.createPageParam("Controls", "Controls")
    param = lastNode.createSeparatorParam("integer_________", "integer linear interpolation")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.integer_________ = param
    del param

    param = lastNode.createIntParam("i_input", "i_input")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.i_input = param
    del param

    param = lastNode.createInt2DParam("i_input_range", "i_input_range")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)
    param.setDefaultValue(0, 1)
    param.restoreDefaultValue(1)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(100, 1)
    lastNode.i_input_range = param
    del param

    param = lastNode.createInt2DParam("i_lerp_range", "i_lerp_range")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)
    param.setDefaultValue(0, 1)
    param.restoreDefaultValue(1)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(7, 0)
    lastNode.i_lerp_range = param
    del param

    param = lastNode.createIntParam("i_lerp_result", "i_lerp_result")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(0, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(7, 0)
    lastNode.i_lerp_result = param
    del param

    param = lastNode.createSeparatorParam("float________", "float linear interpolation")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.float________ = param
    del param

    param = lastNode.createDoubleParam("f_input", "f_input")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(6.4, 0)
    lastNode.f_input = param
    del param

    param = lastNode.createDouble2DParam("f_input_range", "f_input_range")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setMinimum(-2147483648, 1)
    param.setMaximum(2147483647, 1)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(100, 1)
    lastNode.f_input_range = param
    del param

    param = lastNode.createDouble2DParam("f_lerp_range", "f_lerp_range")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setMinimum(-2147483648, 1)
    param.setMaximum(2147483647, 1)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(1, 0)
    param.setValue(-1, 1)
    lastNode.f_lerp_range = param
    del param

    param = lastNode.createDoubleParam("f_lerp_result", "f_lerp_result")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(0.872, 0)
    lastNode.f_lerp_result = param
    del param

    # Refresh the GUI with the newly created parameters
    lastNode.setPagesOrder(['Controls', 'Node', 'Settings'])
    lastNode.refreshUserParamsGUI()
    del lastNode
    # End of node "Lerp2"

    groupgroup = groupLerp2
    # Create all nodes in the group

    # Create the parameters of the group node the same way we did for all internal nodes
    lastNode = groupgroup
    lastNode.setColor(0.7, 0.7, 0.7)

    # Create the user parameters
    lastNode.Controls = lastNode.createPageParam("Controls", "Controls")
    param = lastNode.createSeparatorParam("integer_________", "integer linear interpolation")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.integer_________ = param
    del param

    param = lastNode.createIntParam("i_input", "i_input")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.i_input = param
    del param

    param = lastNode.createInt2DParam("i_input_range", "i_input_range")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)
    param.setDefaultValue(0, 1)
    param.restoreDefaultValue(1)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(100, 1)
    lastNode.i_input_range = param
    del param

    param = lastNode.createInt2DParam("i_lerp_range", "i_lerp_range")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)
    param.setDefaultValue(0, 1)
    param.restoreDefaultValue(1)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(7, 0)
    lastNode.i_lerp_range = param
    del param

    param = lastNode.createIntParam("i_lerp_result", "i_lerp_result")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(0, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(7, 0)
    lastNode.i_lerp_result = param
    del param

    param = lastNode.createSeparatorParam("float________", "float linear interpolation")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.float________ = param
    del param

    param = lastNode.createDoubleParam("f_input", "f_input")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(6.4, 0)
    lastNode.f_input = param
    del param

    param = lastNode.createDouble2DParam("f_input_range", "f_input_range")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setMinimum(-2147483648, 1)
    param.setMaximum(2147483647, 1)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(100, 1)
    lastNode.f_input_range = param
    del param

    param = lastNode.createDouble2DParam("f_lerp_range", "f_lerp_range")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setMinimum(-2147483648, 1)
    param.setMaximum(2147483647, 1)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(1, 0)
    param.setValue(-1, 1)
    lastNode.f_lerp_range = param
    del param

    param = lastNode.createDoubleParam("f_lerp_result", "f_lerp_result")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(0.872, 0)
    lastNode.f_lerp_result = param
    del param

    # Refresh the GUI with the newly created parameters
    lastNode.setPagesOrder(['Controls', 'Node', 'Settings'])
    lastNode.refreshUserParamsGUI()
    del lastNode

    # Start of node "Input1"
    lastNode = app.createNode("fr.inria.built-in.Input", 1, groupgroup)
    lastNode.setScriptName("Input1")
    lastNode.setLabel("Input1")
    lastNode.setPosition(642, 175)
    lastNode.setSize(104, 30)
    lastNode.setColor(0.3, 0.5, 0.2)
    groupgroupInput1 = lastNode

    del lastNode
    # End of node "Input1"

    # Start of node "Output1"
    lastNode = app.createNode("fr.inria.built-in.Output", 1, groupgroup)
    lastNode.setLabel("Output1")
    lastNode.setPosition(642, 247)
    lastNode.setSize(104, 30)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupgroupOutput1 = lastNode

    del lastNode
    # End of node "Output1"

    # Now that all nodes are created we can connect them together, restore expressions
    groupgroupOutput1.connectInput(0, groupgroupInput1)

    param = groupgroup.getParam("i_lerp_result")
    param.setExpression("import numpy as np\r\n\r\ni = thisNode.i_input.get()\r\n\r\ni0 = thisNode.i_input_range.get()[0]\r\ni1 = thisNode.i_input_range.get()[1]\r\n\r\nr0 = thisNode.i_lerp_range.get()[0]\r\nr1 = thisNode.i_lerp_range.get()[1]\r\n\r\nir = [i0, i1]\r\nlr = [r0, r1]\r\n\r\ny_new = np.interp(i, ir, lr)\r\nret = y_new\r\n\r\n\r\n", True, 0)
    del param
    param = groupgroup.getParam("f_input")
    param.setExpression("thisGroup.saturated_fat.get()", False, 0)
    del param
    param = groupgroup.getParam("f_lerp_result")
    param.setExpression("import numpy as np\r\n\r\ni = thisNode.f_input.get()\r\n\r\ni0 = thisNode.f_input_range.get()[0]\r\ni1 = thisNode.f_input_range.get()[1]\r\n\r\nr0 = thisNode.f_lerp_range.get()[0]\r\nr1 = thisNode.f_lerp_range.get()[1]\r\n\r\nir = [i0, i1]\r\nlr = [r0, r1]\r\n\r\ny_new = np.interp(i, ir, lr)\r\nret = y_new\r\n\r\n\r\n", True, 0)
    del param

    # Start of node "Backdrop7"
    lastNode = app.createNode("fr.inria.built-in.BackDrop", 1, group)
    lastNode.setScriptName("Backdrop7")
    lastNode.setLabel("Backdrop7")
    lastNode.setPosition(1619, 5937)
    lastNode.setSize(796, 740)
    lastNode.setColor(0.45, 0.45, 0.45)
    groupBackdrop7 = lastNode

    param = lastNode.getParam("Label")
    if param is not None:
        param.setValue("<font size=\"26\" color=\"#000000\" face=\"Helvetica\">Edge Blend\r\n</font>")
        del param

    del lastNode
    # End of node "Backdrop7"

    # Start of node "Lumpy_big"
    lastNode = app.createNode("net.sf.openfx.SeGrain", 1, group)
    lastNode.setScriptName("Lumpy_big")
    lastNode.setLabel("Lumpy_big")
    lastNode.setPosition(1812, 2300)
    lastNode.setSize(80, 38)
    lastNode.setColor(0.75, 0.75, 0.75)
    groupLumpy_big = lastNode

    param = lastNode.getParam("grainSizeAll")
    if param is not None:
        param.setValue(8.9, 0)
        del param

    param = lastNode.getParam("grainSizeRed")
    if param is not None:
        param.setValue(10, 0)
        del param

    param = lastNode.getParam("grainSizeGreen")
    if param is not None:
        param.setValue(10, 0)
        del param

    param = lastNode.getParam("grainSizeBlue")
    if param is not None:
        param.setValue(10, 0)
        del param

    param = lastNode.getParam("grainIrregularityRed")
    if param is not None:
        param.setValue(1, 0)
        del param

    param = lastNode.getParam("grainIrregularityGreen")
    if param is not None:
        param.setValue(1, 0)
        del param

    param = lastNode.getParam("grainIrregularityBlue")
    if param is not None:
        param.setValue(1, 0)
        del param

    param = lastNode.getParam("grainIntensityRed")
    if param is not None:
        param.setValue(0, 0)
        del param

    param = lastNode.getParam("grainIntensityGreen")
    if param is not None:
        param.setValue(0, 0)
        del param

    param = lastNode.getParam("grainIntensityBlue")
    if param is not None:
        param.setValue(0, 0)
        del param

    param = lastNode.getParam("colorCorr")
    if param is not None:
        param.setValue(1, 0)
        del param

    param = lastNode.getParam("grainBlack")
    if param is not None:
        param.setValue(0.207, 0)
        param.setValue(0.207, 1)
        param.setValue(0.207, 2)
        del param

    param = lastNode.getParam("mix")
    if param is not None:
        param.setValue(1, 0)
        del param

    param = lastNode.getParam("userTextArea")
    if param is not None:
        param.setValue("<Natron>(Kodak 5248)</Natron>")
        del param

    del lastNode
    # End of node "Lumpy_big"

    # Start of node "Lerp_lumpy_big_gain"
    lastNode = app.createNode("fr.inria.built-in.Group", 1, group)
    lastNode.setScriptName("Lerp_lumpy_big_gain")
    lastNode.setLabel("Lerp_lumpy_big_gain")
    lastNode.setPosition(2430, 2339)
    lastNode.setSize(104, 30)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupLerp_lumpy_big_gain = lastNode


    # Create the user parameters
    lastNode.Controls = lastNode.createPageParam("Controls", "Controls")
    param = lastNode.createSeparatorParam("integer_________", "integer linear interpolation")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.integer_________ = param
    del param

    param = lastNode.createIntParam("i_input", "i_input")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.i_input = param
    del param

    param = lastNode.createInt2DParam("i_input_range", "i_input_range")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)
    param.setDefaultValue(0, 1)
    param.restoreDefaultValue(1)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(100, 1)
    lastNode.i_input_range = param
    del param

    param = lastNode.createInt2DParam("i_lerp_range", "i_lerp_range")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)
    param.setDefaultValue(0, 1)
    param.restoreDefaultValue(1)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(100, 1)
    lastNode.i_lerp_range = param
    del param

    param = lastNode.createIntParam("i_lerp_result", "i_lerp_result")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(0, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(0, 0)
    lastNode.i_lerp_result = param
    del param

    param = lastNode.createSeparatorParam("float________", "float linear interpolation")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.float________ = param
    del param

    param = lastNode.createDoubleParam("f_input", "f_input")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.f_input = param
    del param

    param = lastNode.createDouble2DParam("f_input_range", "f_input_range")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setMinimum(-2147483648, 1)
    param.setMaximum(2147483647, 1)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(100, 1)
    lastNode.f_input_range = param
    del param

    param = lastNode.createDouble2DParam("f_lerp_range", "f_lerp_range")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setMinimum(-2147483648, 1)
    param.setMaximum(2147483647, 1)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(1, 0)
    param.setValue(7, 1)
    lastNode.f_lerp_range = param
    del param

    param = lastNode.createDoubleParam("f_lerp_result", "f_lerp_result")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(1, 0)
    lastNode.f_lerp_result = param
    del param

    # Refresh the GUI with the newly created parameters
    lastNode.setPagesOrder(['Controls', 'Node', 'Settings'])
    lastNode.refreshUserParamsGUI()
    del lastNode
    # End of node "Lerp_lumpy_big_gain"

    groupgroup = groupLerp_lumpy_big_gain
    # Create all nodes in the group

    # Create the parameters of the group node the same way we did for all internal nodes
    lastNode = groupgroup
    lastNode.setColor(0.7, 0.7, 0.7)

    # Create the user parameters
    lastNode.Controls = lastNode.createPageParam("Controls", "Controls")
    param = lastNode.createSeparatorParam("integer_________", "integer linear interpolation")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.integer_________ = param
    del param

    param = lastNode.createIntParam("i_input", "i_input")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.i_input = param
    del param

    param = lastNode.createInt2DParam("i_input_range", "i_input_range")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)
    param.setDefaultValue(0, 1)
    param.restoreDefaultValue(1)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(100, 1)
    lastNode.i_input_range = param
    del param

    param = lastNode.createInt2DParam("i_lerp_range", "i_lerp_range")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)
    param.setDefaultValue(0, 1)
    param.restoreDefaultValue(1)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(100, 1)
    lastNode.i_lerp_range = param
    del param

    param = lastNode.createIntParam("i_lerp_result", "i_lerp_result")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(0, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(0, 0)
    lastNode.i_lerp_result = param
    del param

    param = lastNode.createSeparatorParam("float________", "float linear interpolation")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.float________ = param
    del param

    param = lastNode.createDoubleParam("f_input", "f_input")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.f_input = param
    del param

    param = lastNode.createDouble2DParam("f_input_range", "f_input_range")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setMinimum(-2147483648, 1)
    param.setMaximum(2147483647, 1)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(100, 1)
    lastNode.f_input_range = param
    del param

    param = lastNode.createDouble2DParam("f_lerp_range", "f_lerp_range")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setMinimum(-2147483648, 1)
    param.setMaximum(2147483647, 1)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(1, 0)
    param.setValue(7, 1)
    lastNode.f_lerp_range = param
    del param

    param = lastNode.createDoubleParam("f_lerp_result", "f_lerp_result")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(1, 0)
    lastNode.f_lerp_result = param
    del param

    # Refresh the GUI with the newly created parameters
    lastNode.setPagesOrder(['Controls', 'Node', 'Settings'])
    lastNode.refreshUserParamsGUI()
    del lastNode

    # Start of node "Input1"
    lastNode = app.createNode("fr.inria.built-in.Input", 1, groupgroup)
    lastNode.setScriptName("Input1")
    lastNode.setLabel("Input1")
    lastNode.setPosition(642, 175)
    lastNode.setSize(104, 30)
    lastNode.setColor(0.3, 0.5, 0.2)
    groupgroupInput1 = lastNode

    del lastNode
    # End of node "Input1"

    # Start of node "Output1"
    lastNode = app.createNode("fr.inria.built-in.Output", 1, groupgroup)
    lastNode.setLabel("Output1")
    lastNode.setPosition(642, 247)
    lastNode.setSize(104, 30)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupgroupOutput1 = lastNode

    del lastNode
    # End of node "Output1"

    # Now that all nodes are created we can connect them together, restore expressions
    groupgroupOutput1.connectInput(0, groupgroupInput1)

    param = groupgroup.getParam("i_lerp_result")
    param.setExpression("import numpy as np\r\n\r\ni = thisNode.i_input.get()\r\n\r\ni0 = thisNode.i_input_range.get()[0]\r\ni1 = thisNode.i_input_range.get()[1]\r\n\r\nr0 = thisNode.i_lerp_range.get()[0]\r\nr1 = thisNode.i_lerp_range.get()[1]\r\n\r\nir = [i0, i1]\r\nlr = [r0, r1]\r\n\r\ny_new = np.interp(i, ir, lr)\r\nret = y_new\r\n\r\n\r\n", True, 0)
    del param
    param = groupgroup.getParam("f_lerp_result")
    param.setExpression("import numpy as np\r\n\r\ni = thisNode.f_input.get()\r\n\r\ni0 = thisNode.f_input_range.get()[0]\r\ni1 = thisNode.f_input_range.get()[1]\r\n\r\nr0 = thisNode.f_lerp_range.get()[0]\r\nr1 = thisNode.f_lerp_range.get()[1]\r\n\r\nir = [i0, i1]\r\nlr = [r0, r1]\r\n\r\ny_new = np.interp(i, ir, lr)\r\nret = y_new\r\n\r\n\r\n", True, 0)
    del param

    # Start of node "Dot33"
    lastNode = app.createNode("fr.inria.built-in.Dot", 1, group)
    lastNode.setScriptName("Dot33")
    lastNode.setLabel("Dot33")
    lastNode.setPosition(1873, 190)
    lastNode.setSize(15, 15)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupDot33 = lastNode

    del lastNode
    # End of node "Dot33"

    # Start of node "Multiply7"
    lastNode = app.createNode("net.sf.openfx.MultiplyPlugin", 2, group)
    lastNode.setScriptName("Multiply7")
    lastNode.setLabel("Multiply7")
    lastNode.setPosition(1821, -294)
    lastNode.setSize(104, 30)
    lastNode.setColor(0.48, 0.66, 1)
    groupMultiply7 = lastNode

    param = lastNode.getParam("NatronOfxParamProcessR")
    if param is not None:
        param.setValue(False)
        del param

    param = lastNode.getParam("NatronOfxParamProcessG")
    if param is not None:
        param.setValue(False)
        del param

    param = lastNode.getParam("NatronOfxParamProcessB")
    if param is not None:
        param.setValue(False)
        del param

    param = lastNode.getParam("NatronOfxParamProcessA")
    if param is not None:
        param.setValue(True)
        del param

    param = lastNode.getParam("premult")
    if param is not None:
        param.setValue(True)
        del param

    del lastNode
    # End of node "Multiply7"

    # Start of node "Clamp5"
    lastNode = app.createNode("net.sf.openfx.Clamp", 2, group)
    lastNode.setScriptName("Clamp5")
    lastNode.setLabel("Clamp5")
    lastNode.setPosition(1985, -824)
    lastNode.setSize(104, 30)
    lastNode.setColor(0.48, 0.66, 1)
    groupClamp5 = lastNode

    param = lastNode.getParam("premult")
    if param is not None:
        param.setValue(True)
        del param

    del lastNode
    # End of node "Clamp5"

    # Start of node "Shuffle4"
    lastNode = app.createNode("net.sf.openfx.ShufflePlugin", 3, group)
    lastNode.setScriptName("Shuffle4")
    lastNode.setLabel("Shuffle4")
    lastNode.setPosition(2069, -695)
    lastNode.setSize(104, 30)
    lastNode.setColor(0.6, 0.24, 0.39)
    groupShuffle4 = lastNode

    param = lastNode.getParam("outputA")
    if param is not None:
        param.set("A.uk.co.thefoundry.OfxImagePlaneColour.R")
        del param

    param = lastNode.getParam("disableNode")
    if param is not None:
        param.setValue(True)
        del param

    del lastNode
    # End of node "Shuffle4"

    # Start of node "Blur4"
    lastNode = app.createNode("net.sf.cimg.CImgBlur", 4, group)
    lastNode.setScriptName("Blur4")
    lastNode.setLabel("Blur4")
    lastNode.setPosition(1985, -888)
    lastNode.setSize(104, 30)
    lastNode.setColor(0.8, 0.5, 0.3)
    groupBlur4 = lastNode

    param = lastNode.getParam("size")
    if param is not None:
        param.setValue(9, 0)
        param.setValue(9, 1)
        del param

    param = lastNode.getParam("filter")
    if param is not None:
        param.set("box")
        del param

    param = lastNode.getParam("premultChanged")
    if param is not None:
        param.setValue(True)
        del param

    param = lastNode.getParam("disableNode")
    if param is not None:
        param.setValue(True)
        del param

    del lastNode
    # End of node "Blur4"

    # Start of node "Unpremult3"
    lastNode = app.createNode("net.sf.openfx.Unpremult", 2, group)
    lastNode.setScriptName("Unpremult3")
    lastNode.setLabel("Unpremult3")
    lastNode.setPosition(1821, -731)
    lastNode.setSize(104, 30)
    lastNode.setColor(0.3, 0.37, 0.776)
    groupUnpremult3 = lastNode

    del lastNode
    # End of node "Unpremult3"

    # Start of node "Premult5"
    lastNode = app.createNode("net.sf.openfx.Premult", 2, group)
    lastNode.setScriptName("Premult5")
    lastNode.setLabel("Premult5")
    lastNode.setPosition(1828, -107)
    lastNode.setSize(104, 30)
    lastNode.setColor(0.3, 0.37, 0.776)
    groupPremult5 = lastNode

    del lastNode
    # End of node "Premult5"

    # Start of node "Dot34"
    lastNode = app.createNode("fr.inria.built-in.Dot", 1, group)
    lastNode.setScriptName("Dot34")
    lastNode.setLabel("Dot34")
    lastNode.setPosition(1719, 4611)
    lastNode.setSize(15, 15)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupDot34 = lastNode

    del lastNode
    # End of node "Dot34"

    # Start of node "Dot35"
    lastNode = app.createNode("fr.inria.built-in.Dot", 1, group)
    lastNode.setScriptName("Dot35")
    lastNode.setLabel("Dot35")
    lastNode.setPosition(2178, 2528)
    lastNode.setSize(15, 15)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupDot35 = lastNode

    del lastNode
    # End of node "Dot35"

    # Start of node "Lerp_Grade1Mult"
    lastNode = app.createNode("fr.inria.built-in.Group", 1, group)
    lastNode.setScriptName("Lerp_Grade1Mult")
    lastNode.setLabel("Lerp_Grade1Mult")
    lastNode.setPosition(2071, 950)
    lastNode.setSize(104, 30)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupLerp_Grade1Mult = lastNode


    # Create the user parameters
    lastNode.Controls = lastNode.createPageParam("Controls", "Controls")
    param = lastNode.createSeparatorParam("integer_________", "integer linear interpolation")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.integer_________ = param
    del param

    param = lastNode.createIntParam("i_input", "i_input")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.i_input = param
    del param

    param = lastNode.createInt2DParam("i_input_range", "i_input_range")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)
    param.setDefaultValue(0, 1)
    param.restoreDefaultValue(1)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(100, 1)
    lastNode.i_input_range = param
    del param

    param = lastNode.createInt2DParam("i_lerp_range", "i_lerp_range")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)
    param.setDefaultValue(0, 1)
    param.restoreDefaultValue(1)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(7, 0)
    lastNode.i_lerp_range = param
    del param

    param = lastNode.createIntParam("i_lerp_result", "i_lerp_result")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(0, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(7, 0)
    lastNode.i_lerp_result = param
    del param

    param = lastNode.createSeparatorParam("float________", "float linear interpolation")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.float________ = param
    del param

    param = lastNode.createDoubleParam("f_input", "f_input")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(24.1, 0)
    lastNode.f_input = param
    del param

    param = lastNode.createDouble2DParam("f_input_range", "f_input_range")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setMinimum(-2147483648, 1)
    param.setMaximum(2147483647, 1)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(100, 1)
    lastNode.f_input_range = param
    del param

    param = lastNode.createDouble2DParam("f_lerp_range", "f_lerp_range")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setMinimum(-2147483648, 1)
    param.setMaximum(2147483647, 1)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(1, 0)
    param.setValue(4, 1)
    lastNode.f_lerp_range = param
    del param

    param = lastNode.createDoubleParam("f_lerp_result", "f_lerp_result")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(1.723, 0)
    lastNode.f_lerp_result = param
    del param

    # Refresh the GUI with the newly created parameters
    lastNode.setPagesOrder(['Controls', 'Node', 'Settings'])
    lastNode.refreshUserParamsGUI()
    del lastNode
    # End of node "Lerp_Grade1Mult"

    groupgroup = groupLerp_Grade1Mult
    # Create all nodes in the group

    # Create the parameters of the group node the same way we did for all internal nodes
    lastNode = groupgroup
    lastNode.setColor(0.7, 0.7, 0.7)

    # Create the user parameters
    lastNode.Controls = lastNode.createPageParam("Controls", "Controls")
    param = lastNode.createSeparatorParam("integer_________", "integer linear interpolation")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.integer_________ = param
    del param

    param = lastNode.createIntParam("i_input", "i_input")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.i_input = param
    del param

    param = lastNode.createInt2DParam("i_input_range", "i_input_range")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)
    param.setDefaultValue(0, 1)
    param.restoreDefaultValue(1)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(100, 1)
    lastNode.i_input_range = param
    del param

    param = lastNode.createInt2DParam("i_lerp_range", "i_lerp_range")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)
    param.setDefaultValue(0, 1)
    param.restoreDefaultValue(1)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(7, 0)
    lastNode.i_lerp_range = param
    del param

    param = lastNode.createIntParam("i_lerp_result", "i_lerp_result")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(0, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(7, 0)
    lastNode.i_lerp_result = param
    del param

    param = lastNode.createSeparatorParam("float________", "float linear interpolation")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.float________ = param
    del param

    param = lastNode.createDoubleParam("f_input", "f_input")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(24.1, 0)
    lastNode.f_input = param
    del param

    param = lastNode.createDouble2DParam("f_input_range", "f_input_range")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setMinimum(-2147483648, 1)
    param.setMaximum(2147483647, 1)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(100, 1)
    lastNode.f_input_range = param
    del param

    param = lastNode.createDouble2DParam("f_lerp_range", "f_lerp_range")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setMinimum(-2147483648, 1)
    param.setMaximum(2147483647, 1)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(1, 0)
    param.setValue(4, 1)
    lastNode.f_lerp_range = param
    del param

    param = lastNode.createDoubleParam("f_lerp_result", "f_lerp_result")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(1.723, 0)
    lastNode.f_lerp_result = param
    del param

    # Refresh the GUI with the newly created parameters
    lastNode.setPagesOrder(['Controls', 'Node', 'Settings'])
    lastNode.refreshUserParamsGUI()
    del lastNode

    # Start of node "Input1"
    lastNode = app.createNode("fr.inria.built-in.Input", 1, groupgroup)
    lastNode.setScriptName("Input1")
    lastNode.setLabel("Input1")
    lastNode.setPosition(642, 175)
    lastNode.setSize(104, 30)
    lastNode.setColor(0.3, 0.5, 0.2)
    groupgroupInput1 = lastNode

    del lastNode
    # End of node "Input1"

    # Start of node "Output1"
    lastNode = app.createNode("fr.inria.built-in.Output", 1, groupgroup)
    lastNode.setLabel("Output1")
    lastNode.setPosition(642, 247)
    lastNode.setSize(104, 30)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupgroupOutput1 = lastNode

    del lastNode
    # End of node "Output1"

    # Now that all nodes are created we can connect them together, restore expressions
    groupgroupOutput1.connectInput(0, groupgroupInput1)

    param = groupgroup.getParam("i_lerp_result")
    param.setExpression("import numpy as np\r\n\r\ni = thisNode.i_input.get()\r\n\r\ni0 = thisNode.i_input_range.get()[0]\r\ni1 = thisNode.i_input_range.get()[1]\r\n\r\nr0 = thisNode.i_lerp_range.get()[0]\r\nr1 = thisNode.i_lerp_range.get()[1]\r\n\r\nir = [i0, i1]\r\nlr = [r0, r1]\r\n\r\ny_new = np.interp(i, ir, lr)\r\nret = y_new\r\n\r\n\r\n", True, 0)
    del param
    param = groupgroup.getParam("f_input")
    param.setExpression("thisGroup.burn_edges.get()", False, 0)
    del param
    param = groupgroup.getParam("f_lerp_result")
    param.setExpression("import numpy as np\r\n\r\ni = thisNode.f_input.get()\r\n\r\ni0 = thisNode.f_input_range.get()[0]\r\ni1 = thisNode.f_input_range.get()[1]\r\n\r\nr0 = thisNode.f_lerp_range.get()[0]\r\nr1 = thisNode.f_lerp_range.get()[1]\r\n\r\nir = [i0, i1]\r\nlr = [r0, r1]\r\n\r\ny_new = np.interp(i, ir, lr)\r\nret = y_new\r\n\r\n\r\n", True, 0)
    del param

    # Start of node "Dot1"
    lastNode = app.createNode("fr.inria.built-in.Dot", 1, group)
    lastNode.setScriptName("Dot1")
    lastNode.setLabel("Dot1")
    lastNode.setPosition(1713, 7083)
    lastNode.setSize(15, 15)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupDot1 = lastNode

    del lastNode
    # End of node "Dot1"

    # Start of node "Dot2"
    lastNode = app.createNode("fr.inria.built-in.Dot", 1, group)
    lastNode.setScriptName("Dot2")
    lastNode.setLabel("Dot2")
    lastNode.setPosition(1713, 6077)
    lastNode.setSize(15, 15)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupDot2 = lastNode

    del lastNode
    # End of node "Dot2"

    # Start of node "Unpremult4"
    lastNode = app.createNode("net.sf.openfx.Unpremult", 2, group)
    lastNode.setScriptName("Unpremult4")
    lastNode.setLabel("Unpremult4")
    lastNode.setPosition(1792, 2249)
    lastNode.setSize(104, 30)
    lastNode.setColor(0.3, 0.37, 0.776)
    groupUnpremult4 = lastNode

    del lastNode
    # End of node "Unpremult4"

    # Start of node "Premult7"
    lastNode = app.createNode("net.sf.openfx.Premult", 2, group)
    lastNode.setScriptName("Premult7")
    lastNode.setLabel("Premult7")
    lastNode.setPosition(1800, 2432)
    lastNode.setSize(104, 30)
    lastNode.setColor(0.3, 0.37, 0.776)
    groupPremult7 = lastNode

    del lastNode
    # End of node "Premult7"

    # Start of node "Lerp_lump_big_intensity"
    lastNode = app.createNode("fr.inria.built-in.Group", 1, group)
    lastNode.setScriptName("Lerp_lump_big_intensity")
    lastNode.setLabel("Lerp_lump_big_intensity")
    lastNode.setPosition(2430, 2260)
    lastNode.setSize(104, 38)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupLerp_lump_big_intensity = lastNode


    # Create the user parameters
    lastNode.Controls = lastNode.createPageParam("Controls", "Controls")
    param = lastNode.createSeparatorParam("integer_________", "integer linear interpolation")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.integer_________ = param
    del param

    param = lastNode.createIntParam("i_input", "i_input")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.i_input = param
    del param

    param = lastNode.createInt2DParam("i_input_range", "i_input_range")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)
    param.setDefaultValue(0, 1)
    param.restoreDefaultValue(1)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(100, 1)
    lastNode.i_input_range = param
    del param

    param = lastNode.createInt2DParam("i_lerp_range", "i_lerp_range")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)
    param.setDefaultValue(0, 1)
    param.restoreDefaultValue(1)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(7, 0)
    lastNode.i_lerp_range = param
    del param

    param = lastNode.createIntParam("i_lerp_result", "i_lerp_result")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(0, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(7, 0)
    lastNode.i_lerp_result = param
    del param

    param = lastNode.createSeparatorParam("float________", "float linear interpolation")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.float________ = param
    del param

    param = lastNode.createDoubleParam("f_input", "f_input")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(6.9, 0)
    lastNode.f_input = param
    del param

    param = lastNode.createDouble2DParam("f_input_range", "f_input_range")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setMinimum(-2147483648, 1)
    param.setMaximum(2147483647, 1)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(100, 1)
    lastNode.f_input_range = param
    del param

    param = lastNode.createDouble2DParam("f_lerp_range", "f_lerp_range")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setMinimum(-2147483648, 1)
    param.setMaximum(2147483647, 1)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(3, 1)
    lastNode.f_lerp_range = param
    del param

    param = lastNode.createDoubleParam("f_lerp_result", "f_lerp_result")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(0.207, 0)
    lastNode.f_lerp_result = param
    del param

    # Refresh the GUI with the newly created parameters
    lastNode.setPagesOrder(['Controls', 'Node', 'Settings'])
    lastNode.refreshUserParamsGUI()
    del lastNode
    # End of node "Lerp_lump_big_intensity"

    groupgroup = groupLerp_lump_big_intensity
    # Create all nodes in the group

    # Create the parameters of the group node the same way we did for all internal nodes
    lastNode = groupgroup
    lastNode.setColor(0.7, 0.7, 0.7)

    # Create the user parameters
    lastNode.Controls = lastNode.createPageParam("Controls", "Controls")
    param = lastNode.createSeparatorParam("integer_________", "integer linear interpolation")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.integer_________ = param
    del param

    param = lastNode.createIntParam("i_input", "i_input")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.i_input = param
    del param

    param = lastNode.createInt2DParam("i_input_range", "i_input_range")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)
    param.setDefaultValue(0, 1)
    param.restoreDefaultValue(1)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(100, 1)
    lastNode.i_input_range = param
    del param

    param = lastNode.createInt2DParam("i_lerp_range", "i_lerp_range")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)
    param.setDefaultValue(0, 1)
    param.restoreDefaultValue(1)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(7, 0)
    lastNode.i_lerp_range = param
    del param

    param = lastNode.createIntParam("i_lerp_result", "i_lerp_result")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(0, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(7, 0)
    lastNode.i_lerp_result = param
    del param

    param = lastNode.createSeparatorParam("float________", "float linear interpolation")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.float________ = param
    del param

    param = lastNode.createDoubleParam("f_input", "f_input")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(6.9, 0)
    lastNode.f_input = param
    del param

    param = lastNode.createDouble2DParam("f_input_range", "f_input_range")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setMinimum(-2147483648, 1)
    param.setMaximum(2147483647, 1)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(100, 1)
    lastNode.f_input_range = param
    del param

    param = lastNode.createDouble2DParam("f_lerp_range", "f_lerp_range")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setMinimum(-2147483648, 1)
    param.setMaximum(2147483647, 1)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(3, 1)
    lastNode.f_lerp_range = param
    del param

    param = lastNode.createDoubleParam("f_lerp_result", "f_lerp_result")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(0.207, 0)
    lastNode.f_lerp_result = param
    del param

    # Refresh the GUI with the newly created parameters
    lastNode.setPagesOrder(['Controls', 'Node', 'Settings'])
    lastNode.refreshUserParamsGUI()
    del lastNode

    # Start of node "Input1"
    lastNode = app.createNode("fr.inria.built-in.Input", 1, groupgroup)
    lastNode.setScriptName("Input1")
    lastNode.setLabel("Input1")
    lastNode.setPosition(642, 175)
    lastNode.setSize(104, 30)
    lastNode.setColor(0.3, 0.5, 0.2)
    groupgroupInput1 = lastNode

    del lastNode
    # End of node "Input1"

    # Start of node "Output1"
    lastNode = app.createNode("fr.inria.built-in.Output", 1, groupgroup)
    lastNode.setLabel("Output1")
    lastNode.setPosition(642, 247)
    lastNode.setSize(104, 30)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupgroupOutput1 = lastNode

    del lastNode
    # End of node "Output1"

    # Now that all nodes are created we can connect them together, restore expressions
    groupgroupOutput1.connectInput(0, groupgroupInput1)

    param = groupgroup.getParam("i_lerp_result")
    param.setExpression("import numpy as np\r\n\r\ni = thisNode.i_input.get()\r\n\r\ni0 = thisNode.i_input_range.get()[0]\r\ni1 = thisNode.i_input_range.get()[1]\r\n\r\nr0 = thisNode.i_lerp_range.get()[0]\r\nr1 = thisNode.i_lerp_range.get()[1]\r\n\r\nir = [i0, i1]\r\nlr = [r0, r1]\r\n\r\ny_new = np.interp(i, ir, lr)\r\nret = y_new\r\n\r\n\r\n", True, 0)
    del param
    param = groupgroup.getParam("f_input")
    param.setExpression("thisGroup.lumpy_big_intensity.get()", False, 0)
    del param
    param = groupgroup.getParam("f_lerp_result")
    param.setExpression("import numpy as np\r\n\r\ni = thisNode.f_input.get()\r\n\r\ni0 = thisNode.f_input_range.get()[0]\r\ni1 = thisNode.f_input_range.get()[1]\r\n\r\nr0 = thisNode.f_lerp_range.get()[0]\r\nr1 = thisNode.f_lerp_range.get()[1]\r\n\r\nir = [i0, i1]\r\nlr = [r0, r1]\r\n\r\ny_new = np.interp(i, ir, lr)\r\nret = y_new\r\n\r\n\r\n", True, 0)
    del param

    # Start of node "Shuffle6"
    lastNode = app.createNode("net.sf.openfx.ShufflePlugin", 3, group)
    lastNode.setScriptName("Shuffle6")
    lastNode.setLabel("Shuffle6")
    lastNode.setPosition(1815, 6095)
    lastNode.setSize(104, 30)
    lastNode.setColor(0.6, 0.24, 0.39)
    groupShuffle6 = lastNode

    param = lastNode.getParam("outputR")
    if param is not None:
        param.set("0")
        del param

    param = lastNode.getParam("outputG")
    if param is not None:
        param.set("0")
        del param

    param = lastNode.getParam("outputB")
    if param is not None:
        param.set("0")
        del param

    del lastNode
    # End of node "Shuffle6"

    # Start of node "Blur1"
    lastNode = app.createNode("net.sf.cimg.CImgBlur", 4, group)
    lastNode.setScriptName("Blur1")
    lastNode.setLabel("Blur1")
    lastNode.setPosition(1815, 6238)
    lastNode.setSize(104, 30)
    lastNode.setColor(0.8, 0.5, 0.3)
    groupBlur1 = lastNode

    param = lastNode.getParam("size")
    if param is not None:
        param.setValue(10, 0)
        param.setValue(10, 1)
        del param

    param = lastNode.getParam("filter")
    if param is not None:
        param.set("box")
        del param

    del lastNode
    # End of node "Blur1"

    # Start of node "Grade6"
    lastNode = app.createNode("net.sf.openfx.GradePlugin", 2, group)
    lastNode.setScriptName("Grade6")
    lastNode.setLabel("Grade6")
    lastNode.setPosition(1668, 6554)
    lastNode.setSize(104, 30)
    lastNode.setColor(0.48, 0.66, 1)
    groupGrade6 = lastNode

    param = lastNode.getParam("NatronOfxParamProcessA")
    if param is not None:
        param.setValue(True)
        del param

    param = lastNode.getParam("multiply")
    if param is not None:
        param.setValue(0.8257, 0)
        param.setValue(0.8257, 1)
        param.setValue(0.8257, 2)
        param.setValue(0.8257, 3)
        del param

    param = lastNode.getParam("gamma")
    if param is not None:
        param.setValue(0.8257, 0)
        param.setValue(0.8257, 1)
        param.setValue(0.8257, 2)
        param.setValue(0.8257, 3)
        del param

    param = lastNode.getParam("premult")
    if param is not None:
        param.setValue(True)
        del param

    param = lastNode.getParam("maskInvert")
    if param is not None:
        param.setValue(True)
        del param

    param = lastNode.getParam("enableMask_Mask")
    if param is not None:
        param.setValue(True)
        del param

    del lastNode
    # End of node "Grade6"

    # Start of node "Lerp_burn_edges2"
    lastNode = app.createNode("fr.inria.built-in.Group", 1, group)
    lastNode.setScriptName("Lerp_burn_edges2")
    lastNode.setLabel("Lerp_burn_edges2")
    lastNode.setPosition(2161, 6395)
    lastNode.setSize(104, 30)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupLerp_burn_edges2 = lastNode


    # Create the user parameters
    lastNode.Controls = lastNode.createPageParam("Controls", "Controls")
    param = lastNode.createSeparatorParam("integer_________", "integer linear interpolation")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.integer_________ = param
    del param

    param = lastNode.createIntParam("i_input", "i_input")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(0, 0)
    lastNode.i_input = param
    del param

    param = lastNode.createInt2DParam("i_input_range", "i_input_range")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)
    param.setDefaultValue(0, 1)
    param.restoreDefaultValue(1)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(100, 1)
    lastNode.i_input_range = param
    del param

    param = lastNode.createInt2DParam("i_lerp_range", "i_lerp_range")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)
    param.setDefaultValue(0, 1)
    param.restoreDefaultValue(1)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(10, 0)
    param.setValue(500, 1)
    lastNode.i_lerp_range = param
    del param

    param = lastNode.createIntParam("i_lerp_result", "i_lerp_result")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(0, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(10, 0)
    lastNode.i_lerp_result = param
    del param

    param = lastNode.createSeparatorParam("float________", "float linear interpolation")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.float________ = param
    del param

    param = lastNode.createDoubleParam("f_input", "f_input")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(24.9, 0)
    lastNode.f_input = param
    del param

    param = lastNode.createDouble2DParam("f_input_range", "f_input_range")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setMinimum(-2147483648, 1)
    param.setMaximum(2147483647, 1)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(100, 1)
    lastNode.f_input_range = param
    del param

    param = lastNode.createDouble2DParam("f_lerp_range", "f_lerp_range")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setMinimum(-2147483648, 1)
    param.setMaximum(2147483647, 1)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(1, 0)
    param.setValue(0.3, 1)
    lastNode.f_lerp_range = param
    del param

    param = lastNode.createDoubleParam("f_lerp_result", "f_lerp_result")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(0.8257, 0)
    lastNode.f_lerp_result = param
    del param

    # Refresh the GUI with the newly created parameters
    lastNode.setPagesOrder(['Controls', 'Node', 'Settings'])
    lastNode.refreshUserParamsGUI()
    del lastNode
    # End of node "Lerp_burn_edges2"

    groupgroup = groupLerp_burn_edges2
    # Create all nodes in the group

    # Create the parameters of the group node the same way we did for all internal nodes
    lastNode = groupgroup
    lastNode.setColor(0.7, 0.7, 0.7)

    # Create the user parameters
    lastNode.Controls = lastNode.createPageParam("Controls", "Controls")
    param = lastNode.createSeparatorParam("integer_________", "integer linear interpolation")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.integer_________ = param
    del param

    param = lastNode.createIntParam("i_input", "i_input")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(0, 0)
    lastNode.i_input = param
    del param

    param = lastNode.createInt2DParam("i_input_range", "i_input_range")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)
    param.setDefaultValue(0, 1)
    param.restoreDefaultValue(1)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(100, 1)
    lastNode.i_input_range = param
    del param

    param = lastNode.createInt2DParam("i_lerp_range", "i_lerp_range")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)
    param.setDefaultValue(0, 1)
    param.restoreDefaultValue(1)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(10, 0)
    param.setValue(500, 1)
    lastNode.i_lerp_range = param
    del param

    param = lastNode.createIntParam("i_lerp_result", "i_lerp_result")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(0, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(10, 0)
    lastNode.i_lerp_result = param
    del param

    param = lastNode.createSeparatorParam("float________", "float linear interpolation")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.float________ = param
    del param

    param = lastNode.createDoubleParam("f_input", "f_input")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(24.9, 0)
    lastNode.f_input = param
    del param

    param = lastNode.createDouble2DParam("f_input_range", "f_input_range")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setMinimum(-2147483648, 1)
    param.setMaximum(2147483647, 1)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(100, 1)
    lastNode.f_input_range = param
    del param

    param = lastNode.createDouble2DParam("f_lerp_range", "f_lerp_range")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setMinimum(-2147483648, 1)
    param.setMaximum(2147483647, 1)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(1, 0)
    param.setValue(0.3, 1)
    lastNode.f_lerp_range = param
    del param

    param = lastNode.createDoubleParam("f_lerp_result", "f_lerp_result")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(0.8257, 0)
    lastNode.f_lerp_result = param
    del param

    # Refresh the GUI with the newly created parameters
    lastNode.setPagesOrder(['Controls', 'Node', 'Settings'])
    lastNode.refreshUserParamsGUI()
    del lastNode

    # Start of node "Input1"
    lastNode = app.createNode("fr.inria.built-in.Input", 1, groupgroup)
    lastNode.setScriptName("Input1")
    lastNode.setLabel("Input1")
    lastNode.setPosition(642, 175)
    lastNode.setSize(104, 30)
    lastNode.setColor(0.3, 0.5, 0.2)
    groupgroupInput1 = lastNode

    del lastNode
    # End of node "Input1"

    # Start of node "Output1"
    lastNode = app.createNode("fr.inria.built-in.Output", 1, groupgroup)
    lastNode.setLabel("Output1")
    lastNode.setPosition(642, 247)
    lastNode.setSize(104, 30)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupgroupOutput1 = lastNode

    del lastNode
    # End of node "Output1"

    # Now that all nodes are created we can connect them together, restore expressions
    groupgroupOutput1.connectInput(0, groupgroupInput1)

    param = groupgroup.getParam("i_input")
    param.setExpression("thisGroup.edge_falloff.get()", False, 0)
    del param
    param = groupgroup.getParam("i_lerp_result")
    param.setExpression("import numpy as np\r\n\r\ni = thisNode.i_input.get()\r\n\r\ni0 = thisNode.i_input_range.get()[0]\r\ni1 = thisNode.i_input_range.get()[1]\r\n\r\nr0 = thisNode.i_lerp_range.get()[0]\r\nr1 = thisNode.i_lerp_range.get()[1]\r\n\r\nir = [i0, i1]\r\nlr = [r0, r1]\r\n\r\ny_new = np.interp(i, ir, lr)\r\nret = y_new\r\n\r\n\r\n", True, 0)
    del param
    param = groupgroup.getParam("f_lerp_result")
    param.setExpression("import numpy as np\r\n\r\ni = thisNode.f_input.get()\r\n\r\ni0 = thisNode.f_input_range.get()[0]\r\ni1 = thisNode.f_input_range.get()[1]\r\n\r\nr0 = thisNode.f_lerp_range.get()[0]\r\nr1 = thisNode.f_lerp_range.get()[1]\r\n\r\nir = [i0, i1]\r\nlr = [r0, r1]\r\n\r\ny_new = np.interp(i, ir, lr)\r\nret = y_new\r\n\r\n\r\n", True, 0)
    del param

    # Start of node "Lerp_edge"
    lastNode = app.createNode("fr.inria.built-in.Group", 1, group)
    lastNode.setScriptName("Lerp_edge")
    lastNode.setLabel("Lerp_edge")
    lastNode.setPosition(2162, 6170)
    lastNode.setSize(104, 30)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupLerp_edge = lastNode


    # Create the user parameters
    lastNode.Controls = lastNode.createPageParam("Controls", "Controls")
    param = lastNode.createSeparatorParam("integer_________", "integer linear interpolation")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.integer_________ = param
    del param

    param = lastNode.createIntParam("i_input", "i_input")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.i_input = param
    del param

    param = lastNode.createInt2DParam("i_input_range", "i_input_range")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)
    param.setDefaultValue(0, 1)
    param.restoreDefaultValue(1)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(100, 1)
    lastNode.i_input_range = param
    del param

    param = lastNode.createInt2DParam("i_lerp_range", "i_lerp_range")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)
    param.setDefaultValue(0, 1)
    param.restoreDefaultValue(1)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(7, 0)
    lastNode.i_lerp_range = param
    del param

    param = lastNode.createIntParam("i_lerp_result", "i_lerp_result")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(0, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(7, 0)
    lastNode.i_lerp_result = param
    del param

    param = lastNode.createSeparatorParam("float________", "float linear interpolation")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.float________ = param
    del param

    param = lastNode.createDoubleParam("f_input", "f_input")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(0, 0)
    lastNode.f_input = param
    del param

    param = lastNode.createDouble2DParam("f_input_range", "f_input_range")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setMinimum(-2147483648, 1)
    param.setMaximum(2147483647, 1)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(100, 1)
    lastNode.f_input_range = param
    del param

    param = lastNode.createDouble2DParam("f_lerp_range", "f_lerp_range")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setMinimum(-2147483648, 1)
    param.setMaximum(2147483647, 1)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(1, 0)
    param.setValue(300, 1)
    lastNode.f_lerp_range = param
    del param

    param = lastNode.createDoubleParam("f_lerp_result", "f_lerp_result")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(1, 0)
    lastNode.f_lerp_result = param
    del param

    # Refresh the GUI with the newly created parameters
    lastNode.setPagesOrder(['Controls', 'Node', 'Settings'])
    lastNode.refreshUserParamsGUI()
    del lastNode
    # End of node "Lerp_edge"

    groupgroup = groupLerp_edge
    # Create all nodes in the group

    # Create the parameters of the group node the same way we did for all internal nodes
    lastNode = groupgroup
    lastNode.setColor(0.7, 0.7, 0.7)

    # Create the user parameters
    lastNode.Controls = lastNode.createPageParam("Controls", "Controls")
    param = lastNode.createSeparatorParam("integer_________", "integer linear interpolation")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.integer_________ = param
    del param

    param = lastNode.createIntParam("i_input", "i_input")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.i_input = param
    del param

    param = lastNode.createInt2DParam("i_input_range", "i_input_range")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)
    param.setDefaultValue(0, 1)
    param.restoreDefaultValue(1)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(100, 1)
    lastNode.i_input_range = param
    del param

    param = lastNode.createInt2DParam("i_lerp_range", "i_lerp_range")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)
    param.setDefaultValue(0, 1)
    param.restoreDefaultValue(1)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(7, 0)
    lastNode.i_lerp_range = param
    del param

    param = lastNode.createIntParam("i_lerp_result", "i_lerp_result")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(0, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(7, 0)
    lastNode.i_lerp_result = param
    del param

    param = lastNode.createSeparatorParam("float________", "float linear interpolation")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.float________ = param
    del param

    param = lastNode.createDoubleParam("f_input", "f_input")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(0, 0)
    lastNode.f_input = param
    del param

    param = lastNode.createDouble2DParam("f_input_range", "f_input_range")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setMinimum(-2147483648, 1)
    param.setMaximum(2147483647, 1)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(100, 1)
    lastNode.f_input_range = param
    del param

    param = lastNode.createDouble2DParam("f_lerp_range", "f_lerp_range")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setMinimum(-2147483648, 1)
    param.setMaximum(2147483647, 1)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(1, 0)
    param.setValue(300, 1)
    lastNode.f_lerp_range = param
    del param

    param = lastNode.createDoubleParam("f_lerp_result", "f_lerp_result")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(1, 0)
    lastNode.f_lerp_result = param
    del param

    # Refresh the GUI with the newly created parameters
    lastNode.setPagesOrder(['Controls', 'Node', 'Settings'])
    lastNode.refreshUserParamsGUI()
    del lastNode

    # Start of node "Input1"
    lastNode = app.createNode("fr.inria.built-in.Input", 1, groupgroup)
    lastNode.setScriptName("Input1")
    lastNode.setLabel("Input1")
    lastNode.setPosition(642, 175)
    lastNode.setSize(104, 30)
    lastNode.setColor(0.3, 0.5, 0.2)
    groupgroupInput1 = lastNode

    del lastNode
    # End of node "Input1"

    # Start of node "Output1"
    lastNode = app.createNode("fr.inria.built-in.Output", 1, groupgroup)
    lastNode.setLabel("Output1")
    lastNode.setPosition(642, 247)
    lastNode.setSize(104, 30)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupgroupOutput1 = lastNode

    del lastNode
    # End of node "Output1"

    # Now that all nodes are created we can connect them together, restore expressions
    groupgroupOutput1.connectInput(0, groupgroupInput1)

    param = groupgroup.getParam("i_lerp_result")
    param.setExpression("import numpy as np\r\n\r\ni = thisNode.i_input.get()\r\n\r\ni0 = thisNode.i_input_range.get()[0]\r\ni1 = thisNode.i_input_range.get()[1]\r\n\r\nr0 = thisNode.i_lerp_range.get()[0]\r\nr1 = thisNode.i_lerp_range.get()[1]\r\n\r\nir = [i0, i1]\r\nlr = [r0, r1]\r\n\r\ny_new = np.interp(i, ir, lr)\r\nret = y_new\r\n\r\n\r\n", True, 0)
    del param
    param = groupgroup.getParam("f_input")
    param.setExpression("thisGroup.thickness.get()", False, 0)
    del param
    param = groupgroup.getParam("f_lerp_result")
    param.setExpression("import numpy as np\r\n\r\ni = thisNode.f_input.get()\r\n\r\ni0 = thisNode.f_input_range.get()[0]\r\ni1 = thisNode.f_input_range.get()[1]\r\n\r\nr0 = thisNode.f_lerp_range.get()[0]\r\nr1 = thisNode.f_lerp_range.get()[1]\r\n\r\nir = [i0, i1]\r\nlr = [r0, r1]\r\n\r\ny_new = np.interp(i, ir, lr)\r\nret = y_new\r\n\r\n\r\n", True, 0)
    del param

    # Start of node "ErodeBlur1"
    lastNode = app.createNode("eu.cimg.ErodeBlur", 4, group)
    lastNode.setScriptName("ErodeBlur1")
    lastNode.setLabel("ErodeBlur1")
    lastNode.setPosition(1824, 6169)
    lastNode.setSize(80, 30)
    lastNode.setColor(0.8, 0.5, 0.3)
    groupErodeBlur1 = lastNode

    param = lastNode.getParam("size")
    if param is not None:
        param.setValue(1, 0)
        del param

    del lastNode
    # End of node "ErodeBlur1"

    # Start of node "Grade7"
    lastNode = app.createNode("net.sf.openfx.GradePlugin", 2, group)
    lastNode.setScriptName("Grade7")
    lastNode.setLabel("Grade7")
    lastNode.setPosition(1815, 6294)
    lastNode.setSize(104, 30)
    lastNode.setColor(0.48, 0.66, 1)
    groupGrade7 = lastNode

    param = lastNode.getParam("NatronOfxParamProcessR")
    if param is not None:
        param.setValue(False)
        del param

    param = lastNode.getParam("NatronOfxParamProcessG")
    if param is not None:
        param.setValue(False)
        del param

    param = lastNode.getParam("NatronOfxParamProcessB")
    if param is not None:
        param.setValue(False)
        del param

    param = lastNode.getParam("NatronOfxParamProcessA")
    if param is not None:
        param.setValue(True)
        del param

    param = lastNode.getParam("gamma")
    if param is not None:
        param.setValue(0.45, 0)
        param.setValue(0.45, 1)
        param.setValue(0.45, 2)
        param.setValue(0.45, 3)
        del param

    del lastNode
    # End of node "Grade7"

    # Start of node "Merge5"
    lastNode = app.createNode("net.sf.openfx.MergePlugin", 1, group)
    lastNode.setScriptName("Merge5")
    lastNode.setLabel("Merge5")
    lastNode.setPosition(1819, 6422)
    lastNode.setSize(104, 40)
    lastNode.setColor(0.3, 0.37, 0.776)
    groupMerge5 = lastNode

    param = lastNode.getParam("operation")
    if param is not None:
        param.set("screen")
        del param

    param = lastNode.getParam("mix")
    if param is not None:
        param.setValue(0.947, 0)
        del param

    param = lastNode.getParam("userTextArea")
    if param is not None:
        param.setValue("<Natron>(over)</Natron>")
        del param

    del lastNode
    # End of node "Merge5"

    # Start of node "Dot7"
    lastNode = app.createNode("fr.inria.built-in.Dot", 1, group)
    lastNode.setScriptName("Dot7")
    lastNode.setLabel("Dot7")
    lastNode.setPosition(1713, 6359)
    lastNode.setSize(15, 15)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupDot7 = lastNode

    del lastNode
    # End of node "Dot7"

    # Start of node "Dot8"
    lastNode = app.createNode("fr.inria.built-in.Dot", 1, group)
    lastNode.setScriptName("Dot8")
    lastNode.setLabel("Dot8")
    lastNode.setPosition(1716, 5089)
    lastNode.setSize(15, 15)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupDot8 = lastNode

    del lastNode
    # End of node "Dot8"

    # Start of node "Grade5"
    lastNode = app.createNode("net.sf.openfx.GradePlugin", 2, group)
    lastNode.setScriptName("Grade5")
    lastNode.setLabel("Grade5")
    lastNode.setPosition(1671, 5286)
    lastNode.setSize(104, 30)
    lastNode.setColor(0.48, 0.66, 1)
    groupGrade5 = lastNode

    param = lastNode.getParam("whitePoint")
    if param is not None:
        param.setValue(1.159, 0)
        param.setValue(1.159, 1)
        param.setValue(1.159, 2)
        param.setValue(1.159, 3)
        del param

    param = lastNode.getParam("white")
    if param is not None:
        param.setValue(1.0755, 0)
        param.setValue(1.0755, 1)
        param.setValue(1.0755, 2)
        param.setValue(1.0755, 3)
        del param

    param = lastNode.getParam("multiply")
    if param is not None:
        param.setValue(1.0755, 0)
        param.setValue(1.0755, 1)
        param.setValue(1.0755, 2)
        param.setValue(1.0755, 3)
        del param

    param = lastNode.getParam("gamma")
    if param is not None:
        param.setValue(0.9245, 0)
        param.setValue(0.9245, 1)
        param.setValue(0.9245, 2)
        param.setValue(0.9245, 3)
        del param

    del lastNode
    # End of node "Grade5"

    # Start of node "Out1"
    lastNode = app.createNode("net.sf.openfx.MergeOut", 1, group)
    lastNode.setScriptName("Out1")
    lastNode.setLabel("Out1")
    lastNode.setPosition(2225, 6773)
    lastNode.setSize(104, 38)
    lastNode.setColor(0.3, 0.37, 0.776)
    groupOut1 = lastNode

    param = lastNode.getParam("operation")
    if param is not None:
        param.set("in")
        del param

    param = lastNode.getParam("userTextArea")
    if param is not None:
        param.setValue("<Natron>(out)</Natron>")
        del param

    del lastNode
    # End of node "Out1"

    # Start of node "Dot12"
    lastNode = app.createNode("fr.inria.built-in.Dot", 1, group)
    lastNode.setScriptName("Dot12")
    lastNode.setLabel("Dot12")
    lastNode.setPosition(2643, 21)
    lastNode.setSize(15, 15)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupDot12 = lastNode

    del lastNode
    # End of node "Dot12"

    # Start of node "Dot13"
    lastNode = app.createNode("fr.inria.built-in.Dot", 1, group)
    lastNode.setScriptName("Dot13")
    lastNode.setLabel("Dot13")
    lastNode.setPosition(2643, 6425)
    lastNode.setSize(15, 15)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupDot13 = lastNode

    del lastNode
    # End of node "Dot13"

    # Start of node "Merge2"
    lastNode = app.createNode("net.sf.openfx.MergePlugin", 1, group)
    lastNode.setScriptName("Merge2")
    lastNode.setLabel("Merge2")
    lastNode.setPosition(964, 8413)
    lastNode.setSize(104, 43)
    lastNode.setColor(0.3, 0.37, 0.776)
    groupMerge2 = lastNode

    param = lastNode.getParam("operation")
    if param is not None:
        param.set("under")
        del param

    param = lastNode.getParam("disableNode")
    if param is not None:
        param.setValue(True)
        del param

    del lastNode
    # End of node "Merge2"

    # Start of node "Shuffle3"
    lastNode = app.createNode("net.sf.openfx.ShufflePlugin", 3, group)
    lastNode.setScriptName("Shuffle3")
    lastNode.setLabel("Shuffle3")
    lastNode.setPosition(2598, 6518)
    lastNode.setSize(104, 30)
    lastNode.setColor(0.6, 0.24, 0.39)
    groupShuffle3 = lastNode

    param = lastNode.getParam("outputA")
    if param is not None:
        param.set("A.uk.co.thefoundry.OfxImagePlaneColour.A")
        del param

    del lastNode
    # End of node "Shuffle3"

    # Start of node "NoOp1"
    lastNode = app.createNode("net.sf.openfx.NoOpPlugin", 2, group)
    lastNode.setScriptName("NoOp1")
    lastNode.setLabel("NoOp1")
    lastNode.setPosition(2804, -1193)
    lastNode.setSize(104, 30)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupNoOp1 = lastNode

    param = lastNode.getParam("NatronParamFormatChoice")
    if param is not None:
        param.set("PC_Video")
        del param

    param = lastNode.getParam("size")
    if param is not None:
        param.setValue(1024, 0)
        param.setValue(1024, 1)
        del param

    del lastNode
    # End of node "NoOp1"

    # Start of node "Dot10"
    lastNode = app.createNode("fr.inria.built-in.Dot", 1, group)
    lastNode.setScriptName("Dot10")
    lastNode.setLabel("Dot10")
    lastNode.setPosition(2740, 7645)
    lastNode.setSize(15, 15)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupDot10 = lastNode

    del lastNode
    # End of node "Dot10"

    # Start of node "Out3"
    lastNode = app.createNode("net.sf.openfx.MergeOut", 1, group)
    lastNode.setScriptName("Out3")
    lastNode.setLabel("Out3")
    lastNode.setPosition(3393, 7318)
    lastNode.setSize(104, 38)
    lastNode.setColor(0.3, 0.37, 0.776)
    groupOut3 = lastNode

    param = lastNode.getParam("userTextArea")
    if param is not None:
        param.setValue("<Natron>(out)</Natron>")
        del param

    del lastNode
    # End of node "Out3"

    # Start of node "Transform3"
    lastNode = app.createNode("net.sf.openfx.TransformPlugin", 1, group)
    lastNode.setScriptName("Transform3")
    lastNode.setLabel("Transform3")
    lastNode.setPosition(3588, 6859)
    lastNode.setSize(104, 30)
    lastNode.setColor(0.7, 0.3, 0.1)
    groupTransform3 = lastNode

    param = lastNode.getParam("translate")
    if param is not None:
        param.setValue(15, 1)
        del param

    param = lastNode.getParam("transformCenterChanged")
    if param is not None:
        param.setValue(True)
        del param

    del lastNode
    # End of node "Transform3"

    # Start of node "In2"
    lastNode = app.createNode("net.sf.openfx.MergeIn", 1, group)
    lastNode.setScriptName("In2")
    lastNode.setLabel("In2")
    lastNode.setPosition(3601, 7047)
    lastNode.setSize(104, 38)
    lastNode.setColor(0.3, 0.37, 0.776)
    groupIn2 = lastNode

    param = lastNode.getParam("operation")
    if param is not None:
        param.set("minus")
        del param

    param = lastNode.getParam("userTextArea")
    if param is not None:
        param.setValue("<Natron>(in)</Natron>")
        del param

    del lastNode
    # End of node "In2"

    # Start of node "Grade_highlight"
    lastNode = app.createNode("net.sf.openfx.GradePlugin", 2, group)
    lastNode.setScriptName("Grade_highlight")
    lastNode.setLabel("Grade_highlight")
    lastNode.setPosition(2969, 8475)
    lastNode.setSize(104, 30)
    lastNode.setColor(0.48, 0.66, 1)
    groupGrade_highlight = lastNode

    param = lastNode.getParam("white")
    if param is not None:
        param.setValue(1.538, 0)
        param.setValue(1.538, 1)
        param.setValue(1.538, 2)
        param.setValue(1.538, 3)
        del param

    param = lastNode.getParam("multiply")
    if param is not None:
        param.setValue(1.098, 0)
        param.setValue(1.098, 1)
        param.setValue(1.098, 2)
        param.setValue(1.098, 3)
        del param

    param = lastNode.getParam("gamma")
    if param is not None:
        param.setValue(1.553, 0)
        param.setValue(1.553, 1)
        param.setValue(1.553, 2)
        param.setValue(1.553, 3)
        del param

    param = lastNode.getParam("mix")
    if param is not None:
        param.setValue(0, 0)
        del param

    param = lastNode.getParam("premultChanged")
    if param is not None:
        param.setValue(True)
        del param

    param = lastNode.getParam("enableMask_Mask")
    if param is not None:
        param.setValue(True)
        del param

    del lastNode
    # End of node "Grade_highlight"

    # Start of node "Clamp4"
    lastNode = app.createNode("net.sf.openfx.Clamp", 2, group)
    lastNode.setScriptName("Clamp4")
    lastNode.setLabel("Clamp4")
    lastNode.setPosition(3437, 8646)
    lastNode.setSize(104, 30)
    lastNode.setColor(0.48, 0.66, 1)
    groupClamp4 = lastNode

    param = lastNode.getParam("minClampToEnable")
    if param is not None:
        param.setValue(True)
        del param

    param = lastNode.getParam("maxClampToEnable")
    if param is not None:
        param.setValue(True)
        del param

    param = lastNode.getParam("premult")
    if param is not None:
        param.setValue(True)
        del param

    del lastNode
    # End of node "Clamp4"

    # Start of node "Merge1"
    lastNode = app.createNode("net.sf.openfx.MergePlugin", 1, group)
    lastNode.setScriptName("Merge1")
    lastNode.setLabel("Merge1")
    lastNode.setPosition(3861, 6985)
    lastNode.setSize(104, 40)
    lastNode.setColor(0.3, 0.37, 0.776)
    groupMerge1 = lastNode

    param = lastNode.getParam("operation")
    if param is not None:
        param.set("from")
        del param

    param = lastNode.getParam("userTextArea")
    if param is not None:
        param.setValue("<Natron>(over)</Natron>")
        del param

    del lastNode
    # End of node "Merge1"

    # Start of node "EdgeExtend1_2"
    lastNode = app.createNode("eu.cimg.EdgeExtend", 4, group)
    lastNode.setScriptName("EdgeExtend1_2")
    lastNode.setLabel("EdgeExtend1_2")
    lastNode.setPosition(3857, 7183)
    lastNode.setSize(104, 30)
    lastNode.setColor(0.8, 0.5, 0.3)
    groupEdgeExtend1_2 = lastNode

    param = lastNode.getParam("edgeExtendSize")
    if param is not None:
        param.setValue(84.90000000000001, 0)
        del param

    param = lastNode.getParam("edgeExtendSlices")
    if param is not None:
        param.setValue(3, 0)
        del param

    param = lastNode.getParam("filter")
    if param is not None:
        param.set("box")
        del param

    del lastNode
    # End of node "EdgeExtend1_2"

    # Start of node "Out3_2"
    lastNode = app.createNode("net.sf.openfx.MergeOut", 1, group)
    lastNode.setScriptName("Out3_2")
    lastNode.setLabel("Out3_2")
    lastNode.setPosition(3600, 7318)
    lastNode.setSize(104, 38)
    lastNode.setColor(0.3, 0.37, 0.776)
    groupOut3_2 = lastNode

    param = lastNode.getParam("userTextArea")
    if param is not None:
        param.setValue("<Natron>(out)</Natron>")
        del param

    del lastNode
    # End of node "Out3_2"

    # Start of node "Clamp6"
    lastNode = app.createNode("net.sf.openfx.Clamp", 2, group)
    lastNode.setScriptName("Clamp6")
    lastNode.setLabel("Clamp6")
    lastNode.setPosition(3600, 8526)
    lastNode.setSize(104, 30)
    lastNode.setColor(0.48, 0.66, 1)
    groupClamp6 = lastNode

    param = lastNode.getParam("minClampToEnable")
    if param is not None:
        param.setValue(True)
        del param

    param = lastNode.getParam("maxClampToEnable")
    if param is not None:
        param.setValue(True)
        del param

    param = lastNode.getParam("premult")
    if param is not None:
        param.setValue(True)
        del param

    del lastNode
    # End of node "Clamp6"

    # Start of node "Grade_shadow"
    lastNode = app.createNode("net.sf.openfx.GradePlugin", 2, group)
    lastNode.setScriptName("Grade_shadow")
    lastNode.setLabel("Grade_shadow")
    lastNode.setPosition(2969, 8387)
    lastNode.setSize(104, 30)
    lastNode.setColor(0.48, 0.66, 1)
    groupGrade_shadow = lastNode

    param = lastNode.getParam("NatronOfxParamProcessA")
    if param is not None:
        param.setValue(True)
        del param

    param = lastNode.getParam("white")
    if param is not None:
        param.setValue(0.643, 0)
        param.setValue(0.643, 1)
        param.setValue(0.643, 2)
        param.setValue(0.643, 3)
        del param

    param = lastNode.getParam("multiply")
    if param is not None:
        param.setValue(0.343, 0)
        param.setValue(0.343, 1)
        param.setValue(0.343, 2)
        param.setValue(0.343, 3)
        del param

    param = lastNode.getParam("gamma")
    if param is not None:
        param.setValue(0.611, 0)
        param.setValue(0.611, 1)
        param.setValue(0.611, 2)
        param.setValue(0.611, 3)
        del param

    param = lastNode.getParam("clampWhite")
    if param is not None:
        param.setValue(True)
        del param

    param = lastNode.getParam("premult")
    if param is not None:
        param.setValue(True)
        del param

    param = lastNode.getParam("mix")
    if param is not None:
        param.setValue(0, 0)
        del param

    param = lastNode.getParam("enableMask_Mask")
    if param is not None:
        param.setValue(True)
        del param

    del lastNode
    # End of node "Grade_shadow"

    # Start of node "Dot14"
    lastNode = app.createNode("fr.inria.built-in.Dot", 1, group)
    lastNode.setScriptName("Dot14")
    lastNode.setLabel("Dot14")
    lastNode.setPosition(3430, 6785)
    lastNode.setSize(15, 15)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupDot14 = lastNode

    del lastNode
    # End of node "Dot14"

    # Start of node "Switch2_3"
    lastNode = app.createNode("net.sf.openfx.switchPlugin", 1, group)
    lastNode.setScriptName("Switch2_3")
    lastNode.setLabel("Switch2_3")
    lastNode.setPosition(1683, 8310)
    lastNode.setSize(104, 30)
    lastNode.setColor(0.3, 0.37, 0.776)
    groupSwitch2_3 = lastNode

    param = lastNode.getParam("which")
    if param is not None:
        param.setValue(1, 0)
        del param

    del lastNode
    # End of node "Switch2_3"

    # Start of node "Merge36"
    lastNode = app.createNode("net.sf.openfx.MergePlugin", 1, group)
    lastNode.setScriptName("Merge36")
    lastNode.setLabel("Merge1_4")
    lastNode.setPosition(3126, 8604)
    lastNode.setSize(104, 40)
    lastNode.setColor(0.3, 0.37, 0.776)
    groupMerge36 = lastNode

    param = lastNode.getParam("userTextArea")
    if param is not None:
        param.setValue("<Natron>(over)</Natron>")
        del param

    del lastNode
    # End of node "Merge36"

    # Start of node "Read24"
    lastNode = app.createNode("fr.inria.built-in.Read", 1, group)
    lastNode.setScriptName("Read24")
    lastNode.setLabel("Read_00_3")
    lastNode.setPosition(1455, 9099)
    lastNode.setSize(128, 78)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupRead24 = lastNode

    param = lastNode.getParam("decodingPluginID")
    if param is not None:
        param.setValue("fr.inria.openfx.ReadPNG")
        del param

    param = lastNode.getParam("filename")
    if param is not None:
        param.setValue("[Project]/../.cache/output/####-layer-00.png")
        del param

    param = lastNode.getParam("onMissingFrame")
    if param is not None:
        param.set("black")
        del param

    param = lastNode.getParam("timeDomainUserEdited")
    if param is not None:
        param.setValue(True)
        del param

    param = lastNode.getParam("filePremult")
    if param is not None:
        param.set("unpremult")
        del param

    param = lastNode.getParam("ParamExistingInstance")
    if param is not None:
        param.setValue(True)
        del param

    del lastNode
    # End of node "Read24"

    # Start of node "Read25"
    lastNode = app.createNode("fr.inria.built-in.Read", 1, group)
    lastNode.setScriptName("Read25")
    lastNode.setLabel("Read_01_3")
    lastNode.setPosition(1603, 9098)
    lastNode.setSize(128, 78)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupRead25 = lastNode

    param = lastNode.getParam("decodingPluginID")
    if param is not None:
        param.setValue("fr.inria.openfx.ReadPNG")
        del param

    param = lastNode.getParam("filename")
    if param is not None:
        param.setValue("[Project]/../.cache/output/####-layer-01.png")
        del param

    param = lastNode.getParam("onMissingFrame")
    if param is not None:
        param.set("black")
        del param

    param = lastNode.getParam("timeDomainUserEdited")
    if param is not None:
        param.setValue(True)
        del param

    param = lastNode.getParam("filePremult")
    if param is not None:
        param.set("unpremult")
        del param

    param = lastNode.getParam("ParamExistingInstance")
    if param is not None:
        param.setValue(True)
        del param

    del lastNode
    # End of node "Read25"

    # Start of node "Read26"
    lastNode = app.createNode("fr.inria.built-in.Read", 1, group)
    lastNode.setScriptName("Read26")
    lastNode.setLabel("Read_02_3")
    lastNode.setPosition(1756, 9097)
    lastNode.setSize(128, 78)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupRead26 = lastNode

    param = lastNode.getParam("decodingPluginID")
    if param is not None:
        param.setValue("fr.inria.openfx.ReadPNG")
        del param

    param = lastNode.getParam("filename")
    if param is not None:
        param.setValue("[Project]/../.cache/output/####-layer-02.png")
        del param

    param = lastNode.getParam("filePremult")
    if param is not None:
        param.set("unpremult")
        del param

    param = lastNode.getParam("ParamExistingInstance")
    if param is not None:
        param.setValue(True)
        del param

    del lastNode
    # End of node "Read26"

    # Start of node "Read27"
    lastNode = app.createNode("fr.inria.built-in.Read", 1, group)
    lastNode.setScriptName("Read27")
    lastNode.setLabel("Read_03_3")
    lastNode.setPosition(1913, 9105)
    lastNode.setSize(128, 78)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupRead27 = lastNode

    param = lastNode.getParam("decodingPluginID")
    if param is not None:
        param.setValue("fr.inria.openfx.ReadPNG")
        del param

    param = lastNode.getParam("filename")
    if param is not None:
        param.setValue("[Project]/../.cache/output/####-layer-03.png")
        del param

    param = lastNode.getParam("filePremult")
    if param is not None:
        param.set("unpremult")
        del param

    param = lastNode.getParam("ParamExistingInstance")
    if param is not None:
        param.setValue(True)
        del param

    del lastNode
    # End of node "Read27"

    # Start of node "Read28"
    lastNode = app.createNode("fr.inria.built-in.Read", 1, group)
    lastNode.setScriptName("Read28")
    lastNode.setLabel("Read_04_3")
    lastNode.setPosition(2069, 9102)
    lastNode.setSize(128, 78)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupRead28 = lastNode

    param = lastNode.getParam("decodingPluginID")
    if param is not None:
        param.setValue("fr.inria.openfx.ReadPNG")
        del param

    param = lastNode.getParam("filename")
    if param is not None:
        param.setValue("[Project]/../.cache/output/####-layer-04.png")
        del param

    param = lastNode.getParam("filePremult")
    if param is not None:
        param.set("unpremult")
        del param

    param = lastNode.getParam("ParamExistingInstance")
    if param is not None:
        param.setValue(True)
        del param

    del lastNode
    # End of node "Read28"

    # Start of node "Read29"
    lastNode = app.createNode("fr.inria.built-in.Read", 1, group)
    lastNode.setScriptName("Read29")
    lastNode.setLabel("Read_05_3")
    lastNode.setPosition(2215, 9095)
    lastNode.setSize(128, 78)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupRead29 = lastNode

    param = lastNode.getParam("decodingPluginID")
    if param is not None:
        param.setValue("fr.inria.openfx.ReadPNG")
        del param

    param = lastNode.getParam("filename")
    if param is not None:
        param.setValue("[Project]/../.cache/output/####-layer-05.png")
        del param

    param = lastNode.getParam("filePremult")
    if param is not None:
        param.set("unpremult")
        del param

    param = lastNode.getParam("ParamExistingInstance")
    if param is not None:
        param.setValue(True)
        del param

    del lastNode
    # End of node "Read29"

    # Start of node "Read30"
    lastNode = app.createNode("fr.inria.built-in.Read", 1, group)
    lastNode.setScriptName("Read30")
    lastNode.setLabel("Read_06_3")
    lastNode.setPosition(2368, 9099)
    lastNode.setSize(128, 78)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupRead30 = lastNode

    param = lastNode.getParam("decodingPluginID")
    if param is not None:
        param.setValue("fr.inria.openfx.ReadPNG")
        del param

    param = lastNode.getParam("filename")
    if param is not None:
        param.setValue("[Project]/../.cache/output/####-layer-06.png")
        del param

    param = lastNode.getParam("onMissingFrame")
    if param is not None:
        param.set("black")
        del param

    param = lastNode.getParam("timeDomainUserEdited")
    if param is not None:
        param.setValue(True)
        del param

    param = lastNode.getParam("filePremult")
    if param is not None:
        param.set("unpremult")
        del param

    param = lastNode.getParam("ParamExistingInstance")
    if param is not None:
        param.setValue(True)
        del param

    del lastNode
    # End of node "Read30"

    # Start of node "Read31"
    lastNode = app.createNode("fr.inria.built-in.Read", 1, group)
    lastNode.setScriptName("Read31")
    lastNode.setLabel("Read_07_3")
    lastNode.setPosition(2515, 9100)
    lastNode.setSize(128, 78)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupRead31 = lastNode

    param = lastNode.getParam("decodingPluginID")
    if param is not None:
        param.setValue("fr.inria.openfx.ReadPNG")
        del param

    param = lastNode.getParam("filename")
    if param is not None:
        param.setValue("[Project]/../.cache/output/####-layer-07.png")
        del param

    param = lastNode.getParam("filePremult")
    if param is not None:
        param.set("unpremult")
        del param

    param = lastNode.getParam("ParamExistingInstance")
    if param is not None:
        param.setValue(True)
        del param

    del lastNode
    # End of node "Read31"

    # Start of node "Read32"
    lastNode = app.createNode("fr.inria.built-in.Read", 1, group)
    lastNode.setScriptName("Read32")
    lastNode.setLabel("Read_08_3")
    lastNode.setPosition(2665, 9100)
    lastNode.setSize(128, 78)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupRead32 = lastNode

    param = lastNode.getParam("decodingPluginID")
    if param is not None:
        param.setValue("fr.inria.openfx.ReadPNG")
        del param

    param = lastNode.getParam("filename")
    if param is not None:
        param.setValue("[Project]/../.cache/output/####-layer-08.png")
        del param

    param = lastNode.getParam("onMissingFrame")
    if param is not None:
        param.set("black")
        del param

    del lastNode
    # End of node "Read32"

    # Start of node "Read33"
    lastNode = app.createNode("fr.inria.built-in.Read", 1, group)
    lastNode.setScriptName("Read33")
    lastNode.setLabel("Read_09_3")
    lastNode.setPosition(2812, 9099)
    lastNode.setSize(128, 78)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupRead33 = lastNode

    param = lastNode.getParam("decodingPluginID")
    if param is not None:
        param.setValue("fr.inria.openfx.ReadPNG")
        del param

    param = lastNode.getParam("filename")
    if param is not None:
        param.setValue("[Project]/../.cache/output/####-layer-09.png")
        del param

    param = lastNode.getParam("lastFrame")
    if param is not None:
        param.setValue(10000, 0)
        del param

    param = lastNode.getParam("onMissingFrame")
    if param is not None:
        param.set("black")
        del param

    param = lastNode.getParam("timeDomainUserEdited")
    if param is not None:
        param.setValue(True)
        del param

    param = lastNode.getParam("filePremult")
    if param is not None:
        param.set("unpremult")
        del param

    param = lastNode.getParam("ParamExistingInstance")
    if param is not None:
        param.setValue(True)
        del param

    del lastNode
    # End of node "Read33"

    # Start of node "Read34"
    lastNode = app.createNode("fr.inria.built-in.Read", 1, group)
    lastNode.setScriptName("Read34")
    lastNode.setLabel("Read_10_3")
    lastNode.setPosition(2974, 9098)
    lastNode.setSize(128, 78)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupRead34 = lastNode

    param = lastNode.getParam("decodingPluginID")
    if param is not None:
        param.setValue("fr.inria.openfx.ReadPNG")
        del param

    param = lastNode.getParam("filename")
    if param is not None:
        param.setValue("[Project]/../.cache/output/####-layer-10.png")
        del param

    param = lastNode.getParam("lastFrame")
    if param is not None:
        param.setValue(10000, 0)
        del param

    param = lastNode.getParam("onMissingFrame")
    if param is not None:
        param.set("black")
        del param

    param = lastNode.getParam("timeDomainUserEdited")
    if param is not None:
        param.setValue(True)
        del param

    param = lastNode.getParam("ParamExistingInstance")
    if param is not None:
        param.setValue(True)
        del param

    del lastNode
    # End of node "Read34"

    # Start of node "Read35"
    lastNode = app.createNode("fr.inria.built-in.Read", 1, group)
    lastNode.setScriptName("Read35")
    lastNode.setLabel("Read_11_3")
    lastNode.setPosition(3114, 9093)
    lastNode.setSize(128, 78)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupRead35 = lastNode

    param = lastNode.getParam("decodingPluginID")
    if param is not None:
        param.setValue("fr.inria.openfx.ReadPNG")
        del param

    param = lastNode.getParam("userTextArea")
    if param is not None:
        param.setValue("<Natron>(0000-layer-11.png)</Natron>")
        del param

    param = lastNode.getParam("filename")
    if param is not None:
        param.setValue("[Project]/../.cache/output/####-layer-11.png")
        del param

    param = lastNode.getParam("lastFrame")
    if param is not None:
        param.setValue(10000, 0)
        del param

    param = lastNode.getParam("onMissingFrame")
    if param is not None:
        param.set("black")
        del param

    param = lastNode.getParam("timeDomainUserEdited")
    if param is not None:
        param.setValue(True)
        del param

    param = lastNode.getParam("ParamExistingInstance")
    if param is not None:
        param.setValue(True)
        del param

    del lastNode
    # End of node "Read35"

    # Start of node "Read36"
    lastNode = app.createNode("fr.inria.built-in.Read", 1, group)
    lastNode.setScriptName("Read36")
    lastNode.setLabel("Read_12_3")
    lastNode.setPosition(3258, 9095)
    lastNode.setSize(128, 78)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupRead36 = lastNode

    param = lastNode.getParam("decodingPluginID")
    if param is not None:
        param.setValue("fr.inria.openfx.ReadPNG")
        del param

    param = lastNode.getParam("userTextArea")
    if param is not None:
        param.setValue("<Natron>(0000-layer-12.png)</Natron>")
        del param

    param = lastNode.getParam("filename")
    if param is not None:
        param.setValue("[Project]/../.cache/output/####-layer-12.png")
        del param

    param = lastNode.getParam("onMissingFrame")
    if param is not None:
        param.set("black")
        del param

    param = lastNode.getParam("timeDomainUserEdited")
    if param is not None:
        param.setValue(True)
        del param

    param = lastNode.getParam("ParamExistingInstance")
    if param is not None:
        param.setValue(True)
        del param

    del lastNode
    # End of node "Read36"

    # Start of node "Read37"
    lastNode = app.createNode("fr.inria.built-in.Read", 1, group)
    lastNode.setScriptName("Read37")
    lastNode.setLabel("Read_13_3")
    lastNode.setPosition(3410, 9093)
    lastNode.setSize(128, 78)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupRead37 = lastNode

    param = lastNode.getParam("decodingPluginID")
    if param is not None:
        param.setValue("fr.inria.openfx.ReadPNG")
        del param

    param = lastNode.getParam("userTextArea")
    if param is not None:
        param.setValue("<Natron>(0000-layer-13.png)</Natron>")
        del param

    param = lastNode.getParam("filename")
    if param is not None:
        param.setValue("[Project]/../.cache/output/####-layer-13.png")
        del param

    param = lastNode.getParam("onMissingFrame")
    if param is not None:
        param.set("black")
        del param

    param = lastNode.getParam("timeDomainUserEdited")
    if param is not None:
        param.setValue(True)
        del param

    param = lastNode.getParam("ParamExistingInstance")
    if param is not None:
        param.setValue(True)
        del param

    del lastNode
    # End of node "Read37"

    # Start of node "Read38"
    lastNode = app.createNode("fr.inria.built-in.Read", 1, group)
    lastNode.setScriptName("Read38")
    lastNode.setLabel("Read_14_3")
    lastNode.setPosition(3557, 9093)
    lastNode.setSize(128, 78)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupRead38 = lastNode

    param = lastNode.getParam("decodingPluginID")
    if param is not None:
        param.setValue("fr.inria.openfx.ReadPNG")
        del param

    param = lastNode.getParam("userTextArea")
    if param is not None:
        param.setValue("<Natron>(0000-layer-14.png)</Natron>")
        del param

    param = lastNode.getParam("filename")
    if param is not None:
        param.setValue("[Project]/../.cache/output/####-layer-14.png")
        del param

    param = lastNode.getParam("lastFrame")
    if param is not None:
        param.setValue(10000, 0)
        del param

    param = lastNode.getParam("onMissingFrame")
    if param is not None:
        param.set("black")
        del param

    param = lastNode.getParam("timeDomainUserEdited")
    if param is not None:
        param.setValue(True)
        del param

    param = lastNode.getParam("ParamExistingInstance")
    if param is not None:
        param.setValue(True)
        del param

    del lastNode
    # End of node "Read38"

    # Start of node "Read39"
    lastNode = app.createNode("fr.inria.built-in.Read", 1, group)
    lastNode.setScriptName("Read39")
    lastNode.setLabel("Read_15_3")
    lastNode.setPosition(3705, 9092)
    lastNode.setSize(128, 78)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupRead39 = lastNode

    param = lastNode.getParam("decodingPluginID")
    if param is not None:
        param.setValue("fr.inria.openfx.ReadPNG")
        del param

    param = lastNode.getParam("userTextArea")
    if param is not None:
        param.setValue("<Natron>(0000-layer-15.png)</Natron>")
        del param

    param = lastNode.getParam("filename")
    if param is not None:
        param.setValue("[Project]/../.cache/output/####-layer-15.png")
        del param

    param = lastNode.getParam("lastFrame")
    if param is not None:
        param.setValue(10000, 0)
        del param

    param = lastNode.getParam("onMissingFrame")
    if param is not None:
        param.set("black")
        del param

    param = lastNode.getParam("timeDomainUserEdited")
    if param is not None:
        param.setValue(True)
        del param

    param = lastNode.getParam("ParamExistingInstance")
    if param is not None:
        param.setValue(True)
        del param

    del lastNode
    # End of node "Read39"

    # Start of node "Read40"
    lastNode = app.createNode("fr.inria.built-in.Read", 1, group)
    lastNode.setScriptName("Read40")
    lastNode.setLabel("Read_16_3")
    lastNode.setPosition(3864, 9092)
    lastNode.setSize(128, 78)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupRead40 = lastNode

    param = lastNode.getParam("decodingPluginID")
    if param is not None:
        param.setValue("fr.inria.openfx.ReadPNG")
        del param

    param = lastNode.getParam("userTextArea")
    if param is not None:
        param.setValue("<Natron>(0000-layer-16.png)</Natron>")
        del param

    param = lastNode.getParam("filename")
    if param is not None:
        param.setValue("[Project]/../.cache/output/####-layer-16.png")
        del param

    param = lastNode.getParam("lastFrame")
    if param is not None:
        param.setValue(10000, 0)
        del param

    param = lastNode.getParam("onMissingFrame")
    if param is not None:
        param.set("black")
        del param

    param = lastNode.getParam("timeDomainUserEdited")
    if param is not None:
        param.setValue(True)
        del param

    param = lastNode.getParam("ParamExistingInstance")
    if param is not None:
        param.setValue(True)
        del param

    del lastNode
    # End of node "Read40"

    # Start of node "Read41"
    lastNode = app.createNode("fr.inria.built-in.Read", 1, group)
    lastNode.setScriptName("Read41")
    lastNode.setLabel("Read_17_3")
    lastNode.setPosition(4014, 9092)
    lastNode.setSize(128, 78)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupRead41 = lastNode

    param = lastNode.getParam("decodingPluginID")
    if param is not None:
        param.setValue("fr.inria.openfx.ReadPNG")
        del param

    param = lastNode.getParam("userTextArea")
    if param is not None:
        param.setValue("<Natron>(0000-layer-17.png)</Natron>")
        del param

    param = lastNode.getParam("filename")
    if param is not None:
        param.setValue("[Project]/../.cache/output/####-layer-17.png")
        del param

    param = lastNode.getParam("lastFrame")
    if param is not None:
        param.setValue(10000, 0)
        del param

    param = lastNode.getParam("onMissingFrame")
    if param is not None:
        param.set("black")
        del param

    param = lastNode.getParam("timeDomainUserEdited")
    if param is not None:
        param.setValue(True)
        del param

    param = lastNode.getParam("ParamExistingInstance")
    if param is not None:
        param.setValue(True)
        del param

    del lastNode
    # End of node "Read41"

    # Start of node "Read42"
    lastNode = app.createNode("fr.inria.built-in.Read", 1, group)
    lastNode.setScriptName("Read42")
    lastNode.setLabel("Read_18_3")
    lastNode.setPosition(4165, 9090)
    lastNode.setSize(128, 78)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupRead42 = lastNode

    param = lastNode.getParam("decodingPluginID")
    if param is not None:
        param.setValue("fr.inria.openfx.ReadPNG")
        del param

    param = lastNode.getParam("userTextArea")
    if param is not None:
        param.setValue("<Natron>(0000-layer-18.png)</Natron>")
        del param

    param = lastNode.getParam("filename")
    if param is not None:
        param.setValue("[Project]/../.cache/output/####-layer-18.png")
        del param

    param = lastNode.getParam("lastFrame")
    if param is not None:
        param.setValue(10000, 0)
        del param

    param = lastNode.getParam("onMissingFrame")
    if param is not None:
        param.set("black")
        del param

    param = lastNode.getParam("timeDomainUserEdited")
    if param is not None:
        param.setValue(True)
        del param

    param = lastNode.getParam("ParamExistingInstance")
    if param is not None:
        param.setValue(True)
        del param

    del lastNode
    # End of node "Read42"

    # Start of node "Read43"
    lastNode = app.createNode("fr.inria.built-in.Read", 1, group)
    lastNode.setScriptName("Read43")
    lastNode.setLabel("Read_19_3")
    lastNode.setPosition(4314, 9092)
    lastNode.setSize(128, 78)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupRead43 = lastNode

    param = lastNode.getParam("decodingPluginID")
    if param is not None:
        param.setValue("fr.inria.openfx.ReadPNG")
        del param

    param = lastNode.getParam("userTextArea")
    if param is not None:
        param.setValue("<Natron>(0000-layer-19.png)</Natron>")
        del param

    param = lastNode.getParam("filename")
    if param is not None:
        param.setValue("[Project]/../.cache/output/####-layer-19.png")
        del param

    param = lastNode.getParam("lastFrame")
    if param is not None:
        param.setValue(10000, 0)
        del param

    param = lastNode.getParam("onMissingFrame")
    if param is not None:
        param.set("black")
        del param

    param = lastNode.getParam("timeDomainUserEdited")
    if param is not None:
        param.setValue(True)
        del param

    param = lastNode.getParam("ParamExistingInstance")
    if param is not None:
        param.setValue(True)
        del param

    del lastNode
    # End of node "Read43"

    # Start of node "Read44"
    lastNode = app.createNode("fr.inria.built-in.Read", 1, group)
    lastNode.setScriptName("Read44")
    lastNode.setLabel("Read_20_3")
    lastNode.setPosition(4479, 9088)
    lastNode.setSize(128, 78)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupRead44 = lastNode

    param = lastNode.getParam("decodingPluginID")
    if param is not None:
        param.setValue("fr.inria.openfx.ReadPNG")
        del param

    param = lastNode.getParam("userTextArea")
    if param is not None:
        param.setValue("<Natron>(0000-layer-20.png)</Natron>")
        del param

    param = lastNode.getParam("filename")
    if param is not None:
        param.setValue("[Project]/../.cache/output/####-layer-20.png")
        del param

    param = lastNode.getParam("onMissingFrame")
    if param is not None:
        param.set("black")
        del param

    param = lastNode.getParam("timeDomainUserEdited")
    if param is not None:
        param.setValue(True)
        del param

    param = lastNode.getParam("ParamExistingInstance")
    if param is not None:
        param.setValue(True)
        del param

    del lastNode
    # End of node "Read44"

    # Start of node "Dot21"
    lastNode = app.createNode("fr.inria.built-in.Dot", 1, group)
    lastNode.setScriptName("Dot21")
    lastNode.setLabel("Dot21")
    lastNode.setPosition(3438, 7180)
    lastNode.setSize(15, 15)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupDot21 = lastNode

    del lastNode
    # End of node "Dot21"

    # Start of node "Transform4"
    lastNode = app.createNode("net.sf.openfx.TransformPlugin", 1, group)
    lastNode.setScriptName("Transform4")
    lastNode.setLabel("Transform4")
    lastNode.setPosition(3849, 6773)
    lastNode.setSize(104, 30)
    lastNode.setColor(0.7, 0.3, 0.1)
    groupTransform4 = lastNode

    param = lastNode.getParam("translate")
    if param is not None:
        param.setValue(15, 1)
        del param

    param = lastNode.getParam("transformCenterChanged")
    if param is not None:
        param.setValue(True)
        del param

    del lastNode
    # End of node "Transform4"

    # Start of node "Dot22"
    lastNode = app.createNode("fr.inria.built-in.Dot", 1, group)
    lastNode.setScriptName("Dot22")
    lastNode.setLabel("Dot22")
    lastNode.setPosition(3722, 6785)
    lastNode.setSize(15, 15)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupDot22 = lastNode

    del lastNode
    # End of node "Dot22"

    # Start of node "Merge3"
    lastNode = app.createNode("net.sf.openfx.MergePlugin", 1, group)
    lastNode.setScriptName("Merge3")
    lastNode.setLabel("Merge3")
    lastNode.setPosition(3220, 7722)
    lastNode.setSize(104, 40)
    lastNode.setColor(0.3, 0.37, 0.776)
    groupMerge3 = lastNode

    param = lastNode.getParam("userTextArea")
    if param is not None:
        param.setValue("<Natron>(over)</Natron>")
        del param

    del lastNode
    # End of node "Merge3"

    # Start of node "Merge4"
    lastNode = app.createNode("net.sf.openfx.MergePlugin", 1, group)
    lastNode.setScriptName("Merge4")
    lastNode.setLabel("Merge4")
    lastNode.setPosition(1615, 9381)
    lastNode.setSize(104, 40)
    lastNode.setColor(0.3, 0.37, 0.776)
    groupMerge4 = lastNode

    param = lastNode.getParam("userTextArea")
    if param is not None:
        param.setValue("<Natron>(over)</Natron>")
        del param

    del lastNode
    # End of node "Merge4"

    # Start of node "Gradelight"
    lastNode = app.createNode("net.sf.openfx.GradePlugin", 2, group)
    lastNode.setScriptName("Gradelight")
    lastNode.setLabel("Gradelight")
    lastNode.setPosition(3393, 7532)
    lastNode.setSize(104, 30)
    lastNode.setColor(0.48, 0.66, 1)
    groupGradelight = lastNode

    param = lastNode.getParam("NatronOfxParamProcessR")
    if param is not None:
        param.setValue(False)
        del param

    param = lastNode.getParam("NatronOfxParamProcessG")
    if param is not None:
        param.setValue(False)
        del param

    param = lastNode.getParam("NatronOfxParamProcessB")
    if param is not None:
        param.setValue(False)
        del param

    param = lastNode.getParam("NatronOfxParamProcessA")
    if param is not None:
        param.setValue(True)
        del param

    param = lastNode.getParam("white")
    if param is not None:
        param.setValue(0.871, 0)
        param.setValue(0.871, 1)
        param.setValue(0.871, 2)
        param.setValue(0.871, 3)
        del param

    param = lastNode.getParam("multiply")
    if param is not None:
        param.setValue(1.091, 0)
        param.setValue(1.091, 1)
        param.setValue(1.091, 2)
        param.setValue(1.091, 3)
        del param

    param = lastNode.getParam("gamma")
    if param is not None:
        param.setValue(1.579, 0)
        param.setValue(1.579, 1)
        param.setValue(1.579, 2)
        param.setValue(1.579, 3)
        del param

    param = lastNode.getParam("premult")
    if param is not None:
        param.setValue(True)
        del param

    del lastNode
    # End of node "Gradelight"

    # Start of node "Out4"
    lastNode = app.createNode("net.sf.openfx.MergeOut", 1, group)
    lastNode.setScriptName("Out4")
    lastNode.setLabel("Out4")
    lastNode.setPosition(827, 9099)
    lastNode.setSize(104, 38)
    lastNode.setColor(0.3, 0.37, 0.776)
    groupOut4 = lastNode

    param = lastNode.getParam("operation")
    if param is not None:
        param.set("in")
        del param

    param = lastNode.getParam("userTextArea")
    if param is not None:
        param.setValue("<Natron>(out)</Natron>")
        del param

    del lastNode
    # End of node "Out4"

    # Start of node "Clamp9"
    lastNode = app.createNode("net.sf.openfx.Clamp", 2, group)
    lastNode.setScriptName("Clamp9")
    lastNode.setLabel("Clamp9")
    lastNode.setPosition(2608, 8246)
    lastNode.setSize(104, 30)
    lastNode.setColor(0.48, 0.66, 1)
    groupClamp9 = lastNode

    param = lastNode.getParam("minClampToEnable")
    if param is not None:
        param.setValue(True)
        del param

    param = lastNode.getParam("maxClampToEnable")
    if param is not None:
        param.setValue(True)
        del param

    param = lastNode.getParam("premult")
    if param is not None:
        param.setValue(True)
        del param

    del lastNode
    # End of node "Clamp9"

    # Start of node "EdgeExtend2"
    lastNode = app.createNode("eu.cimg.EdgeExtend", 4, group)
    lastNode.setScriptName("EdgeExtend2")
    lastNode.setLabel("EdgeExtend2")
    lastNode.setPosition(3601, 7184)
    lastNode.setSize(104, 30)
    lastNode.setColor(0.8, 0.5, 0.3)
    groupEdgeExtend2 = lastNode

    param = lastNode.getParam("edgeExtendSize")
    if param is not None:
        param.setValue(80, 0)
        del param

    param = lastNode.getParam("edgeExtendSlices")
    if param is not None:
        param.setValue(3, 0)
        del param

    del lastNode
    # End of node "EdgeExtend2"

    # Start of node "Dot24"
    lastNode = app.createNode("fr.inria.built-in.Dot", 1, group)
    lastNode.setScriptName("Dot24")
    lastNode.setLabel("Dot24")
    lastNode.setPosition(3560, 6925)
    lastNode.setSize(15, 15)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupDot24 = lastNode

    del lastNode
    # End of node "Dot24"

    # Start of node "Blur5"
    lastNode = app.createNode("net.sf.cimg.CImgBlur", 4, group)
    lastNode.setScriptName("Blur5")
    lastNode.setLabel("Blur5")
    lastNode.setPosition(3601, 7119)
    lastNode.setSize(104, 30)
    lastNode.setColor(0.8, 0.5, 0.3)
    groupBlur5 = lastNode

    param = lastNode.getParam("size")
    if param is not None:
        param.setValue(15, 0)
        param.setValue(15, 1)
        del param

    del lastNode
    # End of node "Blur5"

    # Start of node "Blur5_2"
    lastNode = app.createNode("net.sf.cimg.CImgBlur", 4, group)
    lastNode.setScriptName("Blur5_2")
    lastNode.setLabel("Blur5_2")
    lastNode.setPosition(3857, 7119)
    lastNode.setSize(104, 30)
    lastNode.setColor(0.8, 0.5, 0.3)
    groupBlur5_2 = lastNode

    param = lastNode.getParam("size")
    if param is not None:
        param.setValue(15, 0)
        param.setValue(15, 1)
        del param

    del lastNode
    # End of node "Blur5_2"

    # Start of node "Gradedark"
    lastNode = app.createNode("net.sf.openfx.GradePlugin", 2, group)
    lastNode.setScriptName("Gradedark")
    lastNode.setLabel("Gradedark")
    lastNode.setPosition(3600, 7455)
    lastNode.setSize(104, 30)
    lastNode.setColor(0.48, 0.66, 1)
    groupGradedark = lastNode

    param = lastNode.getParam("NatronOfxParamProcessR")
    if param is not None:
        param.setValue(False)
        del param

    param = lastNode.getParam("NatronOfxParamProcessG")
    if param is not None:
        param.setValue(False)
        del param

    param = lastNode.getParam("NatronOfxParamProcessB")
    if param is not None:
        param.setValue(False)
        del param

    param = lastNode.getParam("NatronOfxParamProcessA")
    if param is not None:
        param.setValue(True)
        del param

    param = lastNode.getParam("multiply")
    if param is not None:
        param.setValue(1.091, 0)
        param.setValue(1.091, 1)
        param.setValue(1.091, 2)
        param.setValue(1.091, 3)
        del param

    param = lastNode.getParam("gamma")
    if param is not None:
        param.setValue(2.846, 0)
        param.setValue(2.846, 1)
        param.setValue(2.846, 2)
        param.setValue(2.846, 3)
        del param

    param = lastNode.getParam("premult")
    if param is not None:
        param.setValue(True)
        del param

    param = lastNode.getParam("mix")
    if param is not None:
        param.setValue(0.985, 0)
        del param

    del lastNode
    # End of node "Gradedark"

    # Start of node "Shuffle5"
    lastNode = app.createNode("net.sf.openfx.ShufflePlugin", 3, group)
    lastNode.setScriptName("Shuffle5")
    lastNode.setLabel("Shuffle5")
    lastNode.setPosition(2225, 8391)
    lastNode.setSize(104, 30)
    lastNode.setColor(0.6, 0.24, 0.39)
    groupShuffle5 = lastNode

    param = lastNode.getParam("outputA")
    if param is not None:
        param.set("A.uk.co.thefoundry.OfxImagePlaneColour.A")
        del param

    del lastNode
    # End of node "Shuffle5"

    # Start of node "Erode1"
    lastNode = app.createNode("net.sf.cimg.CImgErode", 2, group)
    lastNode.setScriptName("Erode1")
    lastNode.setLabel("Erode1")
    lastNode.setPosition(3397, 6980)
    lastNode.setSize(104, 30)
    lastNode.setColor(0.8, 0.5, 0.3)
    groupErode1 = lastNode

    param = lastNode.getParam("size")
    if param is not None:
        param.setValue(50, 0)
        param.setValue(50, 1)
        del param

    param = lastNode.getParam("premult")
    if param is not None:
        param.setValue(True)
        del param

    del lastNode
    # End of node "Erode1"

    # Start of node "Dot11"
    lastNode = app.createNode("fr.inria.built-in.Dot", 1, group)
    lastNode.setScriptName("Dot11")
    lastNode.setLabel("Dot11")
    lastNode.setPosition(3265, 6787)
    lastNode.setSize(15, 15)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupDot11 = lastNode

    del lastNode
    # End of node "Dot11"

    # Start of node "Blur7"
    lastNode = app.createNode("net.sf.cimg.CImgBlur", 4, group)
    lastNode.setScriptName("Blur7")
    lastNode.setLabel("Blur7")
    lastNode.setPosition(3220, 7530)
    lastNode.setSize(104, 30)
    lastNode.setColor(0.8, 0.5, 0.3)
    groupBlur7 = lastNode

    param = lastNode.getParam("size")
    if param is not None:
        param.setValue(16, 0)
        param.setValue(16, 1)
        del param

    del lastNode
    # End of node "Blur7"

    # Start of node "Output1"
    lastNode = app.createNode("fr.inria.built-in.Output", 1, group)
    lastNode.setLabel("Output2")
    lastNode.setPosition(962, 9489)
    lastNode.setSize(104, 30)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupOutput1 = lastNode

    del lastNode
    # End of node "Output1"

    # Start of node "Constant1"
    lastNode = app.createNode("net.sf.openfx.ConstantPlugin", 1, group)
    lastNode.setScriptName("Constant1")
    lastNode.setLabel("Constant1")
    lastNode.setPosition(1241, 9132)
    lastNode.setSize(104, 30)
    lastNode.setColor(0.3, 0.5, 0.2)
    groupConstant1 = lastNode

    param = lastNode.getParam("extent")
    if param is not None:
        param.set("format")
        del param

    param = lastNode.getParam("NatronParamFormatChoice")
    if param is not None:
        param.set("PC_Video")
        del param

    param = lastNode.getParam("NatronParamFormatSize")
    if param is not None:
        param.setValue(4096, 0)
        param.setValue(4096, 1)
        del param

    param = lastNode.getParam("size")
    if param is not None:
        param.setValue(1024, 0)
        param.setValue(1024, 1)
        del param

    del lastNode
    # End of node "Constant1"

    # Start of node "Merge6"
    lastNode = app.createNode("net.sf.openfx.MergePlugin", 1, group)
    lastNode.setScriptName("Merge6")
    lastNode.setLabel("Merge6")
    lastNode.setPosition(2225, 7938)
    lastNode.setSize(104, 40)
    lastNode.setColor(0.3, 0.37, 0.776)
    groupMerge6 = lastNode

    param = lastNode.getParam("userTextArea")
    if param is not None:
        param.setValue("<Natron>(over)</Natron>")
        del param

    del lastNode
    # End of node "Merge6"

    # Start of node "Premult6"
    lastNode = app.createNode("net.sf.openfx.Premult", 2, group)
    lastNode.setScriptName("Premult6")
    lastNode.setLabel("Premult6")
    lastNode.setPosition(964, 9313)
    lastNode.setSize(104, 30)
    lastNode.setColor(0.3, 0.37, 0.776)
    groupPremult6 = lastNode

    del lastNode
    # End of node "Premult6"

    # Start of node "Grade4"
    lastNode = app.createNode("net.sf.openfx.GradePlugin", 2, group)
    lastNode.setScriptName("Grade4")
    lastNode.setLabel("Grade4")
    lastNode.setPosition(1821, -238)
    lastNode.setSize(104, 30)
    lastNode.setColor(0.48, 0.66, 1)
    groupGrade4 = lastNode

    param = lastNode.getParam("NatronOfxParamProcessR")
    if param is not None:
        param.setValue(False)
        del param

    param = lastNode.getParam("NatronOfxParamProcessG")
    if param is not None:
        param.setValue(False)
        del param

    param = lastNode.getParam("NatronOfxParamProcessB")
    if param is not None:
        param.setValue(False)
        del param

    param = lastNode.getParam("NatronOfxParamProcessA")
    if param is not None:
        param.setValue(True)
        del param

    param = lastNode.getParam("gamma")
    if param is not None:
        param.setValue(0.532, 0)
        param.setValue(0.532, 1)
        param.setValue(0.532, 2)
        param.setValue(0.532, 3)
        del param

    param = lastNode.getParam("premult")
    if param is not None:
        param.setValue(True)
        del param

    del lastNode
    # End of node "Grade4"

    # Start of node "Lerp_height"
    lastNode = app.createNode("fr.inria.built-in.Group", 1, group)
    lastNode.setScriptName("Lerp_height")
    lastNode.setLabel("Lerp_height")
    lastNode.setPosition(3864, 7458)
    lastNode.setSize(104, 30)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupLerp_height = lastNode


    # Create the user parameters
    lastNode.Controls = lastNode.createPageParam("Controls", "Controls")
    param = lastNode.createSeparatorParam("integer_________", "integer linear interpolation")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.integer_________ = param
    del param

    param = lastNode.createIntParam("i_input", "i_input")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(0, 0)
    lastNode.i_input = param
    del param

    param = lastNode.createInt2DParam("i_input_range", "i_input_range")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)
    param.setDefaultValue(0, 1)
    param.restoreDefaultValue(1)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(100, 1)
    lastNode.i_input_range = param
    del param

    param = lastNode.createInt2DParam("i_lerp_range", "i_lerp_range")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)
    param.setDefaultValue(0, 1)
    param.restoreDefaultValue(1)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(10, 0)
    param.setValue(500, 1)
    lastNode.i_lerp_range = param
    del param

    param = lastNode.createIntParam("i_lerp_result", "i_lerp_result")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(0, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(10, 0)
    lastNode.i_lerp_result = param
    del param

    param = lastNode.createSeparatorParam("float________", "float linear interpolation")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.float________ = param
    del param

    param = lastNode.createDoubleParam("f_input", "f_input")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(0, 0)
    lastNode.f_input = param
    del param

    param = lastNode.createDouble2DParam("f_input_range", "f_input_range")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setMinimum(-2147483648, 1)
    param.setMaximum(2147483647, 1)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(100, 1)
    lastNode.f_input_range = param
    del param

    param = lastNode.createDouble2DParam("f_lerp_range", "f_lerp_range")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setMinimum(-2147483648, 1)
    param.setMaximum(2147483647, 1)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(1, 1)
    lastNode.f_lerp_range = param
    del param

    param = lastNode.createDoubleParam("f_lerp_result", "f_lerp_result")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(0, 0)
    lastNode.f_lerp_result = param
    del param

    # Refresh the GUI with the newly created parameters
    lastNode.setPagesOrder(['Controls', 'Node', 'Settings'])
    lastNode.refreshUserParamsGUI()
    del lastNode
    # End of node "Lerp_height"

    groupgroup = groupLerp_height
    # Create all nodes in the group

    # Create the parameters of the group node the same way we did for all internal nodes
    lastNode = groupgroup
    lastNode.setColor(0.7, 0.7, 0.7)

    # Create the user parameters
    lastNode.Controls = lastNode.createPageParam("Controls", "Controls")
    param = lastNode.createSeparatorParam("integer_________", "integer linear interpolation")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.integer_________ = param
    del param

    param = lastNode.createIntParam("i_input", "i_input")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(0, 0)
    lastNode.i_input = param
    del param

    param = lastNode.createInt2DParam("i_input_range", "i_input_range")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)
    param.setDefaultValue(0, 1)
    param.restoreDefaultValue(1)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(100, 1)
    lastNode.i_input_range = param
    del param

    param = lastNode.createInt2DParam("i_lerp_range", "i_lerp_range")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)
    param.setDefaultValue(0, 1)
    param.restoreDefaultValue(1)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(10, 0)
    param.setValue(500, 1)
    lastNode.i_lerp_range = param
    del param

    param = lastNode.createIntParam("i_lerp_result", "i_lerp_result")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(0, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(10, 0)
    lastNode.i_lerp_result = param
    del param

    param = lastNode.createSeparatorParam("float________", "float linear interpolation")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.float________ = param
    del param

    param = lastNode.createDoubleParam("f_input", "f_input")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(0, 0)
    lastNode.f_input = param
    del param

    param = lastNode.createDouble2DParam("f_input_range", "f_input_range")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setMinimum(-2147483648, 1)
    param.setMaximum(2147483647, 1)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(100, 1)
    lastNode.f_input_range = param
    del param

    param = lastNode.createDouble2DParam("f_lerp_range", "f_lerp_range")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setMinimum(-2147483648, 1)
    param.setMaximum(2147483647, 1)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(1, 1)
    lastNode.f_lerp_range = param
    del param

    param = lastNode.createDoubleParam("f_lerp_result", "f_lerp_result")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(0, 0)
    lastNode.f_lerp_result = param
    del param

    # Refresh the GUI with the newly created parameters
    lastNode.setPagesOrder(['Controls', 'Node', 'Settings'])
    lastNode.refreshUserParamsGUI()
    del lastNode

    # Start of node "Input1"
    lastNode = app.createNode("fr.inria.built-in.Input", 1, groupgroup)
    lastNode.setScriptName("Input1")
    lastNode.setLabel("Input1")
    lastNode.setPosition(642, 175)
    lastNode.setSize(104, 30)
    lastNode.setColor(0.3, 0.5, 0.2)
    groupgroupInput1 = lastNode

    del lastNode
    # End of node "Input1"

    # Start of node "Output1"
    lastNode = app.createNode("fr.inria.built-in.Output", 1, groupgroup)
    lastNode.setLabel("Output1")
    lastNode.setPosition(642, 247)
    lastNode.setSize(104, 30)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupgroupOutput1 = lastNode

    del lastNode
    # End of node "Output1"

    # Now that all nodes are created we can connect them together, restore expressions
    groupgroupOutput1.connectInput(0, groupgroupInput1)

    param = groupgroup.getParam("i_input")
    param.setExpression("thisGroup.edge_falloff.get()", False, 0)
    del param
    param = groupgroup.getParam("i_lerp_result")
    param.setExpression("import numpy as np\r\n\r\ni = thisNode.i_input.get()\r\n\r\ni0 = thisNode.i_input_range.get()[0]\r\ni1 = thisNode.i_input_range.get()[1]\r\n\r\nr0 = thisNode.i_lerp_range.get()[0]\r\nr1 = thisNode.i_lerp_range.get()[1]\r\n\r\nir = [i0, i1]\r\nlr = [r0, r1]\r\n\r\ny_new = np.interp(i, ir, lr)\r\nret = y_new\r\n\r\n\r\n", True, 0)
    del param
    param = groupgroup.getParam("f_input")
    param.setExpression("thisGroup.height.get()", False, 0)
    del param
    param = groupgroup.getParam("f_lerp_result")
    param.setExpression("import numpy as np\r\n\r\ni = thisNode.f_input.get()\r\n\r\ni0 = thisNode.f_input_range.get()[0]\r\ni1 = thisNode.f_input_range.get()[1]\r\n\r\nr0 = thisNode.f_lerp_range.get()[0]\r\nr1 = thisNode.f_lerp_range.get()[1]\r\n\r\nir = [i0, i1]\r\nlr = [r0, r1]\r\n\r\ny_new = np.interp(i, ir, lr)\r\nret = y_new\r\n\r\n\r\n", True, 0)
    del param

    # Start of node "Lerp_moisture"
    lastNode = app.createNode("fr.inria.built-in.Group", 1, group)
    lastNode.setScriptName("Lerp_moisture")
    lastNode.setLabel("Lerp_moisture")
    lastNode.setPosition(2744, 8449)
    lastNode.setSize(104, 26)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupLerp_moisture = lastNode


    # Create the user parameters
    lastNode.Controls = lastNode.createPageParam("Controls", "Controls")
    param = lastNode.createSeparatorParam("integer_________", "integer linear interpolation")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.integer_________ = param
    del param

    param = lastNode.createIntParam("i_input", "i_input")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(0, 0)
    lastNode.i_input = param
    del param

    param = lastNode.createInt2DParam("i_input_range", "i_input_range")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)
    param.setDefaultValue(0, 1)
    param.restoreDefaultValue(1)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(100, 1)
    lastNode.i_input_range = param
    del param

    param = lastNode.createInt2DParam("i_lerp_range", "i_lerp_range")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)
    param.setDefaultValue(0, 1)
    param.restoreDefaultValue(1)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(10, 0)
    param.setValue(500, 1)
    lastNode.i_lerp_range = param
    del param

    param = lastNode.createIntParam("i_lerp_result", "i_lerp_result")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(0, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(10, 0)
    lastNode.i_lerp_result = param
    del param

    param = lastNode.createSeparatorParam("float________", "float linear interpolation")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.float________ = param
    del param

    param = lastNode.createDoubleParam("f_input", "f_input")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(0, 0)
    lastNode.f_input = param
    del param

    param = lastNode.createDouble2DParam("f_input_range", "f_input_range")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setMinimum(-2147483648, 1)
    param.setMaximum(2147483647, 1)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(100, 1)
    lastNode.f_input_range = param
    del param

    param = lastNode.createDouble2DParam("f_lerp_range", "f_lerp_range")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setMinimum(-2147483648, 1)
    param.setMaximum(2147483647, 1)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(1, 1)
    lastNode.f_lerp_range = param
    del param

    param = lastNode.createDoubleParam("f_lerp_result", "f_lerp_result")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(0, 0)
    lastNode.f_lerp_result = param
    del param

    # Refresh the GUI with the newly created parameters
    lastNode.setPagesOrder(['Controls', 'Node', 'Settings'])
    lastNode.refreshUserParamsGUI()
    del lastNode
    # End of node "Lerp_moisture"

    groupgroup = groupLerp_moisture
    # Create all nodes in the group

    # Create the parameters of the group node the same way we did for all internal nodes
    lastNode = groupgroup
    lastNode.setColor(0.7, 0.7, 0.7)

    # Create the user parameters
    lastNode.Controls = lastNode.createPageParam("Controls", "Controls")
    param = lastNode.createSeparatorParam("integer_________", "integer linear interpolation")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.integer_________ = param
    del param

    param = lastNode.createIntParam("i_input", "i_input")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(0, 0)
    lastNode.i_input = param
    del param

    param = lastNode.createInt2DParam("i_input_range", "i_input_range")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)
    param.setDefaultValue(0, 1)
    param.restoreDefaultValue(1)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(100, 1)
    lastNode.i_input_range = param
    del param

    param = lastNode.createInt2DParam("i_lerp_range", "i_lerp_range")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)
    param.setDefaultValue(0, 1)
    param.restoreDefaultValue(1)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(10, 0)
    param.setValue(500, 1)
    lastNode.i_lerp_range = param
    del param

    param = lastNode.createIntParam("i_lerp_result", "i_lerp_result")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(0, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(10, 0)
    lastNode.i_lerp_result = param
    del param

    param = lastNode.createSeparatorParam("float________", "float linear interpolation")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.float________ = param
    del param

    param = lastNode.createDoubleParam("f_input", "f_input")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(0, 0)
    lastNode.f_input = param
    del param

    param = lastNode.createDouble2DParam("f_input_range", "f_input_range")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setMinimum(-2147483648, 1)
    param.setMaximum(2147483647, 1)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(100, 1)
    lastNode.f_input_range = param
    del param

    param = lastNode.createDouble2DParam("f_lerp_range", "f_lerp_range")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setMinimum(-2147483648, 1)
    param.setMaximum(2147483647, 1)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(1, 1)
    lastNode.f_lerp_range = param
    del param

    param = lastNode.createDoubleParam("f_lerp_result", "f_lerp_result")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(0, 0)
    lastNode.f_lerp_result = param
    del param

    # Refresh the GUI with the newly created parameters
    lastNode.setPagesOrder(['Controls', 'Node', 'Settings'])
    lastNode.refreshUserParamsGUI()
    del lastNode

    # Start of node "Input1"
    lastNode = app.createNode("fr.inria.built-in.Input", 1, groupgroup)
    lastNode.setScriptName("Input1")
    lastNode.setLabel("Input1")
    lastNode.setPosition(642, 175)
    lastNode.setSize(104, 30)
    lastNode.setColor(0.3, 0.5, 0.2)
    groupgroupInput1 = lastNode

    del lastNode
    # End of node "Input1"

    # Start of node "Output1"
    lastNode = app.createNode("fr.inria.built-in.Output", 1, groupgroup)
    lastNode.setLabel("Output1")
    lastNode.setPosition(642, 247)
    lastNode.setSize(104, 30)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupgroupOutput1 = lastNode

    del lastNode
    # End of node "Output1"

    # Now that all nodes are created we can connect them together, restore expressions
    groupgroupOutput1.connectInput(0, groupgroupInput1)

    param = groupgroup.getParam("i_input")
    param.setExpression("thisGroup.edge_falloff.get()", False, 0)
    del param
    param = groupgroup.getParam("i_lerp_result")
    param.setExpression("import numpy as np\r\n\r\ni = thisNode.i_input.get()\r\n\r\ni0 = thisNode.i_input_range.get()[0]\r\ni1 = thisNode.i_input_range.get()[1]\r\n\r\nr0 = thisNode.i_lerp_range.get()[0]\r\nr1 = thisNode.i_lerp_range.get()[1]\r\n\r\nir = [i0, i1]\r\nlr = [r0, r1]\r\n\r\ny_new = np.interp(i, ir, lr)\r\nret = y_new\r\n\r\n\r\n", True, 0)
    del param
    param = groupgroup.getParam("f_input")
    param.setExpression("thisGroup.moisture.get()", False, 0)
    del param
    param = groupgroup.getParam("f_lerp_result")
    param.setExpression("import numpy as np\r\n\r\ni = thisNode.f_input.get()\r\n\r\ni0 = thisNode.f_input_range.get()[0]\r\ni1 = thisNode.f_input_range.get()[1]\r\n\r\nr0 = thisNode.f_lerp_range.get()[0]\r\nr1 = thisNode.f_lerp_range.get()[1]\r\n\r\nir = [i0, i1]\r\nlr = [r0, r1]\r\n\r\ny_new = np.interp(i, ir, lr)\r\nret = y_new\r\n\r\n\r\n", True, 0)
    del param

    # Start of node "Grade_shadow_2"
    lastNode = app.createNode("net.sf.openfx.GradePlugin", 2, group)
    lastNode.setScriptName("Grade_shadow_2")
    lastNode.setLabel("Grade_shadow_2")
    lastNode.setPosition(3231, 8375)
    lastNode.setSize(104, 30)
    lastNode.setColor(0.48, 0.66, 1)
    groupGrade_shadow_2 = lastNode

    param = lastNode.getParam("NatronOfxParamProcessA")
    if param is not None:
        param.setValue(True)
        del param

    param = lastNode.getParam("white")
    if param is not None:
        param.setValue(0.915, 0)
        param.setValue(0.915, 1)
        param.setValue(0.915, 2)
        param.setValue(0.915, 3)
        del param

    param = lastNode.getParam("multiply")
    if param is not None:
        param.setValue(0.269, 0)
        param.setValue(0.269, 1)
        param.setValue(0.269, 2)
        param.setValue(0.269, 3)
        del param

    param = lastNode.getParam("gamma")
    if param is not None:
        param.setValue(0.734, 0)
        param.setValue(0.734, 1)
        param.setValue(0.734, 2)
        param.setValue(0.734, 3)
        del param

    param = lastNode.getParam("clampWhite")
    if param is not None:
        param.setValue(True)
        del param

    param = lastNode.getParam("premult")
    if param is not None:
        param.setValue(True)
        del param

    param = lastNode.getParam("mix")
    if param is not None:
        param.setValue(0, 0)
        del param

    param = lastNode.getParam("enableMask_Mask")
    if param is not None:
        param.setValue(True)
        del param

    del lastNode
    # End of node "Grade_shadow_2"

    # Start of node "Grade_highlight_2"
    lastNode = app.createNode("net.sf.openfx.GradePlugin", 2, group)
    lastNode.setScriptName("Grade_highlight_2")
    lastNode.setLabel("Grade_highlight_2")
    lastNode.setPosition(3192, 8486)
    lastNode.setSize(104, 30)
    lastNode.setColor(0.48, 0.66, 1)
    groupGrade_highlight_2 = lastNode

    param = lastNode.getParam("white")
    if param is not None:
        param.setValue(1.259, 0)
        param.setValue(1.259, 1)
        param.setValue(1.259, 2)
        param.setValue(1.259, 3)
        del param

    param = lastNode.getParam("multiply")
    if param is not None:
        param.setValue(1.707, 0)
        param.setValue(1.707, 1)
        param.setValue(1.707, 2)
        param.setValue(1.707, 3)
        del param

    param = lastNode.getParam("gamma")
    if param is not None:
        param.setValue(2.09, 0)
        param.setValue(2.09, 1)
        param.setValue(2.09, 2)
        param.setValue(2.09, 3)
        del param

    param = lastNode.getParam("mix")
    if param is not None:
        param.setValue(0, 0)
        del param

    param = lastNode.getParam("premultChanged")
    if param is not None:
        param.setValue(True)
        del param

    param = lastNode.getParam("enableMask_Mask")
    if param is not None:
        param.setValue(True)
        del param

    del lastNode
    # End of node "Grade_highlight_2"

    # Start of node "Merge7"
    lastNode = app.createNode("net.sf.openfx.MergePlugin", 1, group)
    lastNode.setScriptName("Merge7")
    lastNode.setLabel("Merge7")
    lastNode.setPosition(3113, 8084)
    lastNode.setSize(104, 40)
    lastNode.setColor(0.3, 0.37, 0.776)
    groupMerge7 = lastNode

    param = lastNode.getParam("userTextArea")
    if param is not None:
        param.setValue("<Natron>(over)</Natron>")
        del param

    del lastNode
    # End of node "Merge7"

    # Start of node "Switch_weld"
    lastNode = app.createNode("net.sf.openfx.switchPlugin", 1, group)
    lastNode.setScriptName("Switch_weld")
    lastNode.setLabel("Switch_weld")
    lastNode.setPosition(3113, 8246)
    lastNode.setSize(104, 30)
    lastNode.setColor(0.3, 0.37, 0.776)
    groupSwitch_weld = lastNode

    param = lastNode.getParam("which")
    if param is not None:
        param.setValue(0, 0)
        del param

    del lastNode
    # End of node "Switch_weld"

    # Start of node "Mask"
    lastNode = app.createNode("fr.inria.built-in.Input", 1, group)
    lastNode.setScriptName("Mask")
    lastNode.setLabel("Mask")
    lastNode.setPosition(267, 8503)
    lastNode.setSize(104, 26)
    lastNode.setColor(0.3, 0.5, 0.2)
    groupMask = lastNode

    del lastNode
    # End of node "Mask"

    # Start of node "Reformat1"
    lastNode = app.createNode("net.sf.openfx.Reformat", 2, group)
    lastNode.setScriptName("Reformat1")
    lastNode.setLabel("Reformat1")
    lastNode.setPosition(267, 8692)
    lastNode.setSize(104, 26)
    lastNode.setColor(0.7, 0.3, 0.1)
    groupReformat1 = lastNode

    param = lastNode.getParam("reformatType")
    if param is not None:
        param.set("format")
        del param

    param = lastNode.getParam("NatronParamFormatChoice")
    if param is not None:
        param.set("3072x3072")
        del param

    param = lastNode.getParam("NatronParamFormatSize")
    if param is not None:
        param.setValue(3072, 0)
        param.setValue(3072, 1)
        del param

    param = lastNode.getParam("boxSize")
    if param is not None:
        param.setValue(640, 0)
        param.setValue(480, 1)
        del param

    param = lastNode.getParam("boxFixed")
    if param is not None:
        param.setValue(True)
        del param

    del lastNode
    # End of node "Reformat1"

    # Start of node "ReadMask"
    lastNode = app.createNode("fr.inria.built-in.Read", 1, group)
    lastNode.setScriptName("ReadMask")
    lastNode.setLabel("ReadMask")
    lastNode.setPosition(74, 8491)
    lastNode.setSize(128, 78)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupReadMask = lastNode

    param = lastNode.getParam("decodingPluginID")
    if param is not None:
        param.setValue("fr.inria.openfx.ReadPNG")
        del param

    param = lastNode.getParam("disableNode")
    if param is not None:
        param.setValue(True)
        del param

    param = lastNode.getParam("filename")
    if param is not None:
        param.setValue("[Project]/../../natron../ingredients-db/2010-sauce-pesto.png")
        del param

    param = lastNode.getParam("onMissingFrame")
    if param is not None:
        param.set("black")
        del param

    param = lastNode.getParam("filePremult")
    if param is not None:
        param.set("unpremult")
        del param

    param = lastNode.getParam("ParamExistingInstance")
    if param is not None:
        param.setValue(True)
        del param

    del lastNode
    # End of node "ReadMask"

    # Start of node "ShuffleMask"
    lastNode = app.createNode("net.sf.openfx.ShufflePlugin", 3, group)
    lastNode.setScriptName("ShuffleMask")
    lastNode.setLabel("ShuffleMask")
    lastNode.setPosition(264, 8978)
    lastNode.setSize(104, 26)
    lastNode.setColor(0.6, 0.24, 0.39)
    groupShuffleMask = lastNode

    param = lastNode.getParam("outputPremult")
    if param is not None:
        param.set("Premultiplied")
        del param

    param = lastNode.getParam("outputA")
    if param is not None:
        param.set("B.uk.co.thefoundry.OfxImagePlaneColour.R")
        del param

    del lastNode
    # End of node "ShuffleMask"

    # Start of node "MultiplyMask"
    lastNode = app.createNode("net.sf.openfx.MultiplyPlugin", 2, group)
    lastNode.setScriptName("MultiplyMask")
    lastNode.setLabel("MultiplyMask")
    lastNode.setPosition(966, 8978)
    lastNode.setSize(104, 26)
    lastNode.setColor(0.48, 0.66, 1)
    groupMultiplyMask = lastNode

    param = lastNode.getParam("NatronOfxParamProcessA")
    if param is not None:
        param.setValue(True)
        del param

    param = lastNode.getParam("value")
    if param is not None:
        param.setValue(0, 0)
        param.setValue(0, 1)
        param.setValue(0, 2)
        param.setValue(0, 3)
        del param

    param = lastNode.getParam("premult")
    if param is not None:
        param.setValue(True)
        del param

    param = lastNode.getParam("maskInvert")
    if param is not None:
        param.setValue(False)
        del param

    param = lastNode.getParam("enableMask_Mask")
    if param is not None:
        param.setValue(True)
        del param

    param = lastNode.getParam("disableNode")
    if param is not None:
        param.setValue(True)
        del param

    del lastNode
    # End of node "MultiplyMask"

    # Start of node "Switch3_2"
    lastNode = app.createNode("net.sf.openfx.switchPlugin", 1, group)
    lastNode.setScriptName("Switch3_2")
    lastNode.setLabel("Switch3_2")
    lastNode.setPosition(267, 8634)
    lastNode.setSize(104, 26)
    lastNode.setColor(0.3, 0.37, 0.776)
    groupSwitch3_2 = lastNode

    param = lastNode.getParam("which")
    if param is not None:
        param.setValue(0, 0)
        del param

    del lastNode
    # End of node "Switch3_2"

    # Start of node "Backdrop4"
    lastNode = app.createNode("fr.inria.built-in.BackDrop", 1, group)
    lastNode.setScriptName("Backdrop4")
    lastNode.setLabel("Backdrop4")
    lastNode.setPosition(49, 8322)
    lastNode.setSize(542, 802)
    lastNode.setColor(0.45, 0.45, 0.45)
    groupBackdrop4 = lastNode

    param = lastNode.getParam("Label")
    if param is not None:
        param.setValue("<font size=\"27\" color=\"#000000\" face=\"Droid Sans\">Masks</font>")
        del param

    del lastNode
    # End of node "Backdrop4"

    # Start of node "Dot26"
    lastNode = app.createNode("fr.inria.built-in.Dot", 1, group)
    lastNode.setScriptName("Dot26")
    lastNode.setLabel("Dot26")
    lastNode.setPosition(473, 9081)
    lastNode.setSize(15, 15)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupDot26 = lastNode

    del lastNode
    # End of node "Dot26"

    # Start of node "Dot31"
    lastNode = app.createNode("fr.inria.built-in.Dot", 1, group)
    lastNode.setScriptName("Dot31")
    lastNode.setLabel("Dot31")
    lastNode.setPosition(466, 8384)
    lastNode.setSize(15, 15)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupDot31 = lastNode

    del lastNode
    # End of node "Dot31"

    # Start of node "Transform5"
    lastNode = app.createNode("net.sf.openfx.TransformPlugin", 1, group)
    lastNode.setScriptName("Transform5")
    lastNode.setLabel("Transform5")
    lastNode.setPosition(267, 8748)
    lastNode.setSize(104, 26)
    lastNode.setColor(0.7, 0.3, 0.1)
    groupTransform5 = lastNode

    param = lastNode.getParam("center")
    if param is not None:
        param.setValue(1536, 0)
        param.setValue(1536, 1)
        del param

    param = lastNode.getParam("transformCenterChanged")
    if param is not None:
        param.setValue(True)
        del param

    del lastNode
    # End of node "Transform5"

    # Now that all nodes are created we can connect them together, restore expressions
    groupSaturation1.connectInput(0, groupClamp5)
    groupIn1.connectInput(0, groupUnpremult3)
    groupIn1.connectInput(1, groupClamp1)
    groupGrade_absorption.connectInput(0, groupShuffle4)
    groupClamp1.connectInput(0, groupGrade_absorption)
    groupClamp2.connectInput(0, groupDot15)
    groupClamp3.connectInput(0, groupGrade4)
    groupPlasma2.connectInput(0, groupIn)
    groupPremult1.connectInput(0, groupLumpyOverlay)
    groupLumpySpec.connectInput(0, groupDot23)
    groupLumpy_small.connectInput(0, groupLumpy_big)
    groupLumpy_small.connectInput(1, groupDot4)
    groupLumpySpecMix.connectInput(0, groupDot23)
    groupLumpySpecMix.connectInput(1, groupClamp1_2)
    groupPremult2.connectInput(0, groupLumpyWet)
    groupLumpyRoughness.connectInput(0, groupPremult2)
    groupLumpyDelta.connectInput(0, groupPremult7)
    groupLumpyDelta.connectInput(1, groupGrade2)
    groupLumpyHeight.connectInput(0, groupLumpyKey)
    groupLumpyKey.connectInput(0, groupPremult7)
    groupLumpSpecGrain.connectInput(0, groupLumpySpec)
    groupLumpSpecGrain.connectInput(1, groupDot5)
    groupDot4.connectInput(0, groupDot3)
    groupDot5.connectInput(0, groupDot4)
    groupLumpyWet.connectInput(0, groupDot35)
    groupLumpyWet.connectInput(1, groupOut2)
    groupClamp1_2.connectInput(0, groupMultiply2)
    groupDot3.connectInput(0, groupDot30)
    groupDot6.connectInput(0, groupDot3)
    groupLumpyOverlay.connectInput(0, groupPremult3)
    groupLumpyOverlay.connectInput(1, groupDot9)
    groupLerp_LspecMix.connectInput(0, groupLerp_Lrough)
    groupLerp_Lrough.connectInput(0, groupLerp2)
    groupSpecColorMix.connectInput(0, groupBlur2)
    groupOut2.connectInput(0, groupKeyer1)
    groupOut2.connectInput(1, groupSpecColorMix)
    groupBlur2.connectInput(0, groupShuffle1)
    groupKeyer1.connectInput(0, groupLumpSpecGrain)
    groupShuffle1.connectInput(1, groupLumpyHeight)
    groupMultiply4.connectInput(0, groupUnpremult1)
    groupMultiply4.connectInput(1, groupSpecColorMix)
    groupUnpremult1.connectInput(0, groupLumpySpecMix)
    groupPremult3.connectInput(0, groupMultiply4)
    groupDot9.connectInput(0, groupDot5)
    groupSwitch2.connectInput(0, groupDot20)
    groupSwitch2.connectInput(1, groupPremult4)
    groupLcoagu_Lthin.connectInput(0, groupLclotting)
    groupdoSeparation.connectInput(0, groupDot17)
    groupdoSeparation.connectInput(1, groupPremult5)
    groupDot15.connectInput(0, groupIn)
    groupDot16.connectInput(0, groupDot15)
    groupDot17.connectInput(0, groupDot16)
    groupDot20.connectInput(0, groupDot27)
    groupLerp_lumpiness.connectInput(0, groupLerp_lumpy_big_gain)
    groupSwitch1.connectInput(0, groupDot9)
    groupSwitch1.connectInput(1, groupPremult1)
    groupLerp_lumpy_mix.connectInput(0, groupLerp_LspecMix)
    groupDot23.connectInput(0, groupLumpyDelta)
    groupGrade2.connectInput(0, groupPremult7)
    groupLerp_burn.connectInput(0, groupLerp1)
    groupLabsorption.connectInput(0, groupLcoagu_Lthin)
    groupMelt.connectInput(0, groupDot25)
    groupSwitchMelt.connectInput(0, groupDot19)
    groupSwitchMelt.connectInput(1, groupTransform2)
    groupLmelt_amp.connectInput(0, groupLmelt_freq)
    groupDot25.connectInput(0, groupDot24_2)
    groupBlur3.connectInput(0, groupErode4)
    groupLerp_burn_2.connectInput(0, groupLerp_burn)
    groupShuffle2.connectInput(0, groupGrade5)
    groupShuffle2.connectInput(1, groupDot20)
    groupErode4.connectInput(0, groupDot8)
    groupTransform1.connectInput(0, groupShuffle2)
    groupLerp_erode.connectInput(0, groupLerp_burn_2)
    groupSeGrain_after.connectInput(0, groupUnpremult2)
    groupLerp_grain.connectInput(0, groupLerp3_carmel)
    groupLerp1.connectInput(0, groupLerp_grain)
    groupDot18.connectInput(0, groupDot34)
    groupDot19.connectInput(0, groupDot25)
    groupTransform2.connectInput(0, groupMelt)
    groupDot27.connectInput(0, groupDot18)
    groupUnpremult2.connectInput(0, groupDot18)
    groupPremult4.connectInput(0, groupTransform1)
    groupSwitch2_2.connectInput(0, groupDot20_2)
    groupSwitch2_2.connectInput(1, groupErode3_2)
    groupDot20_2.connectInput(0, groupDot27_2)
    groupDot24_2.connectInput(0, groupSwitch2_2)
    groupBlur3_2.connectInput(0, groupErode4_2)
    groupShuffle2_2.connectInput(0, groupGrade1)
    groupShuffle2_2.connectInput(1, groupDot20_2)
    groupErode4_2.connectInput(0, groupSeGrain1_before)
    groupTransform1_2.connectInput(0, groupShuffle2_2)
    groupErode3_2.connectInput(0, groupTransform1_2)
    groupLerp_erode_2.connectInput(0, groupLerp_burn_2_2)
    groupSeGrain1_before.connectInput(0, groupUnpremult2_2)
    groupLerp1_2.connectInput(0, groupLerp_grain_2)
    groupDot18_2.connectInput(0, groupDot33)
    groupDot27_2.connectInput(0, groupDot18_2)
    groupUnpremult2_2.connectInput(0, groupDot18_2)
    groupPremult4_2.connectInput(0, groupSeGrain1_before)
    groupDot29.connectInput(0, groupSwitchMelt)
    groupDot30.connectInput(0, groupDot29)
    groupLerp3_carmel.connectInput(0, groupLerp2_carmel)
    groupGrade1.connectInput(0, groupPremult4_2)
    groupLexpand.connectInput(0, groupLmelt_amp)
    groupGrade3.connectInput(0, groupDot8)
    groupGrade3.connectInput(1, groupBlur3)
    groupGrade3_2.connectInput(0, groupGrade3)
    groupGrade3_2.connectInput(1, groupBlur3)
    groupLerp_whitepoint.connectInput(0, groupLerp_erode)
    groupLerpLumpySpec.connectInput(0, groupLerp_lumpiness)
    groupSwitchMelt1.connectInput(0, groupDot19)
    groupSwitchMelt1.connectInput(1, groupTransform2)
    groupPlasma3.connectInput(0, groupSpecColorMix)
    groupMultiply2.connectInput(0, groupLumpyRoughness)
    groupMultiply2.connectInput(1, groupPlasma3)
    groupLerp2.connectInput(0, groupLerpLumpySpec)
    groupLumpy_big.connectInput(0, groupUnpremult4)
    groupLerp_lumpy_big_gain.connectInput(0, groupLerp_lump_big_intensity)
    groupDot33.connectInput(0, groupdoSeparation)
    groupMultiply7.connectInput(0, groupIn1)
    groupClamp5.connectInput(0, groupBlur4)
    groupShuffle4.connectInput(0, groupSaturation1)
    groupBlur4.connectInput(0, groupPlasma2)
    groupUnpremult3.connectInput(0, groupClamp2)
    groupPremult5.connectInput(0, groupClamp3)
    groupDot34.connectInput(0, groupSwitch1)
    groupDot35.connectInput(0, groupPremult7)
    groupDot1.connectInput(0, groupGrade6)
    groupDot2.connectInput(0, groupSwitch2)
    groupUnpremult4.connectInput(0, groupDot3)
    groupPremult7.connectInput(0, groupLumpy_small)
    groupShuffle6.connectInput(0, groupDot2)
    groupBlur1.connectInput(0, groupErodeBlur1)
    groupGrade6.connectInput(0, groupDot7)
    groupGrade6.connectInput(1, groupMerge5)
    groupErodeBlur1.connectInput(0, groupShuffle6)
    groupGrade7.connectInput(0, groupBlur1)
    groupMerge5.connectInput(0, groupGrade7)
    groupMerge5.connectInput(1, groupDot7)
    groupDot7.connectInput(0, groupDot2)
    groupDot8.connectInput(0, groupSeGrain_after)
    groupGrade5.connectInput(0, groupGrade3_2)
    groupOut1.connectInput(0, groupShuffle3)
    groupOut1.connectInput(1, groupGrade6)
    groupDot12.connectInput(0, groupdoSeparation)
    groupDot13.connectInput(0, groupDot12)
    groupMerge2.connectInput(0, groupDot1)
    groupMerge2.connectInput(1, groupShuffle5)
    groupShuffle3.connectInput(1, groupDot13)
    groupNoOp1.connectInput(0, groupIn)
    groupDot10.connectInput(0, groupNoOp1)
    groupOut3.connectInput(0, groupDot21)
    groupOut3.connectInput(1, groupEdgeExtend2)
    groupTransform3.connectInput(0, groupDot22)
    groupIn2.connectInput(0, groupDot24)
    groupIn2.connectInput(1, groupTransform3)
    groupGrade_highlight.connectInput(0, groupMerge36)
    groupGrade_highlight.connectInput(1, groupClamp4)
    groupClamp4.connectInput(0, groupGradelight)
    groupMerge1.connectInput(0, groupDot24)
    groupMerge1.connectInput(1, groupTransform4)
    groupEdgeExtend1_2.connectInput(0, groupBlur5_2)
    groupOut3_2.connectInput(0, groupDot21)
    groupOut3_2.connectInput(1, groupEdgeExtend1_2)
    groupClamp6.connectInput(0, groupGradedark)
    groupGrade_shadow.connectInput(0, groupGrade_highlight)
    groupGrade_shadow.connectInput(1, groupClamp6)
    groupDot14.connectInput(0, groupDot11)
    groupMerge36.connectInput(0, groupConstant1)
    groupMerge36.connectInput(3, groupRead24)
    groupMerge36.connectInput(4, groupRead25)
    groupMerge36.connectInput(5, groupRead26)
    groupMerge36.connectInput(6, groupRead27)
    groupMerge36.connectInput(7, groupRead28)
    groupMerge36.connectInput(8, groupRead29)
    groupMerge36.connectInput(9, groupRead30)
    groupMerge36.connectInput(10, groupRead31)
    groupMerge36.connectInput(11, groupRead32)
    groupMerge36.connectInput(12, groupRead33)
    groupMerge36.connectInput(13, groupRead34)
    groupMerge36.connectInput(14, groupRead35)
    groupMerge36.connectInput(15, groupRead36)
    groupMerge36.connectInput(16, groupRead37)
    groupMerge36.connectInput(17, groupRead38)
    groupMerge36.connectInput(18, groupRead39)
    groupMerge36.connectInput(19, groupRead40)
    groupMerge36.connectInput(20, groupRead41)
    groupMerge36.connectInput(21, groupRead42)
    groupMerge36.connectInput(22, groupRead43)
    groupMerge36.connectInput(23, groupRead44)
    groupDot21.connectInput(0, groupErode1)
    groupTransform4.connectInput(0, groupDot22)
    groupDot22.connectInput(0, groupDot14)
    groupMerge3.connectInput(0, groupClamp4)
    groupMerge3.connectInput(1, groupClamp6)
    groupMerge3.connectInput(3, groupBlur7)
    groupMerge4.connectInput(0, groupRead24)
    groupMerge4.connectInput(1, groupRead25)
    groupMerge4.connectInput(3, groupRead26)
    groupMerge4.connectInput(4, groupRead27)
    groupMerge4.connectInput(5, groupRead28)
    groupMerge4.connectInput(6, groupPremult6)
    groupGradelight.connectInput(0, groupOut3)
    groupOut4.connectInput(0, groupDot26)
    groupOut4.connectInput(1, groupMerge2)
    groupClamp9.connectInput(0, groupSwitch_weld)
    groupEdgeExtend2.connectInput(0, groupBlur5)
    groupDot24.connectInput(0, groupDot14)
    groupBlur5.connectInput(0, groupIn2)
    groupBlur5_2.connectInput(0, groupMerge1)
    groupGradedark.connectInput(0, groupOut3_2)
    groupShuffle5.connectInput(0, groupClamp9)
    groupShuffle5.connectInput(1, groupMerge6)
    groupErode1.connectInput(0, groupDot14)
    groupDot11.connectInput(0, groupOut1)
    groupBlur7.connectInput(0, groupDot11)
    groupOutput1.connectInput(0, groupPremult6)
    groupMerge6.connectInput(0, groupOut1)
    groupMerge6.connectInput(1, groupMerge3)
    groupPremult6.connectInput(0, groupMultiplyMask)
    groupGrade4.connectInput(0, groupMultiply7)
    groupGrade_shadow_2.connectInput(0, groupGrade_highlight_2)
    groupGrade_shadow_2.connectInput(1, groupClamp4)
    groupGrade_highlight_2.connectInput(0, groupMerge36)
    groupGrade_highlight_2.connectInput(1, groupClamp6)
    groupMerge7.connectInput(0, groupGrade_shadow)
    groupMerge7.connectInput(1, groupGrade_shadow_2)
    groupSwitch_weld.connectInput(0, groupGrade_shadow_2)
    groupSwitch_weld.connectInput(1, groupGrade_shadow)
    groupReformat1.connectInput(0, groupSwitch3_2)
    groupShuffleMask.connectInput(0, groupTransform5)
    groupMultiplyMask.connectInput(0, groupMerge2)
    groupMultiplyMask.connectInput(1, groupShuffleMask)
    groupSwitch3_2.connectInput(0, groupReadMask)
    groupSwitch3_2.connectInput(1, groupMask)
    groupTransform5.connectInput(0, groupReformat1)

    param = groupGrade_absorption.getParam("offset")
    param.setExpression("Labsorption.f_lerp_result.get()", False, 0)
    param.setExpression("Labsorption.f_lerp_result.get()", False, 1)
    param.setExpression("Labsorption.f_lerp_result.get()", False, 2)
    param.setExpression("Labsorption.f_lerp_result.get()", False, 3)
    del param
    param = groupPlasma2.getParam("alpha")
    param.setExpression("thisGroup.Lclotting.f_lerp_result.get()", False, 0)
    del param
    param = groupPlasma2.getParam("beta")
    param.setExpression("thisGroup.Lcoagu_Lthin.f_lerp_result.get()", False, 0)
    del param
    param = groupPlasma2.getParam("scale")
    param.setExpression("thisGroup.Lcoagu_Lthin.i_lerp_result.get()", False, 0)
    del param
    param = groupLumpySpec.getParam("Ambient_Lightness")
    param.setExpression("thisGroup.LerpLumpySpec.f_lerp_result.get()", False, 0)
    del param
    param = groupLumpySpec.getParam("Image_Smoothness")
    param.setExpression("Lerp_Lrough.f_lerp_result.get()", False, 0)
    del param
    param = groupLumpy_small.getParam("grainSizeAll")
    param.setExpression("Lerp_lumpiness.f_lerp_result.get()", False, 0)
    del param
    param = groupLumpy_small.getParam("grainSizeRed")
    param.setExpression("thisGroup.Lerp_lumpiness.i_lerp_result.get()", False, 0)
    del param
    param = groupLumpy_small.getParam("grainSizeGreen")
    param.setExpression("thisGroup.Lumpy_small.grainSizeRed.get()", False, 0)
    del param
    param = groupLumpy_small.getParam("grainSizeBlue")
    param.setExpression("thisGroup.Lumpy_small.grainSizeRed.get()", False, 0)
    del param
    param = groupLumpy_small.getParam("mix")
    param.setExpression("thisGroup.lumpy_small_mix.get()", False, 0)
    del param
    param = groupLumpySpecMix.getParam("mix")
    param.setExpression("Lerp_LspecMix.f_lerp_result.get()", False, 0)
    del param
    param = groupLumpyRoughness.getParam("size")
    param.setExpression("Lerp_Lrough.f_lerp_result.get()", False, 0)
    param.setExpression("Lerp_Lrough.f_lerp_result.get()", False, 1)
    del param
    param = groupLumpSpecGrain.getParam("grainSizeAll")
    param.setExpression("Lerp_lumpiness.f_lerp_result.get()", False, 0)
    del param
    param = groupLumpSpecGrain.getParam("colorCorr")
    param.setExpression("thisGroup.Lerp2.f_lerp_result.get()", False, 0)
    del param
    param = groupLumpyOverlay.getParam("mix")
    param.setExpression("Lerp_lumpy_mix.f_lerp_result.get()", False, 0)
    del param
    param = groupLerp_LspecMix.getParam("i_lerp_result")
    param.setExpression("import numpy as np\r\n\r\ni = thisNode.i_input.get()\r\n\r\ni0 = thisNode.i_input_range.get()[0]\r\ni1 = thisNode.i_input_range.get()[1]\r\n\r\nr0 = thisNode.i_lerp_range.get()[0]\r\nr1 = thisNode.i_lerp_range.get()[1]\r\n\r\nir = [i0, i1]\r\nlr = [r0, r1]\r\n\r\ny_new = np.interp(i, ir, lr)\r\nret = y_new\r\n\r\n\r\n", True, 0)
    del param
    param = groupLerp_LspecMix.getParam("f_input")
    param.setExpression("thisGroup.lumpy_wet.get()", False, 0)
    del param
    param = groupLerp_LspecMix.getParam("f_lerp_result")
    param.setExpression("import numpy as np\r\n\r\ni = thisNode.f_input.get()\r\n\r\ni0 = thisNode.f_input_range.get()[0]\r\ni1 = thisNode.f_input_range.get()[1]\r\n\r\nr0 = thisNode.f_lerp_range.get()[0]\r\nr1 = thisNode.f_lerp_range.get()[1]\r\n\r\nir = [i0, i1]\r\nlr = [r0, r1]\r\n\r\ny_new = np.interp(i, ir, lr)\r\nret = y_new\r\n\r\n\r\n", True, 0)
    del param
    param = groupLerp_Lrough.getParam("i_lerp_result")
    param.setExpression("import numpy as np\r\n\r\ni = thisNode.i_input.get()\r\n\r\ni0 = thisNode.i_input_range.get()[0]\r\ni1 = thisNode.i_input_range.get()[1]\r\n\r\nr0 = thisNode.i_lerp_range.get()[0]\r\nr1 = thisNode.i_lerp_range.get()[1]\r\n\r\nir = [i0, i1]\r\nlr = [r0, r1]\r\n\r\ny_new = np.interp(i, ir, lr)\r\nret = y_new\r\n\r\n\r\n", True, 0)
    del param
    param = groupLerp_Lrough.getParam("f_input")
    param.setExpression("thisGroup.lumpy_rough.get()", False, 0)
    del param
    param = groupLerp_Lrough.getParam("f_lerp_result")
    param.setExpression("import numpy as np\r\n\r\ni = thisNode.f_input.get()\r\n\r\ni0 = thisNode.f_input_range.get()[0]\r\ni1 = thisNode.f_input_range.get()[1]\r\n\r\nr0 = thisNode.f_lerp_range.get()[0]\r\nr1 = thisNode.f_lerp_range.get()[1]\r\n\r\nir = [i0, i1]\r\nlr = [r0, r1]\r\n\r\ny_new = np.interp(i, ir, lr)\r\nret = y_new\r\n\r\n\r\n", True, 0)
    del param
    param = groupSwitch2.getParam("which")
    param.setExpression("thisGroup.do_burn_after.get() ", False, 0)
    del param
    param = groupLcoagu_Lthin.getParam("i_input")
    param.setExpression("thisGroup.coagulation.get()", False, 0)
    del param
    param = groupLcoagu_Lthin.getParam("i_lerp_result")
    param.setExpression("import numpy as np\r\n\r\ni = thisNode.i_input.get()\r\n\r\ni0 = thisNode.i_input_range.get()[0]\r\ni1 = thisNode.i_input_range.get()[1]\r\n\r\nr0 = thisNode.i_lerp_range.get()[0]\r\nr1 = thisNode.i_lerp_range.get()[1]\r\n\r\nir = [i0, i1]\r\nlr = [r0, r1]\r\n\r\ny_new = np.interp(i, ir, lr)\r\nret = y_new\r\n\r\n\r\n", True, 0)
    del param
    param = groupLcoagu_Lthin.getParam("f_input")
    param.setExpression("thisGroup.thinning.get()", False, 0)
    del param
    param = groupLcoagu_Lthin.getParam("f_lerp_result")
    param.setExpression("import numpy as np\r\n\r\ni = thisNode.f_input.get()\r\n\r\ni0 = thisNode.f_input_range.get()[0]\r\ni1 = thisNode.f_input_range.get()[1]\r\n\r\nr0 = thisNode.f_lerp_range.get()[0]\r\nr1 = thisNode.f_lerp_range.get()[1]\r\n\r\nir = [i0, i1]\r\nlr = [r0, r1]\r\n\r\ny_new = np.interp(i, ir, lr)\r\nret = y_new\r\n\r\n\r\n", True, 0)
    del param
    param = groupLclotting.getParam("i_lerp_result")
    param.setExpression("import numpy as np\r\n\r\ni = thisNode.i_input.get()\r\n\r\ni0 = thisNode.i_input_range.get()[0]\r\ni1 = thisNode.i_input_range.get()[1]\r\n\r\nr0 = thisNode.i_lerp_range.get()[0]\r\nr1 = thisNode.i_lerp_range.get()[1]\r\n\r\nir = [i0, i1]\r\nlr = [r0, r1]\r\n\r\ny_new = np.interp(i, ir, lr)\r\nret = y_new\r\n\r\n\r\n", True, 0)
    del param
    param = groupLclotting.getParam("f_input")
    param.setExpression("thisGroup.clotting.get()", False, 0)
    del param
    param = groupLclotting.getParam("f_lerp_result")
    param.setExpression("import numpy as np\r\n\r\ni = thisNode.f_input.get()\r\n\r\ni0 = thisNode.f_input_range.get()[0]\r\ni1 = thisNode.f_input_range.get()[1]\r\n\r\nr0 = thisNode.f_lerp_range.get()[0]\r\nr1 = thisNode.f_lerp_range.get()[1]\r\n\r\nir = [i0, i1]\r\nlr = [r0, r1]\r\n\r\ny_new = np.interp(i, ir, lr)\r\nret = y_new\r\n\r\n\r\n", True, 0)
    del param
    param = groupdoSeparation.getParam("which")
    param.setExpression("thisGroup.do_separation.get()", False, 0)
    del param
    param = groupLerp_lumpiness.getParam("i_lerp_result")
    param.setExpression("import numpy as np\r\n\r\ni = thisNode.i_input.get()\r\n\r\ni0 = thisNode.i_input_range.get()[0]\r\ni1 = thisNode.i_input_range.get()[1]\r\n\r\nr0 = thisNode.i_lerp_range.get()[0]\r\nr1 = thisNode.i_lerp_range.get()[1]\r\n\r\nir = [i0, i1]\r\nlr = [r0, r1]\r\n\r\ny_new = np.interp(i, ir, lr)\r\nret = y_new\r\n\r\n\r\n", True, 0)
    del param
    param = groupLerp_lumpiness.getParam("f_input")
    param.setExpression("thisGroup.lumpy_small_size.get()", False, 0)
    del param
    param = groupLerp_lumpiness.getParam("f_lerp_result")
    param.setExpression("import numpy as np\r\n\r\ni = thisNode.f_input.get()\r\n\r\ni0 = thisNode.f_input_range.get()[0]\r\ni1 = thisNode.f_input_range.get()[1]\r\n\r\nr0 = thisNode.f_lerp_range.get()[0]\r\nr1 = thisNode.f_lerp_range.get()[1]\r\n\r\nir = [i0, i1]\r\nlr = [r0, r1]\r\n\r\ny_new = np.interp(i, ir, lr)\r\nret = y_new\r\n\r\n\r\n", True, 0)
    del param
    param = groupSwitch1.getParam("which")
    param.setExpression("thisGroup.do_lumpiness.get()", False, 0)
    del param
    param = groupLerp_lumpy_mix.getParam("i_lerp_result")
    param.setExpression("import numpy as np\r\n\r\ni = thisNode.i_input.get()\r\n\r\ni0 = thisNode.i_input_range.get()[0]\r\ni1 = thisNode.i_input_range.get()[1]\r\n\r\nr0 = thisNode.i_lerp_range.get()[0]\r\nr1 = thisNode.i_lerp_range.get()[1]\r\n\r\nir = [i0, i1]\r\nlr = [r0, r1]\r\n\r\ny_new = np.interp(i, ir, lr)\r\nret = y_new\r\n\r\n\r\n", True, 0)
    del param
    param = groupLerp_lumpy_mix.getParam("f_input")
    param.setExpression("thisGroup.lumpy_mix.get()", False, 0)
    del param
    param = groupLerp_lumpy_mix.getParam("f_lerp_result")
    param.setExpression("import numpy as np\r\n\r\ni = thisNode.f_input.get()\r\n\r\ni0 = thisNode.f_input_range.get()[0]\r\ni1 = thisNode.f_input_range.get()[1]\r\n\r\nr0 = thisNode.f_lerp_range.get()[0]\r\nr1 = thisNode.f_lerp_range.get()[1]\r\n\r\nir = [i0, i1]\r\nlr = [r0, r1]\r\n\r\ny_new = np.interp(i, ir, lr)\r\nret = y_new\r\n\r\n\r\n", True, 0)
    del param
    param = groupLerp_burn.getParam("i_input")
    param.setExpression("thisNode.i_input_range.get()[1]-thisGroup.burn_edges2.get()", False, 0)
    del param
    param = groupLerp_burn.getParam("i_lerp_result")
    param.setExpression("import numpy as np\r\n\r\ni = thisNode.i_input.get()\r\n\r\ni0 = thisNode.i_input_range.get()[0]\r\ni1 = thisNode.i_input_range.get()[1]\r\n\r\nr0 = thisNode.i_lerp_range.get()[0]\r\nr1 = thisNode.i_lerp_range.get()[1]\r\n\r\nir = [i0, i1]\r\nlr = [r0, r1]\r\n\r\ny_new = np.interp(i, ir, lr)\r\nret = y_new\r\n\r\n\r\n", True, 0)
    del param
    param = groupLerp_burn.getParam("f_input")
    param.setExpression("thisGroup.burn_amt2.get()", False, 0)
    del param
    param = groupLerp_burn.getParam("f_lerp_result")
    param.setExpression("import numpy as np\r\n\r\ni = thisNode.f_input.get()\r\n\r\ni0 = thisNode.f_input_range.get()[0]\r\ni1 = thisNode.f_input_range.get()[1]\r\n\r\nr0 = thisNode.f_lerp_range.get()[0]\r\nr1 = thisNode.f_lerp_range.get()[1]\r\n\r\nir = [i0, i1]\r\nlr = [r0, r1]\r\n\r\ny_new = np.interp(i, ir, lr)\r\nret = y_new\r\n\r\n\r\n", True, 0)
    del param
    param = groupLabsorption.getParam("i_lerp_result")
    param.setExpression("import numpy as np\r\n\r\ni = thisNode.i_input.get()\r\n\r\ni0 = thisNode.i_input_range.get()[0]\r\ni1 = thisNode.i_input_range.get()[1]\r\n\r\nr0 = thisNode.i_lerp_range.get()[0]\r\nr1 = thisNode.i_lerp_range.get()[1]\r\n\r\nir = [i0, i1]\r\nlr = [r0, r1]\r\n\r\ny_new = np.interp(i, ir, lr)\r\nret = y_new\r\n\r\n\r\n", True, 0)
    del param
    param = groupLabsorption.getParam("f_input")
    param.setExpression("thisGroup.absorption.get()", False, 0)
    del param
    param = groupLabsorption.getParam("f_lerp_result")
    param.setExpression("import numpy as np\r\n\r\ni = thisNode.f_input.get()\r\n\r\ni0 = thisNode.f_input_range.get()[0]\r\ni1 = thisNode.f_input_range.get()[1]\r\n\r\nr0 = thisNode.f_lerp_range.get()[0]\r\nr1 = thisNode.f_lerp_range.get()[1]\r\n\r\nir = [i0, i1]\r\nlr = [r0, r1]\r\n\r\ny_new = np.interp(i, ir, lr)\r\nret = y_new\r\n\r\n\r\n", True, 0)
    del param
    param = groupMelt.getParam("Amplitude")
    param.setExpression("Lmelt_amp.f_lerp_result.get()", False, 0)
    del param
    param = groupMelt.getParam("Frequency_")
    param.setExpression("Lmelt_freq.f_lerp_result.get()", False, 0)
    del param
    param = groupSwitchMelt.getParam("which")
    param.setExpression("thisGroup.do_melt.get()", False, 0)
    del param
    param = groupLmelt_freq.getParam("i_lerp_result")
    param.setExpression("import numpy as np\r\n\r\ni = thisNode.i_input.get()\r\n\r\ni0 = thisNode.i_input_range.get()[0]\r\ni1 = thisNode.i_input_range.get()[1]\r\n\r\nr0 = thisNode.i_lerp_range.get()[0]\r\nr1 = thisNode.i_lerp_range.get()[1]\r\n\r\nir = [i0, i1]\r\nlr = [r0, r1]\r\n\r\ny_new = np.interp(i, ir, lr)\r\nret = y_new\r\n\r\n\r\n", True, 0)
    del param
    param = groupLmelt_freq.getParam("f_input")
    param.setExpression("thisGroup.liquify.get()", False, 0)
    del param
    param = groupLmelt_freq.getParam("f_lerp_result")
    param.setExpression("import numpy as np\r\n\r\ni = thisNode.f_input.get()\r\n\r\ni0 = thisNode.f_input_range.get()[0]\r\ni1 = thisNode.f_input_range.get()[1]\r\n\r\nr0 = thisNode.f_lerp_range.get()[0]\r\nr1 = thisNode.f_lerp_range.get()[1]\r\n\r\nir = [i0, i1]\r\nlr = [r0, r1]\r\n\r\ny_new = np.interp(i, ir, lr)\r\nret = y_new\r\n\r\n\r\n", True, 0)
    del param
    param = groupLmelt_amp.getParam("i_lerp_result")
    param.setExpression("import numpy as np\r\n\r\ni = thisNode.i_input.get()\r\n\r\ni0 = thisNode.i_input_range.get()[0]\r\ni1 = thisNode.i_input_range.get()[1]\r\n\r\nr0 = thisNode.i_lerp_range.get()[0]\r\nr1 = thisNode.i_lerp_range.get()[1]\r\n\r\nir = [i0, i1]\r\nlr = [r0, r1]\r\n\r\ny_new = np.interp(i, ir, lr)\r\nret = y_new\r\n\r\n\r\n", True, 0)
    del param
    param = groupLmelt_amp.getParam("f_input")
    param.setExpression("thisGroup.amplify.get()", False, 0)
    del param
    param = groupLmelt_amp.getParam("f_lerp_result")
    param.setExpression("import numpy as np\r\n\r\ni = thisNode.f_input.get()\r\n\r\ni0 = thisNode.f_input_range.get()[0]\r\ni1 = thisNode.f_input_range.get()[1]\r\n\r\nr0 = thisNode.f_lerp_range.get()[0]\r\nr1 = thisNode.f_lerp_range.get()[1]\r\n\r\nir = [i0, i1]\r\nlr = [r0, r1]\r\n\r\ny_new = np.interp(i, ir, lr)\r\nret = y_new\r\n\r\n\r\n", True, 0)
    del param
    param = groupSwitch3.getParam("which")
    param.setExpression("thisGroup.maskFile.get()", False, 0)
    del param
    param = groupBlur3.getParam("size")
    param.setExpression("thisGroup.burn_edges.get()*3", False, 0)
    param.setExpression("thisGroup.burn_edges.get()*3", False, 1)
    del param
    param = groupLerp_burn_2.getParam("i_lerp_result")
    param.setExpression("import numpy as np\r\n\r\ni = thisNode.i_input.get()\r\n\r\ni0 = thisNode.i_input_range.get()[0]\r\ni1 = thisNode.i_input_range.get()[1]\r\n\r\nr0 = thisNode.i_lerp_range.get()[0]\r\nr1 = thisNode.i_lerp_range.get()[1]\r\n\r\nir = [i0, i1]\r\nlr = [r0, r1]\r\n\r\ny_new = np.interp(i, ir, lr)\r\nret = y_new\r\n\r\n\r\n", True, 0)
    del param
    param = groupLerp_burn_2.getParam("f_input")
    param.setExpression("thisGroup.burn_amt2.get()", False, 0)
    del param
    param = groupLerp_burn_2.getParam("f_lerp_result")
    param.setExpression("import numpy as np\r\n\r\ni = thisNode.f_input.get()\r\n\r\ni0 = thisNode.f_input_range.get()[0]\r\ni1 = thisNode.f_input_range.get()[1]\r\n\r\nr0 = thisNode.f_lerp_range.get()[0]\r\nr1 = thisNode.f_lerp_range.get()[1]\r\n\r\nir = [i0, i1]\r\nlr = [r0, r1]\r\n\r\ny_new = np.interp(i, ir, lr)\r\nret = y_new\r\n\r\n\r\n", True, 0)
    del param
    param = groupErode4.getParam("size")
    param.setExpression("thisGroup.burn_edges.get()*2", False, 0)
    param.setExpression("thisGroup.burn_edges.get()*2", False, 1)
    del param
    param = groupTransform1.getParam("scale")
    param.setExpression("1-(thisGroup.burn_amt.get()*.001)", False, 0)
    param.setExpression("1-(thisGroup.burn_amt.get()*.001)", False, 1)
    del param
    param = groupLerp_erode.getParam("i_input")
    param.setExpression("(thisGroup.burn_amt2.get()/2)+(thisGroup.burn_edges2.get()/2)", False, 0)
    del param
    param = groupLerp_erode.getParam("i_lerp_result")
    param.setExpression("import numpy as np\r\n\r\ni = thisNode.i_input.get()\r\n\r\ni0 = thisNode.i_input_range.get()[0]\r\ni1 = thisNode.i_input_range.get()[1]\r\n\r\nr0 = thisNode.i_lerp_range.get()[0]\r\nr1 = thisNode.i_lerp_range.get()[1]\r\n\r\nir = [i0, i1]\r\nlr = [r0, r1]\r\n\r\ny_new = np.interp(i, ir, lr)\r\nret = y_new\r\n\r\n\r\n", True, 0)
    del param
    param = groupLerp_erode.getParam("f_lerp_result")
    param.setExpression("import numpy as np\r\n\r\ni = thisNode.f_input.get()\r\n\r\ni0 = thisNode.f_input_range.get()[0]\r\ni1 = thisNode.f_input_range.get()[1]\r\n\r\nr0 = thisNode.f_lerp_range.get()[0]\r\nr1 = thisNode.f_lerp_range.get()[1]\r\n\r\nir = [i0, i1]\r\nlr = [r0, r1]\r\n\r\ny_new = np.interp(i, ir, lr)\r\nret = y_new\r\n\r\n\r\n", True, 0)
    del param
    param = groupSeGrain_after.getParam("grainIrregularityGreen")
    param.setExpression("thisNode.grainIrregularityRed.get()", False, 0)
    del param
    param = groupSeGrain_after.getParam("grainIrregularityBlue")
    param.setExpression("thisNode.grainIrregularityRed.get()", False, 0)
    del param
    param = groupSeGrain_after.getParam("grainIntensityRed")
    param.setExpression("thisGroup.Lerp2_carmel.f_lerp_result.get()", False, 0)
    del param
    param = groupSeGrain_after.getParam("grainIntensityGreen")
    param.setExpression("thisNode.grainIntensityRed.get()", False, 0)
    del param
    param = groupSeGrain_after.getParam("grainIntensityBlue")
    param.setExpression("thisNode.grainIntensityRed.get()", False, 0)
    del param
    param = groupSeGrain_after.getParam("colorCorr")
    param.setExpression("thisGroup.Lerp3_carmel.f_lerp_result.get()", False, 0)
    del param
    param = groupLerp_grain.getParam("i_lerp_result")
    param.setExpression("import numpy as np\r\n\r\ni = thisNode.i_input.get()\r\n\r\ni0 = thisNode.i_input_range.get()[0]\r\ni1 = thisNode.i_input_range.get()[1]\r\n\r\nr0 = thisNode.i_lerp_range.get()[0]\r\nr1 = thisNode.i_lerp_range.get()[1]\r\n\r\nir = [i0, i1]\r\nlr = [r0, r1]\r\n\r\ny_new = np.interp(i, ir, lr)\r\nret = y_new\r\n\r\n\r\n", True, 0)
    del param
    param = groupLerp_grain.getParam("f_input")
    param.setExpression("thisGroup.burn_amt2.get()", False, 0)
    del param
    param = groupLerp_grain.getParam("f_lerp_result")
    param.setExpression("import numpy as np\r\n\r\ni = thisNode.f_input.get()\r\n\r\ni0 = thisNode.f_input_range.get()[0]\r\ni1 = thisNode.f_input_range.get()[1]\r\n\r\nr0 = thisNode.f_lerp_range.get()[0]\r\nr1 = thisNode.f_lerp_range.get()[1]\r\n\r\nir = [i0, i1]\r\nlr = [r0, r1]\r\n\r\ny_new = np.interp(i, ir, lr)\r\nret = y_new\r\n\r\n\r\n", True, 0)
    del param
    param = groupLerp1.getParam("i_lerp_result")
    param.setExpression("import numpy as np\r\n\r\ni = thisNode.i_input.get()\r\n\r\ni0 = thisNode.i_input_range.get()[0]\r\ni1 = thisNode.i_input_range.get()[1]\r\n\r\nr0 = thisNode.i_lerp_range.get()[0]\r\nr1 = thisNode.i_lerp_range.get()[1]\r\n\r\nir = [i0, i1]\r\nlr = [r0, r1]\r\n\r\ny_new = np.interp(i, ir, lr)\r\nret = y_new\r\n\r\n\r\n", True, 0)
    del param
    param = groupLerp1.getParam("f_input")
    param.setExpression("(thisGroup.burn_amt2.get()+thisGroup.burn_edges2.get())", False, 0)
    del param
    param = groupLerp1.getParam("f_lerp_result")
    param.setExpression("import numpy as np\r\n\r\ni = thisNode.f_input.get()\r\n\r\ni0 = thisNode.f_input_range.get()[0]\r\ni1 = thisNode.f_input_range.get()[1]\r\n\r\nr0 = thisNode.f_lerp_range.get()[0]\r\nr1 = thisNode.f_lerp_range.get()[1]\r\n\r\nir = [i0, i1]\r\nlr = [r0, r1]\r\n\r\ny_new = np.interp(i, ir, lr)\r\nret = y_new\r\n\r\n\r\n", True, 0)
    del param
    param = groupTransform2.getParam("scale")
    param.setExpression("(thisGroup.Lexpand.f_lerp_result.get())", False, 0)
    param.setExpression("(thisGroup.Lexpand.f_lerp_result.get())", False, 1)
    del param
    param = groupSwitch2_2.getParam("which")
    param.setExpression("thisGroup.do_burn_before.get()", False, 0)
    del param
    param = groupLerp_burn_3.getParam("i_input")
    param.setExpression("thisNode.i_input_range.get()[1]-thisGroup.burn_edges.get()", False, 0)
    del param
    param = groupLerp_burn_3.getParam("i_lerp_result")
    param.setExpression("import numpy as np\r\n\r\ni = thisNode.i_input.get()\r\n\r\ni0 = thisNode.i_input_range.get()[0]\r\ni1 = thisNode.i_input_range.get()[1]\r\n\r\nr0 = thisNode.i_lerp_range.get()[0]\r\nr1 = thisNode.i_lerp_range.get()[1]\r\n\r\nir = [i0, i1]\r\nlr = [r0, r1]\r\n\r\ny_new = np.interp(i, ir, lr)\r\nret = y_new\r\n\r\n\r\n", True, 0)
    del param
    param = groupLerp_burn_3.getParam("f_input")
    param.setExpression("thisGroup.burn_amt.get()", False, 0)
    del param
    param = groupLerp_burn_3.getParam("f_lerp_result")
    param.setExpression("import numpy as np\r\n\r\ni = thisNode.f_input.get()\r\n\r\ni0 = thisNode.f_input_range.get()[0]\r\ni1 = thisNode.f_input_range.get()[1]\r\n\r\nr0 = thisNode.f_lerp_range.get()[0]\r\nr1 = thisNode.f_lerp_range.get()[1]\r\n\r\nir = [i0, i1]\r\nlr = [r0, r1]\r\n\r\ny_new = np.interp(i, ir, lr)\r\nret = y_new\r\n\r\n\r\n", True, 0)
    del param
    param = groupLerp_burn_2_2.getParam("i_lerp_result")
    param.setExpression("import numpy as np\r\n\r\ni = thisNode.i_input.get()\r\n\r\ni0 = thisNode.i_input_range.get()[0]\r\ni1 = thisNode.i_input_range.get()[1]\r\n\r\nr0 = thisNode.i_lerp_range.get()[0]\r\nr1 = thisNode.i_lerp_range.get()[1]\r\n\r\nir = [i0, i1]\r\nlr = [r0, r1]\r\n\r\ny_new = np.interp(i, ir, lr)\r\nret = y_new\r\n\r\n\r\n", True, 0)
    del param
    param = groupLerp_burn_2_2.getParam("f_input")
    param.setExpression("thisGroup.burn_amt.get()", False, 0)
    del param
    param = groupLerp_burn_2_2.getParam("f_lerp_result")
    param.setExpression("import numpy as np\r\n\r\ni = thisNode.f_input.get()\r\n\r\ni0 = thisNode.f_input_range.get()[0]\r\ni1 = thisNode.f_input_range.get()[1]\r\n\r\nr0 = thisNode.f_lerp_range.get()[0]\r\nr1 = thisNode.f_lerp_range.get()[1]\r\n\r\nir = [i0, i1]\r\nlr = [r0, r1]\r\n\r\ny_new = np.interp(i, ir, lr)\r\nret = y_new\r\n\r\n\r\n", True, 0)
    del param
    param = groupErode4_2.getParam("size")
    param.setExpression("100-thisGroup.burn_edges.get()", False, 0)
    param.setExpression("100-thisGroup.burn_edges.get()", False, 1)
    del param
    param = groupTransform1_2.getParam("scale")
    param.setExpression("1-(thisGroup.burn_amt.get()*.001)", False, 0)
    param.setExpression("1-(thisGroup.burn_amt.get()*.001)", False, 1)
    del param
    param = groupErode3_2.getParam("size")
    param.setExpression("thisGroup.Lerp_erode_2.i_lerp_result.get()", False, 0)
    param.setExpression("thisGroup.Lerp_erode_2.i_lerp_result.get()", False, 1)
    del param
    param = groupLerp_erode_2.getParam("i_input")
    param.setExpression("(thisGroup.burn_amt.get()/2)+(thisGroup.burn_edges.get()/2)", False, 0)
    del param
    param = groupLerp_erode_2.getParam("i_lerp_result")
    param.setExpression("import numpy as np\r\n\r\ni = thisNode.i_input.get()\r\n\r\ni0 = thisNode.i_input_range.get()[0]\r\ni1 = thisNode.i_input_range.get()[1]\r\n\r\nr0 = thisNode.i_lerp_range.get()[0]\r\nr1 = thisNode.i_lerp_range.get()[1]\r\n\r\nir = [i0, i1]\r\nlr = [r0, r1]\r\n\r\ny_new = np.interp(i, ir, lr)\r\nret = y_new\r\n\r\n\r\n", True, 0)
    del param
    param = groupLerp_erode_2.getParam("f_lerp_result")
    param.setExpression("import numpy as np\r\n\r\ni = thisNode.f_input.get()\r\n\r\ni0 = thisNode.f_input_range.get()[0]\r\ni1 = thisNode.f_input_range.get()[1]\r\n\r\nr0 = thisNode.f_lerp_range.get()[0]\r\nr1 = thisNode.f_lerp_range.get()[1]\r\n\r\nir = [i0, i1]\r\nlr = [r0, r1]\r\n\r\ny_new = np.interp(i, ir, lr)\r\nret = y_new\r\n\r\n\r\n", True, 0)
    del param
    param = groupSeGrain1_before.getParam("grainSizeAll")
    param.setExpression("thisGroup.Lerp_grain_2.f_lerp_result.get()", False, 0)
    del param
    param = groupSeGrain1_before.getParam("grainIrregularityRed")
    param.setExpression("thisGroup.Lerp1_2.f_lerp_result.get()", False, 0)
    del param
    param = groupSeGrain1_before.getParam("grainIntensityRed")
    param.setExpression("thisGroup.Lerp_carmel_2.f_lerp_result.get()", False, 0)
    del param
    param = groupSeGrain1_before.getParam("colorCorr")
    param.setExpression("thisGroup.Lerp_carmel.f_lerp_result.get()", False, 0)
    del param
    param = groupLerp_grain_2.getParam("i_lerp_result")
    param.setExpression("import numpy as np\r\n\r\ni = thisNode.i_input.get()\r\n\r\ni0 = thisNode.i_input_range.get()[0]\r\ni1 = thisNode.i_input_range.get()[1]\r\n\r\nr0 = thisNode.i_lerp_range.get()[0]\r\nr1 = thisNode.i_lerp_range.get()[1]\r\n\r\nir = [i0, i1]\r\nlr = [r0, r1]\r\n\r\ny_new = np.interp(i, ir, lr)\r\nret = y_new\r\n\r\n\r\n", True, 0)
    del param
    param = groupLerp_grain_2.getParam("f_input")
    param.setExpression("thisGroup.burn_amt.get()", False, 0)
    del param
    param = groupLerp_grain_2.getParam("f_lerp_result")
    param.setExpression("import numpy as np\r\n\r\ni = thisNode.f_input.get()\r\n\r\ni0 = thisNode.f_input_range.get()[0]\r\ni1 = thisNode.f_input_range.get()[1]\r\n\r\nr0 = thisNode.f_lerp_range.get()[0]\r\nr1 = thisNode.f_lerp_range.get()[1]\r\n\r\nir = [i0, i1]\r\nlr = [r0, r1]\r\n\r\ny_new = np.interp(i, ir, lr)\r\nret = y_new\r\n\r\n\r\n", True, 0)
    del param
    param = groupLerp1_2.getParam("i_lerp_result")
    param.setExpression("import numpy as np\r\n\r\ni = thisNode.i_input.get()\r\n\r\ni0 = thisNode.i_input_range.get()[0]\r\ni1 = thisNode.i_input_range.get()[1]\r\n\r\nr0 = thisNode.i_lerp_range.get()[0]\r\nr1 = thisNode.i_lerp_range.get()[1]\r\n\r\nir = [i0, i1]\r\nlr = [r0, r1]\r\n\r\ny_new = np.interp(i, ir, lr)\r\nret = y_new\r\n\r\n\r\n", True, 0)
    del param
    param = groupLerp1_2.getParam("f_input")
    param.setExpression("(thisGroup.burn_amt.get()+thisGroup.burn_edges.get())", False, 0)
    del param
    param = groupLerp1_2.getParam("f_lerp_result")
    param.setExpression("import numpy as np\r\n\r\ni = thisNode.f_input.get()\r\n\r\ni0 = thisNode.f_input_range.get()[0]\r\ni1 = thisNode.f_input_range.get()[1]\r\n\r\nr0 = thisNode.f_lerp_range.get()[0]\r\nr1 = thisNode.f_lerp_range.get()[1]\r\n\r\nir = [i0, i1]\r\nlr = [r0, r1]\r\n\r\ny_new = np.interp(i, ir, lr)\r\nret = y_new\r\n\r\n\r\n", True, 0)
    del param
    param = groupLerp_carmel.getParam("i_lerp_result")
    param.setExpression("import numpy as np\r\n\r\ni = thisNode.i_input.get()\r\n\r\ni0 = thisNode.i_input_range.get()[0]\r\ni1 = thisNode.i_input_range.get()[1]\r\n\r\nr0 = thisNode.i_lerp_range.get()[0]\r\nr1 = thisNode.i_lerp_range.get()[1]\r\n\r\nir = [i0, i1]\r\nlr = [r0, r1]\r\n\r\ny_new = np.interp(i, ir, lr)\r\nret = y_new\r\n\r\n\r\n", True, 0)
    del param
    param = groupLerp_carmel.getParam("f_input")
    param.setExpression("thisGroup.caramelization.get()", False, 0)
    del param
    param = groupLerp_carmel.getParam("f_lerp_result")
    param.setExpression("import numpy as np\r\n\r\ni = thisNode.f_input.get()\r\n\r\ni0 = thisNode.f_input_range.get()[0]\r\ni1 = thisNode.f_input_range.get()[1]\r\n\r\nr0 = thisNode.f_lerp_range.get()[0]\r\nr1 = thisNode.f_lerp_range.get()[1]\r\n\r\nir = [i0, i1]\r\nlr = [r0, r1]\r\n\r\ny_new = np.interp(i, ir, lr)\r\nret = y_new\r\n\r\n\r\n", True, 0)
    del param
    param = groupLerp_carmel_2.getParam("i_lerp_result")
    param.setExpression("import numpy as np\r\n\r\ni = thisNode.i_input.get()\r\n\r\ni0 = thisNode.i_input_range.get()[0]\r\ni1 = thisNode.i_input_range.get()[1]\r\n\r\nr0 = thisNode.i_lerp_range.get()[0]\r\nr1 = thisNode.i_lerp_range.get()[1]\r\n\r\nir = [i0, i1]\r\nlr = [r0, r1]\r\n\r\ny_new = np.interp(i, ir, lr)\r\nret = y_new\r\n\r\n\r\n", True, 0)
    del param
    param = groupLerp_carmel_2.getParam("f_input")
    param.setExpression("thisGroup.caramelization.get()", False, 0)
    del param
    param = groupLerp_carmel_2.getParam("f_lerp_result")
    param.setExpression("import numpy as np\r\n\r\ni = thisNode.f_input.get()\r\n\r\ni0 = thisNode.f_input_range.get()[0]\r\ni1 = thisNode.f_input_range.get()[1]\r\n\r\nr0 = thisNode.f_lerp_range.get()[0]\r\nr1 = thisNode.f_lerp_range.get()[1]\r\n\r\nir = [i0, i1]\r\nlr = [r0, r1]\r\n\r\ny_new = np.interp(i, ir, lr)\r\nret = y_new\r\n\r\n\r\n", True, 0)
    del param
    param = groupLerp2_carmel.getParam("i_lerp_result")
    param.setExpression("import numpy as np\r\n\r\ni = thisNode.i_input.get()\r\n\r\ni0 = thisNode.i_input_range.get()[0]\r\ni1 = thisNode.i_input_range.get()[1]\r\n\r\nr0 = thisNode.i_lerp_range.get()[0]\r\nr1 = thisNode.i_lerp_range.get()[1]\r\n\r\nir = [i0, i1]\r\nlr = [r0, r1]\r\n\r\ny_new = np.interp(i, ir, lr)\r\nret = y_new\r\n\r\n\r\n", True, 0)
    del param
    param = groupLerp2_carmel.getParam("f_input")
    param.setExpression("thisGroup.caramelization2.get()", False, 0)
    del param
    param = groupLerp2_carmel.getParam("f_lerp_result")
    param.setExpression("import numpy as np\r\n\r\ni = thisNode.f_input.get()\r\n\r\ni0 = thisNode.f_input_range.get()[0]\r\ni1 = thisNode.f_input_range.get()[1]\r\n\r\nr0 = thisNode.f_lerp_range.get()[0]\r\nr1 = thisNode.f_lerp_range.get()[1]\r\n\r\nir = [i0, i1]\r\nlr = [r0, r1]\r\n\r\ny_new = np.interp(i, ir, lr)\r\nret = y_new\r\n\r\n\r\n", True, 0)
    del param
    param = groupLerp3_carmel.getParam("i_lerp_result")
    param.setExpression("import numpy as np\r\n\r\ni = thisNode.i_input.get()\r\n\r\ni0 = thisNode.i_input_range.get()[0]\r\ni1 = thisNode.i_input_range.get()[1]\r\n\r\nr0 = thisNode.i_lerp_range.get()[0]\r\nr1 = thisNode.i_lerp_range.get()[1]\r\n\r\nir = [i0, i1]\r\nlr = [r0, r1]\r\n\r\ny_new = np.interp(i, ir, lr)\r\nret = y_new\r\n\r\n\r\n", True, 0)
    del param
    param = groupLerp3_carmel.getParam("f_input")
    param.setExpression("thisGroup.caramelization2.get()", False, 0)
    del param
    param = groupLerp3_carmel.getParam("f_lerp_result")
    param.setExpression("import numpy as np\r\n\r\ni = thisNode.f_input.get()\r\n\r\ni0 = thisNode.f_input_range.get()[0]\r\ni1 = thisNode.f_input_range.get()[1]\r\n\r\nr0 = thisNode.f_lerp_range.get()[0]\r\nr1 = thisNode.f_lerp_range.get()[1]\r\n\r\nir = [i0, i1]\r\nlr = [r0, r1]\r\n\r\ny_new = np.interp(i, ir, lr)\r\nret = y_new\r\n\r\n\r\n", True, 0)
    del param
    param = groupGrade1.getParam("white")
    param.setExpression("Lerp_burn_3.f_lerp_result.get()", False, 0)
    param.setExpression("Lerp_burn_3.f_lerp_result.get()", False, 1)
    param.setExpression("Lerp_burn_3.f_lerp_result.get()", False, 2)
    param.setExpression("Lerp_burn_3.f_lerp_result.get()", False, 3)
    del param
    param = groupGrade1.getParam("multiply")
    param.setExpression("thisGroup.Lerp_Grade1Mult.f_lerp_result.get()", False, 0)
    param.setExpression("thisGroup.Lerp_Grade1Mult.f_lerp_result.get()", False, 1)
    param.setExpression("thisGroup.Lerp_Grade1Mult.f_lerp_result.get()", False, 2)
    param.setExpression("thisGroup.Lerp_Grade1Mult.f_lerp_result.get()", False, 3)
    del param
    param = groupGrade1.getParam("gamma")
    param.setExpression("Lerp_burn_3.f_lerp_result.get()", False, 0)
    param.setExpression("Lerp_burn_3.f_lerp_result.get()", False, 1)
    param.setExpression("Lerp_burn_3.f_lerp_result.get()", False, 2)
    param.setExpression("Lerp_burn_3.f_lerp_result.get()", False, 3)
    del param
    param = groupLexpand.getParam("i_input")
    param.setExpression("thisGroup.liquify.get()", False, 0)
    del param
    param = groupLexpand.getParam("i_lerp_result")
    param.setExpression("import numpy as np\r\n\r\ni = thisNode.i_input.get()\r\n\r\ni0 = thisNode.i_input_range.get()[0]\r\ni1 = thisNode.i_input_range.get()[1]\r\n\r\nr0 = thisNode.i_lerp_range.get()[0]\r\nr1 = thisNode.i_lerp_range.get()[1]\r\n\r\nir = [i0, i1]\r\nlr = [r0, r1]\r\n\r\ny_new = np.interp(i, ir, lr)\r\nret = y_new\r\n\r\n\r\n", True, 0)
    del param
    param = groupLexpand.getParam("f_input")
    param.setExpression("thisGroup.expand.get()", False, 0)
    del param
    param = groupLexpand.getParam("f_lerp_result")
    param.setExpression("import numpy as np\r\n\r\ni = thisNode.f_input.get()\r\n\r\ni0 = thisNode.f_input_range.get()[0]\r\ni1 = thisNode.f_input_range.get()[1]\r\n\r\nr0 = thisNode.f_lerp_range.get()[0]\r\nr1 = thisNode.f_lerp_range.get()[1]\r\n\r\nir = [i0, i1]\r\nlr = [r0, r1]\r\n\r\ny_new = np.interp(i, ir, lr)\r\nret = round(y_new,2)\r\n\r\n\r\n", True, 0)
    del param
    param = groupGrade3.getParam("white")
    param.setExpression("1-Lerp_burn.f_lerp_result.get()+1", False, 0)
    param.setExpression("1-Lerp_burn.f_lerp_result.get()+1", False, 1)
    param.setExpression("1-Lerp_burn.f_lerp_result.get()+1", False, 2)
    param.setExpression("1-Lerp_burn.f_lerp_result.get()+1", False, 3)
    del param
    param = groupGrade3.getParam("gamma")
    param.setExpression("Lerp_burn.f_lerp_result.get()", False, 0)
    param.setExpression("Lerp_burn.f_lerp_result.get()", False, 1)
    param.setExpression("Lerp_burn.f_lerp_result.get()", False, 2)
    param.setExpression("Lerp_burn.f_lerp_result.get()", False, 3)
    del param
    param = groupGrade3_2.getParam("whitePoint")
    param.setExpression("thisGroup.Lerp_whitepoint.f_lerp_result.get()", False, 0)
    param.setExpression("thisGroup.Lerp_whitepoint.f_lerp_result.get()", False, 1)
    param.setExpression("thisGroup.Lerp_whitepoint.f_lerp_result.get()", False, 2)
    param.setExpression("thisGroup.Lerp_whitepoint.f_lerp_result.get()", False, 3)
    del param
    param = groupGrade3_2.getParam("white")
    param.setExpression("Lerp_burn.f_lerp_result.get()", False, 0)
    param.setExpression("Lerp_burn.f_lerp_result.get()", False, 1)
    param.setExpression("Lerp_burn.f_lerp_result.get()", False, 2)
    param.setExpression("Lerp_burn.f_lerp_result.get()", False, 3)
    del param
    param = groupGrade3_2.getParam("gamma")
    param.setExpression("Lerp_burn.f_lerp_result.get()", False, 0)
    param.setExpression("Lerp_burn.f_lerp_result.get()", False, 1)
    param.setExpression("Lerp_burn.f_lerp_result.get()", False, 2)
    param.setExpression("Lerp_burn.f_lerp_result.get()", False, 3)
    del param
    param = groupLerp_whitepoint.getParam("i_lerp_result")
    param.setExpression("import numpy as np\r\n\r\ni = thisNode.i_input.get()\r\n\r\ni0 = thisNode.i_input_range.get()[0]\r\ni1 = thisNode.i_input_range.get()[1]\r\n\r\nr0 = thisNode.i_lerp_range.get()[0]\r\nr1 = thisNode.i_lerp_range.get()[1]\r\n\r\nir = [i0, i1]\r\nlr = [r0, r1]\r\n\r\ny_new = np.interp(i, ir, lr)\r\nret = y_new\r\n\r\n\r\n", True, 0)
    del param
    param = groupLerp_whitepoint.getParam("f_input")
    param.setExpression("thisGroup.burn_edges2.get()", False, 0)
    del param
    param = groupLerp_whitepoint.getParam("f_lerp_result")
    param.setExpression("import numpy as np\r\n\r\ni = thisNode.f_input.get()\r\n\r\ni0 = thisNode.f_input_range.get()[0]\r\ni1 = thisNode.f_input_range.get()[1]\r\n\r\nr0 = thisNode.f_lerp_range.get()[0]\r\nr1 = thisNode.f_lerp_range.get()[1]\r\n\r\nir = [i0, i1]\r\nlr = [r0, r1]\r\n\r\ny_new = np.interp(i, ir, lr)\r\nret = y_new\r\n\r\n\r\n", True, 0)
    del param
    param = groupLerpLumpySpec.getParam("i_lerp_result")
    param.setExpression("import numpy as np\r\n\r\ni = thisNode.i_input.get()\r\n\r\ni0 = thisNode.i_input_range.get()[0]\r\ni1 = thisNode.i_input_range.get()[1]\r\n\r\nr0 = thisNode.i_lerp_range.get()[0]\r\nr1 = thisNode.i_lerp_range.get()[1]\r\n\r\nir = [i0, i1]\r\nlr = [r0, r1]\r\n\r\ny_new = np.interp(i, ir, lr)\r\nret = y_new\r\n\r\n\r\n", True, 0)
    del param
    param = groupLerpLumpySpec.getParam("f_input")
    param.setExpression("thisGroup.lumpy_height.get()", False, 0)
    del param
    param = groupLerpLumpySpec.getParam("f_lerp_result")
    param.setExpression("import numpy as np\r\n\r\ni = thisNode.f_input.get()\r\n\r\ni0 = thisNode.f_input_range.get()[0]\r\ni1 = thisNode.f_input_range.get()[1]\r\n\r\nr0 = thisNode.f_lerp_range.get()[0]\r\nr1 = thisNode.f_lerp_range.get()[1]\r\n\r\nir = [i0, i1]\r\nlr = [r0, r1]\r\n\r\ny_new = np.interp(i, ir, lr)\r\nret = y_new\r\n\r\n\r\n", True, 0)
    del param
    param = groupSwitchMelt1.getParam("which")
    param.setExpression("thisGroup.Lexpand.i_lerp_result.get()", False, 0)
    del param
    param = groupLerp2.getParam("i_lerp_result")
    param.setExpression("import numpy as np\r\n\r\ni = thisNode.i_input.get()\r\n\r\ni0 = thisNode.i_input_range.get()[0]\r\ni1 = thisNode.i_input_range.get()[1]\r\n\r\nr0 = thisNode.i_lerp_range.get()[0]\r\nr1 = thisNode.i_lerp_range.get()[1]\r\n\r\nir = [i0, i1]\r\nlr = [r0, r1]\r\n\r\ny_new = np.interp(i, ir, lr)\r\nret = y_new\r\n\r\n\r\n", True, 0)
    del param
    param = groupLerp2.getParam("f_input")
    param.setExpression("thisGroup.saturated_fat.get()", False, 0)
    del param
    param = groupLerp2.getParam("f_lerp_result")
    param.setExpression("import numpy as np\r\n\r\ni = thisNode.f_input.get()\r\n\r\ni0 = thisNode.f_input_range.get()[0]\r\ni1 = thisNode.f_input_range.get()[1]\r\n\r\nr0 = thisNode.f_lerp_range.get()[0]\r\nr1 = thisNode.f_lerp_range.get()[1]\r\n\r\nir = [i0, i1]\r\nlr = [r0, r1]\r\n\r\ny_new = np.interp(i, ir, lr)\r\nret = y_new\r\n\r\n\r\n", True, 0)
    del param
    param = groupLumpy_big.getParam("grainSizeGreen")
    param.setExpression("thisNode.grainSizeRed.get()", False, 0)
    del param
    param = groupLumpy_big.getParam("grainSizeBlue")
    param.setExpression("thisNode.grainSizeRed.get()", False, 0)
    del param
    param = groupLumpy_big.getParam("grainIntensityRed")
    param.setExpression("thisGroup.Lerp_lumpy_big_gain.i_input.get()*.01", False, 0)
    del param
    param = groupLumpy_big.getParam("grainIntensityGreen")
    param.setExpression("thisNode.grainIntensityRed.get()", False, 0)
    del param
    param = groupLumpy_big.getParam("grainIntensityBlue")
    param.setExpression("thisNode.grainIntensityRed.get()", False, 0)
    del param
    param = groupLumpy_big.getParam("grainBlack")
    param.setExpression("thisGroup.Lerp_lump_big_intensity.f_lerp_result.get()", False, 0)
    param.setExpression("thisGroup.Lerp_lump_big_intensity.f_lerp_result.get()", False, 1)
    param.setExpression("thisGroup.Lerp_lump_big_intensity.f_lerp_result.get()", False, 2)
    del param
    param = groupLumpy_big.getParam("mix")
    param.setExpression("thisGroup.lumpy_big_size.get()", False, 0)
    del param
    param = groupLerp_lumpy_big_gain.getParam("i_lerp_result")
    param.setExpression("import numpy as np\r\n\r\ni = thisNode.i_input.get()\r\n\r\ni0 = thisNode.i_input_range.get()[0]\r\ni1 = thisNode.i_input_range.get()[1]\r\n\r\nr0 = thisNode.i_lerp_range.get()[0]\r\nr1 = thisNode.i_lerp_range.get()[1]\r\n\r\nir = [i0, i1]\r\nlr = [r0, r1]\r\n\r\ny_new = np.interp(i, ir, lr)\r\nret = y_new\r\n\r\n\r\n", True, 0)
    del param
    param = groupLerp_lumpy_big_gain.getParam("f_lerp_result")
    param.setExpression("import numpy as np\r\n\r\ni = thisNode.f_input.get()\r\n\r\ni0 = thisNode.f_input_range.get()[0]\r\ni1 = thisNode.f_input_range.get()[1]\r\n\r\nr0 = thisNode.f_lerp_range.get()[0]\r\nr1 = thisNode.f_lerp_range.get()[1]\r\n\r\nir = [i0, i1]\r\nlr = [r0, r1]\r\n\r\ny_new = np.interp(i, ir, lr)\r\nret = y_new\r\n\r\n\r\n", True, 0)
    del param
    param = groupLerp_Grade1Mult.getParam("i_lerp_result")
    param.setExpression("import numpy as np\r\n\r\ni = thisNode.i_input.get()\r\n\r\ni0 = thisNode.i_input_range.get()[0]\r\ni1 = thisNode.i_input_range.get()[1]\r\n\r\nr0 = thisNode.i_lerp_range.get()[0]\r\nr1 = thisNode.i_lerp_range.get()[1]\r\n\r\nir = [i0, i1]\r\nlr = [r0, r1]\r\n\r\ny_new = np.interp(i, ir, lr)\r\nret = y_new\r\n\r\n\r\n", True, 0)
    del param
    param = groupLerp_Grade1Mult.getParam("f_input")
    param.setExpression("thisGroup.burn_edges.get()", False, 0)
    del param
    param = groupLerp_Grade1Mult.getParam("f_lerp_result")
    param.setExpression("import numpy as np\r\n\r\ni = thisNode.f_input.get()\r\n\r\ni0 = thisNode.f_input_range.get()[0]\r\ni1 = thisNode.f_input_range.get()[1]\r\n\r\nr0 = thisNode.f_lerp_range.get()[0]\r\nr1 = thisNode.f_lerp_range.get()[1]\r\n\r\nir = [i0, i1]\r\nlr = [r0, r1]\r\n\r\ny_new = np.interp(i, ir, lr)\r\nret = y_new\r\n\r\n\r\n", True, 0)
    del param
    param = groupLerp_lump_big_intensity.getParam("i_lerp_result")
    param.setExpression("import numpy as np\r\n\r\ni = thisNode.i_input.get()\r\n\r\ni0 = thisNode.i_input_range.get()[0]\r\ni1 = thisNode.i_input_range.get()[1]\r\n\r\nr0 = thisNode.i_lerp_range.get()[0]\r\nr1 = thisNode.i_lerp_range.get()[1]\r\n\r\nir = [i0, i1]\r\nlr = [r0, r1]\r\n\r\ny_new = np.interp(i, ir, lr)\r\nret = y_new\r\n\r\n\r\n", True, 0)
    del param
    param = groupLerp_lump_big_intensity.getParam("f_input")
    param.setExpression("thisGroup.lumpy_big_intensity.get()", False, 0)
    del param
    param = groupLerp_lump_big_intensity.getParam("f_lerp_result")
    param.setExpression("import numpy as np\r\n\r\ni = thisNode.f_input.get()\r\n\r\ni0 = thisNode.f_input_range.get()[0]\r\ni1 = thisNode.f_input_range.get()[1]\r\n\r\nr0 = thisNode.f_lerp_range.get()[0]\r\nr1 = thisNode.f_lerp_range.get()[1]\r\n\r\nir = [i0, i1]\r\nlr = [r0, r1]\r\n\r\ny_new = np.interp(i, ir, lr)\r\nret = y_new\r\n\r\n\r\n", True, 0)
    del param
    param = groupBlur1.getParam("size")
    param.setExpression("thisGroup.Lerp_burn_edges2.i_lerp_result.get()", False, 0)
    param.setExpression("thisGroup.Lerp_burn_edges2.i_lerp_result.get()", False, 1)
    del param
    param = groupGrade6.getParam("multiply")
    param.setExpression("thisGroup.Lerp_burn_edges2.f_lerp_result.get()", False, 0)
    param.setExpression("thisGroup.Lerp_burn_edges2.f_lerp_result.get()", False, 1)
    param.setExpression("thisGroup.Lerp_burn_edges2.f_lerp_result.get()", False, 2)
    param.setExpression("thisGroup.Lerp_burn_edges2.f_lerp_result.get()", False, 3)
    del param
    param = groupGrade6.getParam("gamma")
    param.setExpression("thisGroup.Lerp_burn_edges2.f_lerp_result.get()", False, 0)
    param.setExpression("thisGroup.Lerp_burn_edges2.f_lerp_result.get()", False, 1)
    param.setExpression("thisGroup.Lerp_burn_edges2.f_lerp_result.get()", False, 2)
    param.setExpression("thisGroup.Lerp_burn_edges2.f_lerp_result.get()", False, 3)
    del param
    param = groupLerp_burn_edges2.getParam("i_input")
    param.setExpression("thisGroup.edge_falloff.get()", False, 0)
    del param
    param = groupLerp_burn_edges2.getParam("i_lerp_result")
    param.setExpression("import numpy as np\r\n\r\ni = thisNode.i_input.get()\r\n\r\ni0 = thisNode.i_input_range.get()[0]\r\ni1 = thisNode.i_input_range.get()[1]\r\n\r\nr0 = thisNode.i_lerp_range.get()[0]\r\nr1 = thisNode.i_lerp_range.get()[1]\r\n\r\nir = [i0, i1]\r\nlr = [r0, r1]\r\n\r\ny_new = np.interp(i, ir, lr)\r\nret = y_new\r\n\r\n\r\n", True, 0)
    del param
    param = groupLerp_burn_edges2.getParam("f_lerp_result")
    param.setExpression("import numpy as np\r\n\r\ni = thisNode.f_input.get()\r\n\r\ni0 = thisNode.f_input_range.get()[0]\r\ni1 = thisNode.f_input_range.get()[1]\r\n\r\nr0 = thisNode.f_lerp_range.get()[0]\r\nr1 = thisNode.f_lerp_range.get()[1]\r\n\r\nir = [i0, i1]\r\nlr = [r0, r1]\r\n\r\ny_new = np.interp(i, ir, lr)\r\nret = y_new\r\n\r\n\r\n", True, 0)
    del param
    param = groupLerp_edge.getParam("i_lerp_result")
    param.setExpression("import numpy as np\r\n\r\ni = thisNode.i_input.get()\r\n\r\ni0 = thisNode.i_input_range.get()[0]\r\ni1 = thisNode.i_input_range.get()[1]\r\n\r\nr0 = thisNode.i_lerp_range.get()[0]\r\nr1 = thisNode.i_lerp_range.get()[1]\r\n\r\nir = [i0, i1]\r\nlr = [r0, r1]\r\n\r\ny_new = np.interp(i, ir, lr)\r\nret = y_new\r\n\r\n\r\n", True, 0)
    del param
    param = groupLerp_edge.getParam("f_input")
    param.setExpression("thisGroup.thickness.get()", False, 0)
    del param
    param = groupLerp_edge.getParam("f_lerp_result")
    param.setExpression("import numpy as np\r\n\r\ni = thisNode.f_input.get()\r\n\r\ni0 = thisNode.f_input_range.get()[0]\r\ni1 = thisNode.f_input_range.get()[1]\r\n\r\nr0 = thisNode.f_lerp_range.get()[0]\r\nr1 = thisNode.f_lerp_range.get()[1]\r\n\r\nir = [i0, i1]\r\nlr = [r0, r1]\r\n\r\ny_new = np.interp(i, ir, lr)\r\nret = y_new\r\n\r\n\r\n", True, 0)
    del param
    param = groupErodeBlur1.getParam("size")
    param.setExpression("thisGroup.Lerp_edge.f_lerp_result.get()", False, 0)
    del param
    param = groupMerge5.getParam("mix")
    param.setExpression("1-thisGroup.burn_edges2.get()/100", False, 0)
    del param
    param = groupGrade5.getParam("whitePoint")
    param.setExpression("thisGroup.Lerp_whitepoint.f_lerp_result.get()", False, 0)
    param.setExpression("thisGroup.Lerp_whitepoint.f_lerp_result.get()", False, 1)
    param.setExpression("thisGroup.Lerp_whitepoint.f_lerp_result.get()", False, 2)
    param.setExpression("thisGroup.Lerp_whitepoint.f_lerp_result.get()", False, 3)
    del param
    param = groupGrade5.getParam("white")
    param.setExpression("1-Lerp_burn.f_lerp_result.get()+1", False, 0)
    param.setExpression("1-Lerp_burn.f_lerp_result.get()+1", False, 1)
    param.setExpression("1-Lerp_burn.f_lerp_result.get()+1", False, 2)
    param.setExpression("1-Lerp_burn.f_lerp_result.get()+1", False, 3)
    del param
    param = groupGrade5.getParam("multiply")
    param.setExpression("1-Lerp_burn.f_lerp_result.get()+1", False, 0)
    param.setExpression("1-Lerp_burn.f_lerp_result.get()+1", False, 1)
    param.setExpression("1-Lerp_burn.f_lerp_result.get()+1", False, 2)
    param.setExpression("1-Lerp_burn.f_lerp_result.get()+1", False, 3)
    del param
    param = groupGrade5.getParam("gamma")
    param.setExpression("Lerp_burn.f_lerp_result.get()", False, 0)
    param.setExpression("Lerp_burn.f_lerp_result.get()", False, 1)
    param.setExpression("Lerp_burn.f_lerp_result.get()", False, 2)
    param.setExpression("Lerp_burn.f_lerp_result.get()", False, 3)
    del param
    param = groupMerge2.getParam("disableNode")
    param.setExpression("not(thisGroup.do_weld.get())", False, 0)
    del param
    param = groupGrade_highlight.getParam("mix")
    param.setExpression("import numpy as np\r\n\r\ni = thisNode.f_input.get()\r\n\r\ni0 = thisNode.f_input_range.get()[0]\r\ni1 = thisNode.f_input_range.get()[1]\r\n\r\nr0 = thisNode.f_lerp_range.get()[0]\r\nr1 = thisNode.f_lerp_range.get()[1]\r\n\r\nir = [i0, i1]\r\nlr = [r0, r1]\r\n\r\ny_new = np.interp(i, ir, lr)\r\nret = y_new\r\n\r\n\r\n", True, 0)
    param.slaveTo(groupLerp_moisture.getParam("f_lerp_result"), 0, 0)
    del param
    param = groupGrade_shadow.getParam("mix")
    param.setExpression("import numpy as np\r\n\r\ni = thisNode.f_input.get()\r\n\r\ni0 = thisNode.f_input_range.get()[0]\r\ni1 = thisNode.f_input_range.get()[1]\r\n\r\nr0 = thisNode.f_lerp_range.get()[0]\r\nr1 = thisNode.f_lerp_range.get()[1]\r\n\r\nir = [i0, i1]\r\nlr = [r0, r1]\r\n\r\ny_new = np.interp(i, ir, lr)\r\nret = y_new\r\n\r\n\r\n", True, 0)
    param.slaveTo(groupLerp_moisture.getParam("f_lerp_result"), 0, 0)
    del param
    param = groupSwitch2_3.getParam("which")
    param.setExpression("thisGroup.do_burn_after.get() ", False, 0)
    del param
    param = groupLerp_height.getParam("i_input")
    param.setExpression("thisGroup.edge_falloff.get()", False, 0)
    del param
    param = groupLerp_height.getParam("i_lerp_result")
    param.setExpression("import numpy as np\r\n\r\ni = thisNode.i_input.get()\r\n\r\ni0 = thisNode.i_input_range.get()[0]\r\ni1 = thisNode.i_input_range.get()[1]\r\n\r\nr0 = thisNode.i_lerp_range.get()[0]\r\nr1 = thisNode.i_lerp_range.get()[1]\r\n\r\nir = [i0, i1]\r\nlr = [r0, r1]\r\n\r\ny_new = np.interp(i, ir, lr)\r\nret = y_new\r\n\r\n\r\n", True, 0)
    del param
    param = groupLerp_height.getParam("f_input")
    param.setExpression("thisGroup.height.get()", False, 0)
    del param
    param = groupLerp_height.getParam("f_lerp_result")
    param.setExpression("import numpy as np\r\n\r\ni = thisNode.f_input.get()\r\n\r\ni0 = thisNode.f_input_range.get()[0]\r\ni1 = thisNode.f_input_range.get()[1]\r\n\r\nr0 = thisNode.f_lerp_range.get()[0]\r\nr1 = thisNode.f_lerp_range.get()[1]\r\n\r\nir = [i0, i1]\r\nlr = [r0, r1]\r\n\r\ny_new = np.interp(i, ir, lr)\r\nret = y_new\r\n\r\n\r\n", True, 0)
    del param
    param = groupLerp_moisture.getParam("i_input")
    param.setExpression("thisGroup.edge_falloff.get()", False, 0)
    del param
    param = groupLerp_moisture.getParam("i_lerp_result")
    param.setExpression("import numpy as np\r\n\r\ni = thisNode.i_input.get()\r\n\r\ni0 = thisNode.i_input_range.get()[0]\r\ni1 = thisNode.i_input_range.get()[1]\r\n\r\nr0 = thisNode.i_lerp_range.get()[0]\r\nr1 = thisNode.i_lerp_range.get()[1]\r\n\r\nir = [i0, i1]\r\nlr = [r0, r1]\r\n\r\ny_new = np.interp(i, ir, lr)\r\nret = y_new\r\n\r\n\r\n", True, 0)
    del param
    param = groupLerp_moisture.getParam("f_input")
    param.setExpression("thisGroup.moisture.get()", False, 0)
    del param
    param = groupLerp_moisture.getParam("f_lerp_result")
    param.setExpression("import numpy as np\r\n\r\ni = thisNode.f_input.get()\r\n\r\ni0 = thisNode.f_input_range.get()[0]\r\ni1 = thisNode.f_input_range.get()[1]\r\n\r\nr0 = thisNode.f_lerp_range.get()[0]\r\nr1 = thisNode.f_lerp_range.get()[1]\r\n\r\nir = [i0, i1]\r\nlr = [r0, r1]\r\n\r\ny_new = np.interp(i, ir, lr)\r\nret = y_new\r\n\r\n\r\n", True, 0)
    del param
    param = groupGrade_shadow_2.getParam("mix")
    param.setExpression("import numpy as np\r\n\r\ni = thisNode.f_input.get()\r\n\r\ni0 = thisNode.f_input_range.get()[0]\r\ni1 = thisNode.f_input_range.get()[1]\r\n\r\nr0 = thisNode.f_lerp_range.get()[0]\r\nr1 = thisNode.f_lerp_range.get()[1]\r\n\r\nir = [i0, i1]\r\nlr = [r0, r1]\r\n\r\ny_new = np.interp(i, ir, lr)\r\nret = y_new\r\n\r\n\r\n", True, 0)
    param.slaveTo(groupLerp_moisture.getParam("f_lerp_result"), 0, 0)
    del param
    param = groupGrade_highlight_2.getParam("mix")
    param.setExpression("import numpy as np\r\n\r\ni = thisNode.f_input.get()\r\n\r\ni0 = thisNode.f_input_range.get()[0]\r\ni1 = thisNode.f_input_range.get()[1]\r\n\r\nr0 = thisNode.f_lerp_range.get()[0]\r\nr1 = thisNode.f_lerp_range.get()[1]\r\n\r\nir = [i0, i1]\r\nlr = [r0, r1]\r\n\r\ny_new = np.interp(i, ir, lr)\r\nret = y_new\r\n\r\n\r\n", True, 0)
    param.slaveTo(groupLerp_moisture.getParam("f_lerp_result"), 0, 0)
    del param
    param = groupSwitch_weld.getParam("which")
    param.setExpression("Lerp_height.f_lerp_result.get()", False, 0)
    del param
    param = groupReadMask.getParam("disableNode")
    param.setExpression("1-thisGroup.enableMask.get()", False, 0)
    del param
    param = groupReadMask.getParam("filename")
    groupBake_default_old.getParam("Read3filename").setAsAlias(param)
    del param
    param = groupMultiplyMask.getParam("maskInvert")
    param.setExpression("thisGroup.invertMask.get()", False, 0)
    del param
    param = groupMultiplyMask.getParam("disableNode")
    param.setExpression("1-thisGroup.enableMask.get()", False, 0)
    del param
    param = groupSwitch3_2.getParam("which")
    param.setExpression("thisGroup.maskFile.get()", False, 0)
    del param

    param = group.getParam("weight")
    param.setExpression("ret=round(thisNode.calories.get()+thisNode.calories_from_fat.get()+thisNode.trans_fat.get()+thisNode.monosaturated_fat.get()+thisNode.saturated_fat.get()+thisNode.sodium.get()+thisNode.cholesterol.get()+thisNode.complex_carb.get()+thisNode.dietary_fiber.get()+thisNode.sugar.get()+thisNode.added_sugars.get()+thisNode.protein.get()+((thisNode.vitamin_a.get()+thisNode.vitamin_b6.get()+thisNode.vitamin_b12.get()+thisNode.vitamin_e.get()+thisNode.biotin.get()+thisNode.folate.get()+thisNode.calcium.get()+thisNode.iron.get()+thisNode.pantothenic_acid.get()+thisNode.potassium.get()+thisNode.riboflavin.get()+thisNode.vitamin_d.get()+thisNode.thiamin.get()+thisNode.magnesium.get()+thisNode.selenium.get()+thisNode.zinc.get())/100),2)+(thisNode.vitamin_c.get()/10)+(thisNode.vitamin_k.get()/10)", True, 0)
    del param
    param = group.getParam("potassium")
    param.setExpression("x=round(thisNode.burn_amt.get())\r\ny=round(thisNode.burn_amt2.get())*.01 \r\nret=x+y", True, 0)
    del param
    param = group.getParam("vitamin_c")
    param.setExpression("thisNode.amplify.get()", False, 0)
    del param
    param = group.getParam("magnesium")
    param.setExpression("thisNode.do_burn_before.get()", False, 0)
    del param
    param = group.getParam("vitamin_b5")
    param.setExpression("thisNode.do_melt.get()", False, 0)
    del param
    param = group.getParam("vitamin_d")
    param.setExpression("thisNode.do_lumpiness.get()", False, 0)
    del param
    param = group.getParam("vitamin_b7")
    param.setExpression("thisNode.do_burn_after.get()", False, 0)
    del param
    param = group.getParam("cholesterol")
    param.setExpression("round(thisNode.clotting.get()/10,2)", False, 0)
    del param
    param = group.getParam("vitamin_a")
    param.setExpression("thisNode.thinning.get()", False, 0)
    param.slaveTo(group.getParam("thinning"), 0, 0)
    del param
    param = group.getParam("dietary_fiber")
    param.setExpression("thisNode.coagulation.get()", False, 0)
    param.slaveTo(group.getParam("coagulation"), 0, 0)
    del param
    param = group.getParam("vitamin_b6")
    param.setExpression("thisNode.absorption.get()/50", False, 0)
    param.slaveTo(group.getParam("absorption"), 0, 0)
    del param
    param = group.getParam("sugar")
    param.setExpression("x=round(thisNode.burn_amt.get())\r\ny=round(thisNode.burn_amt2.get())*.01 \r\nret=x+y", True, 0)
    param.slaveTo(group.getParam("burn_amt"), 0, 0)
    del param
    param = group.getParam("protein")
    param.setExpression("thisNode.burn_edges.get()/10", False, 0)
    param.slaveTo(group.getParam("burn_edges"), 0, 0)
    del param
    param = group.getParam("iron")
    param.setExpression("x=round(thisNode.caramelization.get())\r\ny=round(thisNode.caramelization2.get())*.01 \r\nret=x+y", True, 0)
    param.slaveTo(group.getParam("caramelization"), 0, 0)
    del param
    param = group.getParam("complex_carb")
    param.setExpression("thisNode.liquify.get()", False, 0)
    param.slaveTo(group.getParam("liquify"), 0, 0)
    del param
    param = group.getParam("selenium")
    param.setExpression("thisNode.do_separation.get()", False, 0)
    param.slaveTo(group.getParam("amplify"), 0, 0)
    del param
    param = group.getParam("vitamin_k")
    param.setExpression("thisNode.doMask.get()", False, 0)
    param.slaveTo(group.getParam("expand"), 0, 0)
    del param
    param = group.getParam("vitamin_b12")
    param.setExpression("thisNode.burn_edges.get()", False, 0)
    param.slaveTo(group.getParam("lumpy_big_mix"), 0, 0)
    del param
    param = group.getParam("calories_from_fat")
    param.setExpression("thisNode.lumpy_small_size.get()", False, 0)
    param.slaveTo(group.getParam("lumpy_big_size"), 0, 0)
    del param
    param = group.getParam("vitamin_e")
    param.setExpression("round(thisNode.lumpy_big_intensity.get()/10,2)", False, 0)
    param.slaveTo(group.getParam("lumpy_big_intensity"), 0, 0)
    del param
    param = group.getParam("zinc")
    param.setExpression("thisNode.lumpy_small_mix.get()*.1", False, 0)
    param.slaveTo(group.getParam("lumpy_small_mix"), 0, 0)
    del param
    param = group.getParam("saturated_fat")
    param.setExpression("thisNode.lumpy_small_size.get()", False, 0)
    param.slaveTo(group.getParam("lumpy_small_size"), 0, 0)
    del param
    param = group.getParam("trans_fat")
    param.setExpression("thisNode.lumpy_height.get()", False, 0)
    param.slaveTo(group.getParam("lumpy_height"), 0, 0)
    del param
    param = group.getParam("sodium")
    param.setExpression("thisNode.lumpy_mix.get()", False, 0)
    param.slaveTo(group.getParam("lumpy_mix"), 0, 0)
    del param
    param = group.getParam("monosaturated_fat")
    param.setExpression("round(thisNode.lumpy_wet.get()/5,1)", False, 0)
    param.slaveTo(group.getParam("lumpy_wet"), 0, 0)
    del param
    param = group.getParam("calcium")
    param.setExpression("thisNode.lumpy_rough.get()", False, 0)
    param.slaveTo(group.getParam("lumpy_rough"), 0, 0)
    del param
    param = group.getParam("riboflavin")
    param.setExpression("round(thisNode.edge_size.get(),)", False, 0)
    param.slaveTo(group.getParam("edge_size"), 0, 0)
    del param
    param = group.getParam("thiamin")
    param.setExpression("thisNode.edge_falloff.get()", False, 0)
    param.slaveTo(group.getParam("edge_falloff"), 0, 0)
    del param
    param = group.getParam("folate")
    param.setExpression("thisNode.thickness.get()", False, 0)
    param.slaveTo(group.getParam("thickness"), 0, 0)
    del param
    param = group.getParam("added_sugars")
    param.setExpression("round(thisNode.lumpy_small_size.get(),1)", False, 0)
    param.slaveTo(group.getParam("burn_amt2"), 0, 0)
    del param
    param = group.getParam("chromium")
    param.slaveTo(group.getParam("burn_edges2"), 0, 0)
    del param
    param = group.getParam("manganese")
    param.slaveTo(group.getParam("caramelization2"), 0, 0)
    del param
    param = group.getParam("biotin")
    param.setExpression("thisNode.do_burn_after.get()", False, 0)
    del param
    param = group.getParam("pantothenic_acid")
    param.setExpression("thisNode.do_melt.get()", False, 0)
    del param
    try:
        extModule = sys.modules["BakeExt"]
    except KeyError:
        extModule = None
    if extModule is not None and hasattr(extModule ,"createInstanceExt") and hasattr(extModule.createInstanceExt,"__call__"):
        extModule.createInstanceExt(app,group)
